namespace = coronation

############################
## Coronation Events - Maintenance
## 0001-0999
############################
## Ceremony Events
##
#
## Ceremony Events
# coronation.1000 - Host: A relative arrives early and criticizes your chosen options
# coronation.1010 - Host: You have an occasion to kickstart your Diplomacy/Seduce targeting efforts
# coronation.1030 - A good or bad omen happens: how do you react?
# coronation.1120 - A vassal decides to ask the Host to legitimize a bastard - By BWWalker01
# coronation.1130-1143 - Sabotage Intent: determining what to do - By BWWalker01
# coronation.1150 - Seduction Intent: target scouting
# coronation.1160 - Some peasants are at the gate of the festivity - what do you do?
# coronation.1190 - Religious guest complains about lavishness, luxury, wastes, and unchaste mingling
# coronation.1210 - Political talk with a fellow ruler
# coronation.2000-2015 - Claimant disrupts the coronation - By BWWalker01
#
## Banquet Events
# coronation.1040 - You make a new friend
# coronation.1050 - Someone catches fire from the torches
# coronation.1070 - Showing off exotic animals can go very well or very wrong
# coronation.1310 - A Friend Is Monopolizing Your Attention
# coronation.1320 - A rival seeks forgiveness


###############################
## Coronation Setup/Maintenance
## 0001 - 0009
## By BWWalker01
###############################

# CORONATION ARRIVAL
coronation.0001 = {
	type = activity_event
	title = coronation.0001.t
	desc = {
		desc = coronation.0001.desc_intro
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { this = scope:host }
					is_independent_ruler = no
					top_liege = scope:activity.special_guest:coronation_target
					OR = {
						has_relation_rival = scope:activity.activity_host
						opinion = {
							target = scope:activity.activity_host
							value < 0
						}
					}
				}
				desc = coronation.0001.dislikes_host_vassal
			}
			triggered_desc = {
				trigger = {
					NOR = {
						this = scope:host
						is_independent_ruler = no
						top_liege = scope:activity.special_guest:coronation_target
					}
					OR = {
						has_relation_rival = scope:activity.activity_host
						opinion = {
							target = scope:activity.activity_host
							value < 0
						}
					}
				}
				desc = coronation.0001.dislikes_host_other
			}
			triggered_desc = {
				trigger = {
					NOT = { this = scope:host }
					OR = {
						has_relation_rival = scope:activity.activity_host
						opinion = {
							target = scope:activity.activity_host
							value >= 40
						}
					}
				}
				desc = coronation.0001.likes_host
			}
			triggered_desc = {
				trigger = {
					this = scope:host
				}
				desc = coronation.0001.host
			}
			desc = coronation.0001.neutral
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					has_activity_intent = woo_attendee_intent
					intent_target.location ?= root.location
				}
				desc = coronation.0001.intent_woo_arrived
			}
			triggered_desc = {
				trigger = {
					exists = intent_target
					has_activity_intent = woo_attendee_intent
				}
				desc = coronation.0001.intent_woo
			}
			triggered_desc = {
				trigger = {
					has_activity_intent = murder_attendee_intent
					intent_target.location ?= root.location
				}
				desc = coronation.0001.intent_murder_arrived
			}
			triggered_desc = {
				trigger = {
					exists = intent_target
					has_activity_intent = murder_attendee_intent
				}
				desc = coronation.0001.intent_murder
			}
			triggered_desc = {
				trigger = {
					has_activity_intent = befriend_attendee_intent
					intent_target.location ?= root.location
				}
				desc = coronation.0001.intent_befriend_arrived
			}
			triggered_desc = {
				trigger = {
					exists = intent_target
					has_activity_intent = befriend_attendee_intent
				}
				desc = coronation.0001.intent_befriend
			}
			triggered_desc = {
				trigger = {
					has_activity_intent = diplomatic_intent
					intent_target.location ?= root.location
				}
				desc = coronation.0001.intent_diplomacy_arrived
			}
			triggered_desc = {
				trigger = {
					exists = intent_target
					has_activity_intent = diplomatic_intent
				}
				desc = coronation.0001.intent_diplomacy
			}
			triggered_desc = {
				trigger = {
					exists = intent_target
					has_activity_intent = legitimize_bastard_intent
				}
				desc = coronation.0001.intent_legitimize_bastard
			}
			triggered_desc = {
				trigger = {
					has_activity_intent = sabotage_coronation_intent
				}
				desc = coronation.0001.intent_sabotage_coronation
			}
			#DISABLED until addition of "vie" intent.
			#triggered_desc = {
			#	trigger = {
			#		has_activity_intent = vie_for_council_seat_intent
			#		scope:host = { is_male = yes }
			#	}
			#	desc = coronation.0001.intent_vie_male
			#}
			#triggered_desc = {
			#	trigger = {
			#		has_activity_intent = vie_for_council_seat_intent
			#		scope:host = { is_female = yes }
			#	}
			#	desc = coronation.0001.intent_vie_female
			#}
			triggered_desc = {
				trigger = {
					this = scope:host
					NOT = { scope:activity.special_guest:coronation_officiant.location = root.location }
				}
				desc = coronation.0001.waiting_for_officiant
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				NOT = { this = scope:activity.special_guest:coronation_target }
				has_activity_intent = sabotage_coronation_intent
			}
			animation = scheme
		}
		triggered_animation = {
			trigger = {
				NOT = { this = scope:activity.special_guest:coronation_target }
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value < 0
				}
			}
			animation = boredom
		}
		triggered_animation = {
			trigger = {
				NOT = { this = scope:activity.special_guest:coronation_target }
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value >= 40
				}
			}
			animation = happiness
		}
		animation = personality_content
	}
	center_portrait = {
		character = scope:center_portrait
		animation = reception_groom_left
	}
	right_portrait = {
		character = scope:right_portrait
		animation = wedding_groom_right
	}
	lower_right_portrait = {
		character = scope:lower_right_portrait
	}
	cooldown = { days = 1 }

	trigger = {
		NOT = {
			scope:activity = {
				has_variable = coronation_already_started
			}
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		scope:activity.activity_location = {
			barony = {
				save_scope_as = barony
			}
			county = {
				save_scope_as = county
			}
		}
		if = {
			limit = {
				exists = scope:activity.special_guest:coronation_target
				NOT = { root = scope:activity.special_guest:coronation_target }
			}
			scope:activity.special_guest:coronation_target = { save_scope_as = center_portrait }
		}
		else_if = {
			limit = {
				involved_activity = {
					any_attending_character = {
						is_adult = yes
						NOR = {
							this = root
							this = scope:host
						}
						is_travelling = no
					}
				}
			}
			involved_activity = {
				random_attending_character = {
					limit = {
						is_adult = yes
						NOR = {
							this = root
							this = scope:host
						}
						is_travelling = no
					}
					save_scope_as = center_portrait
				}
			}
		}
		else = {
			create_character = {
				template = servant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				save_scope_as = center_portrait
				after_creation = {
					scope:center_portrait = {
						add_to_activity = scope:activity
					}
				}
			}
		}
		if = {
			limit = {
				exists = root.intent_target
				root.intent_target.location ?= root.location
				NOT = { root.intent_target = scope:center_portrait }
				NOT = {
					root = {
						has_activity_intent = legitimize_bastard_intent
					}
				}
			}
			root.intent_target = { save_scope_as = right_portrait }
		}
		else_if = {
			limit = {
				exists = scope:activity.special_guest:coronation_officiant
				scope:activity.special_guest:coronation_officiant.location ?= root.location
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						this = root
						this = scope:center_portrait
					}
					is_alive = yes
					is_incapable = no
					is_imprisoned = no
				}
			}
			scope:activity.special_guest:coronation_officiant = { save_scope_as = right_portrait }
		}
		else_if = {
			limit = {
				scope:activity  = {
					any_attending_character = {
						is_adult = yes
						NOR = {
							this = root
							this = scope:host
							this = scope:center_portrait
						}
						is_travelling = no
					}
				}
			}
			scope:activity  = {
				random_attending_character = {
					limit = {
						is_adult = yes
						NOR = {
							this = root
							this = scope:host
							this = scope:center_portrait
						}
						is_travelling = no
					}
					save_scope_as = right_portrait
				}
			}
		}
		else = {
			create_character = {
				template = servant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				save_scope_as = right_portrait
				after_creation = {
					scope:right_portrait = {
						add_to_activity = scope:activity
					}
				}
			}
		}
		if = {
			limit = {
				exists = root.intent_target
				root.intent_target.location ?= root.location
				root = {
					has_activity_intent = legitimize_bastard_intent
				}
			}
			root.intent_target = { save_scope_as = lower_right_portrait }
		}
		else_if = {
			limit = {
				root = scope:host
				exists = scope:activity.special_guest:coronation_officiant
				NOT = { scope:activity.special_guest:coronation_officiant.location = root.location }
			}
			scope:activity.special_guest:coronation_officiant = { save_scope_as = lower_right_portrait }
		}
	}

	option = {
		trigger = {
			NOT = {
				root = scope:activity.special_guest:coronation_officiant
			}
		}
		name = {
			trigger = {
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value < 0
				}
				NOT = { has_activity_intent = sabotage_coronation_intent }
			}
			text = coronation.0001.a.bad
		}
		name = {
			trigger = {
				has_activity_intent = sabotage_coronation_intent
			}
			text = coronation.0001.a.sabotage
		}
		name = {
			trigger = {
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value >= 0
				}
				NOT = { has_activity_intent = sabotage_coronation_intent }
			}
			text = coronation.0001.a.good
		}
		add_prestige = miniscule_prestige_gain
		ai_chance = {
			base = 100
		}
	}

	option = {
		trigger = {
			root = scope:activity.special_guest:coronation_officiant
		}
		name = {
			trigger = {
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value < 0
				}
			}
			text = coronation.0001.a.bad
		}
		name = {
			trigger = {
				opinion = {
					target = scope:activity.special_guest:coronation_target
					value >= 0
				}
			}
			text = coronation.0001.a.good
		}
		add_prestige = miniscule_prestige_gain
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_officiant_arrives_log
				tags = { good }
				score = 20
				character = root
			}
		}
	}

	after = {
		if = {
			limit = {
				this = scope:activity.special_guest:coronation_target
			}
			if = {
				limit = {
					NOT = {
						any_character_artifact = {
							artifact_slot_type = helmet
						}
					}
				}
				trigger_event = agot_activity_commission_crown.0001
			}
			custom_tooltip = coronation.0001.after.tt
			scope:activity = {
				#The officiant needs to be notified immediately
				#If they decline this saves a lot of event spamming and unnecessary travel departures
				scope:activity.special_guest:coronation_officiant = {
					trigger_event = coronation.0003
				}
				every_invited_character = {
					limit = {
						NOT = { this = scope:host }
						OR = {
							is_ai = no
							has_character_flag = officiant_on_start
						}
					}
					#Every invited guest who is neither the ruler nor officiant will be notified after ruler arrives at the destination
					trigger_event = {
						id = coronation.0003
						days = { 2 5 }
					}
				}
			}
		}
		if = {
			limit = {
				this = scope:activity.special_guest:coronation_officiant
			}
			scope:activity.special_guest:coronation_target = {
				trigger_event = {
					id = coronation.0005
					days = { 10 15 } # Upped this to give time in case of MP games, AND in case of needing to let # agot_activity_commission_crown.0001 run.
				}
			}
		}
	}
}

#CHOOSING A NEW OFFICIANT
coronation.0002 = {
	type = activity_event
	title = coronation.0002.t

	desc = {
		first_valid = {
			triggered_desc = { #Default
				trigger = {
					scope:activity = {
						exists = scope:activity.special_guest:coronation_officiant
					}
				}
				desc = coronation.0002.desc
			}
			triggered_desc = { #Officiant Fallback
				trigger = {
					NOT = {
						scope:activity = {
							exists = scope:activity.special_guest:coronation_officiant
						}
					}
				}
				desc = coronation.0002.desc_no_officiant
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_target
		animation = stress
	}
	center_portrait = {
		character = scope:old_coronation_officiant
		triggered_animation = {
			trigger = {
				scope:old_coronation_officiant = {
					is_alive = no
				}
			}
			animation = dead
		}
		animation = idle
	}

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:host
		this = scope:host
		scope:activity.special_guest:coronation_officiant = {
			OR = {
				is_alive = no
				is_incapable = yes
				is_imprisoned = yes
				has_character_flag = removed_as_officiant
			}
		}
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		intent_target = { save_scope_as = intent_target }
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					has_character_flag = removed_as_officiant
					NOT = { has_character_flag = already_replaced }
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = old_coronation_officiant
				add_character_flag = already_replaced
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = removed_as_officiant
						has_character_flag = officiant
						NOT = { has_character_flag = already_replaced }
						NOT = {
							has_character_flag = officiant_on_start
						}
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = removed_as_officiant
						has_character_flag = officiant
						NOT = { has_character_flag = already_replaced }
						NOT = {
							has_character_flag = officiant_on_start
						}
					}
					save_scope_as = old_coronation_officiant
					add_character_flag = already_replaced
				}
			}
		}
		else_if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOT = {
						has_character_flag = removed_as_officiant
					}
					OR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = old_coronation_officiant
			}
		}
		else = {
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
						NOR = {
							has_character_flag = officiant_on_start
							has_character_flag = removed_as_officiant
						}
					}
					save_scope_as = old_coronation_officiant
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						NOT = { this = scope:old_coronation_officiant }
					}
				}
				scope:coronation_target = {
					is_ai = no
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						NOT = { this = scope:old_coronation_officiant }
						NOT = { this = scope:coronation_target }
						is_adult = yes
						is_alive = yes
						is_incapable = no
						OR = {
							is_consort_of = scope:coronation_target
							is_close_family_of = scope:coronation_target
						}
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
				every_attending_character = {
					limit = {
						NOT = { this = scope:old_coronation_officiant }
						NOT = { this = scope:coronation_target }
						is_adult = yes
						is_alive = yes
						is_incapable = no
						highest_held_title_tier = tier_kingdom
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
				every_attending_character = {
					limit = {
						NOT = { this = scope:old_coronation_officiant }
						NOT = { this = scope:coronation_target }
						is_adult = yes
						is_alive = yes
						is_incapable = no
						highest_held_title_tier = tier_duchy
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
				every_attending_character = {
					limit = {
						NOT = { this = scope:old_coronation_officiant }
						NOT = { this = scope:coronation_target }
						is_adult = yes
						is_alive = yes
						is_incapable = no
						highest_held_title_tier = tier_county
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
			}
		}

		if = {
			limit = {
				scope:coronation_target = {
					is_ai = yes
				}
			}
			officiant_ai_choose_character_from_list_effect = { LIST_TYPE = variable LIST = possible_characters MAX = 1 }

			if = {
				limit = { exists = scope:ai_selected_char }

				scope:ai_selected_char = {
					root = { set_variable = { name = si_selected_character value = prev } }
					set_variable = si_selecting_character
				}
			}
		}

		ordered_in_list = {
			variable = possible_characters
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = new_coronation_officiant
		}
	}

	option = {
		name = coronation.0002.a

		trigger = { exists = scope:new_coronation_officiant }

		var:si_selected_character = {
			save_scope_as = new_coronation_officiant
			remove_variable = si_selecting_character
		}
		custom_tooltip = coronation.0002.a.tt
		if = {
			limit = {
				scope:new_coronation_officiant = {
					this = scope:coronation_target.faith.religious_head
				}
			}
			custom_tooltip = coronation.0002.a.tt_hof
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					is_powerful_vassal_of = scope:coronation_target
				}
			}
			custom_tooltip = coronation.0002.a.tt_pv
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					dynasty = scope:coronation_target.dynasty
				}
			}
			custom_tooltip = coronation.0002.a.tt_dynn
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					is_consort_of = scope:coronation_target
				}
			}
			custom_tooltip = coronation.0002.a.tt_consort
		}
		scope:new_coronation_officiant = {
			add_opinion = {
				target = scope:coronation_target
				modifier = chose_me_to_crown_opinion
			}
		}

		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Intent Target should crown me
	option = {
		name = coronation.0002.b
		intent_target = { save_scope_as = new_coronation_officiant }

		trigger = {
			OR = {
				has_activity_intent = befriend_attendee_intent
				has_activity_intent = woo_attendee_intent
				has_activity_intent = diplomatic_intent
			}
			intent_target ?= {
				NOR = {
					has_character_flag = removed_as_officiant
					has_character_flag = officiant_on_start
					has_character_flag = officiant
				}
			}
		}
		custom_tooltip = available_because_intent_tt
		custom_tooltip = coronation.0002.a.tt
		if = {
			limit = {
				scope:new_coronation_officiant = {
					this = scope:coronation_target.faith.religious_head
				}
			}
			custom_tooltip = coronation.0002.a.tt_hof
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					is_powerful_vassal_of = scope:coronation_target
				}
			}
			custom_tooltip = coronation.0002.a.tt_pv
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					dynasty = scope:coronation_target.dynasty
				}
			}
			custom_tooltip = coronation.0002.a.tt_dynn
		}
		if = {
			limit = {
				scope:new_coronation_officiant = {
					is_consort_of = scope:coronation_target
				}
			}
			custom_tooltip = coronation.0002.a.tt_consort
		}

		if = {
			limit = { has_activity_intent = woo_attendee_intent }
			progress_towards_lover_effect = {
				REASON = friend_coronation_made_officiant
				CHARACTER = scope:new_coronation_officiant
				OPINION = default_lover_opinion
			}
		}
		if = {
			limit = { has_activity_intent = befriend_attendee_intent }
			progress_towards_friend_effect = {
				REASON = friend_coronation_made_officiant
				CHARACTER = scope:new_coronation_officiant
				OPINION = default_friend_opinion
			}
		}
		else = {
			scope:new_coronation_officiant = {
				add_opinion = {
					target = scope:coronation_target
					modifier = chose_me_to_crown_opinion
				}
			}
		}

		ai_chance = {
			base = 1000
		}
	}

	# I will crown myself
	option = {
		name = coronation.0002.c
		custom_tooltip = coronation.0002.c.tt
		add_legitimacy = major_legitimacy_loss
		add_character_flag = crowning_self
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_trait = arrogant
			}
			modifier = {
				add = -1000
				has_trait = just
			}
			modifier = {
				add = 10
				has_trait = ambitious
			}
			modifier = {
				add = 50
				has_trait = brave
			}
			modifier = {
				add = -1000
				has_trait = shy
			}
			modifier = {
				add = -1000
				has_trait = craven
			}
		}
	}

	after = {
		scope:activity = {
			set_variable = has_backup_officiant
		}
		scope:new_coronation_officiant = {
			add_character_flag = officiant
			if = {
				limit = {
					has_variable = si_selected_character
				}
				remove_variable = si_selected_character
			}
		}
		clear_variable_list = possible_characters
	}
}

# LETTERS TO THE REALM
coronation.0003 = {
	type = letter_event
	opening = {
		desc = coronation.0003.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:sender = {
						has_title = title:e_the_iron_throne
					}
				}
				desc = coronation.0003.desc_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					scope:sender = {
						NOT = {
							has_title = title:e_the_iron_throne
						}
					}
				}
				desc = coronation.0003.desc_other
			}
		}
		first_valid = {
			triggered_desc = { #Officiant
				trigger = {
					this = scope:activity.special_guest:coronation_officiant
				}
				desc = coronation.0003.desc_officiant
			}
			triggered_desc = { #Vassals
				trigger = {
					is_independent_ruler = no
					is_vassal_or_below_of = scope:sender
				}
				desc = coronation.0003.desc_vassal
			}
			triggered_desc = { #Everyone else
				trigger = {
					NOR = {
						is_independent_ruler = no
						is_vassal_or_below_of = scope:sender
						this = scope:activity.special_guest:coronation_officiant
					}
				}
				desc = coronation.0003.desc_guest
			}
		}
	}
	sender = scope:sender

	trigger = {
		NOT = { exists = involved_activity }
		OR = {
			is_ai = no
			is_busy_in_events_unlocalised = no
		}
		is_at_war = no
		is_imprisoned = no
		is_healthy = yes
		NOR = {
			exists = var:booked_for_a_party
			exists = var:engaged_in_single_combat
		}
		NOT = { exists = var:is_handling_coronation_invitation }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		if = {
			limit = {
				NOT = { exists = involved_activity }
				OR = {
					is_ai = no
					is_busy_in_events_unlocalised = no
				}
				is_at_war = no
				is_imprisoned = no
				is_healthy = yes
				NOR = {
					exists = var:booked_for_a_party
					exists = var:engaged_in_single_combat
				}
				exists = var:is_handling_coronation_invitation
			}
			trigger_event = {
				id = coronation.0003
				days = 1
			}
		}
	}

	immediate = {
		save_scope_as = recipient
		scope:activity.activity_host = {
			save_scope_as = sender
		}
		scope:activity.activity_location = {
			barony = {
				save_scope_as = barony
			}
			county = {
				save_scope_as = county
			}
		}
		set_variable = {
			name = is_handling_coronation_invitation
			value = scope:sender
			days = 20
		}
	}

	option = {
		name = coronation.0003.a
		if = {
			limit = {
				is_ai = yes
			}
			accept_activity_invite = scope:activity
			set_variable = {
				name = booked_for_a_party
				value = scope:sender
				days = 20
			}
			trigger_event = travel_events.1010
		}
		else = {
			open_view = {
				view = activity_list_window
				player = scope:recipient
			}
		}
		if = {
			limit = {
				scope:recipient = scope:activity.special_guest:coronation_officiant
			}
			stress_impact = {
				ambitious = major_stress_loss
				just = major_stress_loss
				reclusive = major_stress_gain
			}
		}
		else = {
			stress_impact = {
				reclusive = major_stress_gain
				just = major_stress_loss
			}
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:sender
				multiplier = 1.25
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							scope:recipient = { ai_boldness < 0 }
						}
						value = 1.5
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:recipient = { ai_rationality > 0 }
						}
						value = 1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:recipient = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
							scope:sender = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = 3.0
					}
					else_if = {
						limit = {
							scope:recipient = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
						}
						value = 1.75
					}
					else_if = {
						limit = {
							scope:recipient = { #If AI is NOT honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor < 0
							}
							scope:sender = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = 1.0
					}
					else = { #If not honorable and refusal is not a crime, then they take their chances
						value = -0.5
					}
				}
			}
			modifier = {
				add = 125
				top_liege = scope:sender
				has_dread_level_towards = {
					target = scope:sender
					level = 1
				}
			}
			modifier = {
				add = 250
				top_liege = scope:sender
				has_dread_level_towards = {
					target = scope:sender
					level = 2
				}
			}
			modifier = {
				add = 1000
				this = scope:activity.special_guest:coronation_officiant
			}
		}
	}

	option = {
		name = coronation.0003.b
		trigger = {
			NOT = {
				scope:recipient = scope:activity.special_guest:coronation_officiant
			}
		}
		trigger_event = coronation.0004
		ai_chance = {
			base = 0
			modifier = {
				add = 50
				is_healthy = no
			}
		}
	}

	option = {
		name = coronation.0003.c
		decline_activity_invite = scope:activity
		trigger = {
			OR = {
				AND = {
					scope:recipient = scope:activity.special_guest:coronation_officiant
					is_ai = no
				}
				AND = {
					NOT = { scope:recipient = scope:activity.special_guest:coronation_officiant }
					is_ai = no
				}
			}
		}
		if = {
			limit = {
				is_vassal_or_below_of = scope:sender
				NOT = {
					scope:recipient = scope:activity.special_guest:coronation_officiant
				}
			}
			scope:sender = {
				send_interface_toast = {
					title = coronation.0003.c.tt_refusal
					left_icon = scope:recipient
					add_opinion = {
						modifier = treachery_opinion
						opinion = -80
						target = root
					}
				}
			}
		}
		if = { #Officiant should be able to refuse without being a criminal
			limit = {
				scope:recipient = scope:activity.special_guest:coronation_officiant
			}
			scope:recipient = {
				add_character_flag = refused_to_be_officiant
			}
			scope:sender = {
				send_interface_toast = {
					title = coronation.0003.c.tt_officiant_refusal
					add_opinion = {
						modifier = refused_to_be_officiant_opinion
						opinion = -80
						target = root
					}
				}
			}
			hidden_effect = {
				scope:sender = {
					add_gold = var:coronation_gold_recoup_value
				}
			}
		}
		if = {
			limit = {
				scope:recipient = scope:activity.special_guest:coronation_officiant
			}
			stress_impact = {
				ambitious = major_stress_gain
				just = major_stress_gain
				reclusive = minor_stress_loss
			}
		}
		else = {
			stress_impact = {
				just = major_stress_gain
				reclusive = minor_stress_loss
			}
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:sender
				multiplier = -1.25
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							scope:recipient = { ai_boldness < 0 }
						}
						value = -1.5
					}
					else_if = {
						limit = {
							scope:recipient = { ai_boldness > 0 }
						}
						value = 0.5
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:recipient = { ai_rationality > 0 }
						}
						value = -1.5
					}
					else_if = {
						limit = {
							scope:recipient = { ai_rationality < 0 }
						}
						value = 0.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:recipient = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
							scope:sender = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = -3.0
					}
					else_if = {
						limit = {
							scope:recipient = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
						}
						value = -1.75
					}
					else_if = {
						limit = {
							scope:recipient = { #If AI is NOT honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor < 0
							}
							scope:sender = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = -1.0
					}
					else = { #If not honorable and refusal is not a crime, then they take their chances
						value = 0.5
					}
				}
			}
			modifier = {
				add = -125
				top_liege = scope:sender
				has_dread_level_towards = {
					target = scope:sender
					level = 1
				}
			}
			modifier = {
				add = -250
				top_liege = scope:sender
				has_dread_level_towards = {
					target = scope:sender
					level = 2
				}
			}
			modifier = {
				add = -200
				scope:sender = {
					any_vassal_or_below = { this = scope:recipient }
					has_realm_law_flag = vassal_refusal_is_treason
				}
			}
		}
	}

	after = {
		remove_variable = is_handling_coronation_invitation
	}
}

coronation.0004 = {
	type = character_event
	title = coronation.0004.t
	desc = coronation.0004.desc
	theme = court
	left_portrait = {
		character = root
		animation = personality_callous
	}
	right_portrait = {
		character = scope:castellan
		animation = personality_content
	}
	lower_left_portrait = {
		character = scope:potential_representative_1
		trigger = {
			exists = scope:potential_representative_1
		}
	}
	lower_center_portrait = {
		character = scope:potential_representative_2
		trigger = {
			exists = scope:potential_representative_2
		}
	}
	lower_right_portrait = {
		character = scope:potential_representative_3
		trigger = {
			exists = scope:potential_representative_3
		}
	}
	immediate = {
		play_music_cue = mx_cue_positive_effect
		if = {
			limit = {
				exists = cp:councillor_castellan
			}
			cp:councillor_castellan = {
				save_scope_as = castellan
			}
		}
		scope:activity = {
			scope:host = { save_scope_as = coronation_target }
		}
		every_living_character = {
			limit = {
				in_diplomatic_range = scope:host
				#AGOT Added
				NOT = { government_has_flag = government_is_nw }
				NOT = { has_government = ruins_government }
				NOT = { exists = involved_activity }
				bannable_serving_diarch_trigger = no
				is_at_war = no
				is_imprisoned = no
				NOR = {
					exists = var:booked_for_a_party
					exists = var:engaged_in_single_combat
				}
				# AGOT Added
				is_human = yes
				is_adult = yes
				is_available = yes
				OR = {
					is_close_or_extended_family_of = root
					is_councillor_of = root
					is_courtier_of = root
					is_vassal_of = root
				}
				liege = root
			}
			add_to_list = potential_representatives
		}
		random_in_list = {
			list = potential_representatives			
			limit = {
				is_healthy = yes
				is_ai = yes
				is_close_or_extended_family_of = liege
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
				is_councillor_of = liege
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
			}
			save_scope_as = potential_representative_1
		}
		random_in_list = {
			list = potential_representatives
			limit = {
				is_healthy = yes
				is_ai = yes
				is_close_or_extended_family_of = liege
				NOT = {
					this = scope:potential_representative_1
				}
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
				is_vassal_of = liege
				NOT = {
					this = scope:potential_representative_1
				}
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
				NOT = {
					this = scope:potential_representative_1
				}
			}
			save_scope_as = potential_representative_2
		}
		random_in_list = {
			list = potential_representatives
			limit = {
				is_healthy = yes
				is_ai = yes
				is_close_or_extended_family_of = liege
				NOR = {
					this = scope:potential_representative_1
					this = scope:potential_representative_2
				}
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
				is_vassal_of = liege
				NOR = {
					this = scope:potential_representative_1
					this = scope:potential_representative_2
				}
			}
			alternative_limit = {
				is_healthy = yes
				is_ai = yes
				NOR = {
					this = scope:potential_representative_1
					this = scope:potential_representative_2
				}
			}
			save_scope_as = potential_representative_3
		}
	}
	option = {
		name = coronation.0004.a
		scope:potential_representative_1 = {
			custom_tooltip = {
				text = coronation.0004.a.tt
				add_to_activity = scope:activity
			}
			set_variable = {
				name = booked_for_a_party
				value = scope:sender
				days = 20
			}
			add_character_flag = coronation_representative
		}
		hidden_effect = {
			decline_activity_invite = scope:activity
		}
	}
	option = {
		name = coronation.0004.b
		scope:potential_representative_2 = {
			custom_tooltip = {
				text = coronation.0004.b.tt
				add_to_activity = scope:activity
			}
			set_variable = {
				name = booked_for_a_party
				value = scope:sender
				days = 20
			}
			add_character_flag = coronation_representative
		}
		hidden_effect = {
			decline_activity_invite = scope:activity
		}
	}
	option = {
		name = coronation.0004.c
		scope:potential_representative_3 = {
			custom_tooltip = {
				text = coronation.0004.c.tt
				add_to_activity = scope:activity
			}
			set_variable = {
				name = booked_for_a_party
				value = scope:sender
				days = 20
			}
			add_character_flag = coronation_representative
		}
		hidden_effect = {
			decline_activity_invite = scope:activity
		}
	}
	#option = {
		#Never Mind
	#	name = coronation.0004.d
	#	custom_tooltip = coronation.0004.d.tt
	#}
	after = {
		every_in_list = {
			list = potential_representatives
			remove_from_list = potential_representatives
		}
	}
}

# Crown Selection
coronation.0005 = {
	type = activity_event
	title = coronation.0005.t

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_variable = misplaced_crown
					}
				}
				desc = coronation.0005.desc_after_sabotage
			}
			triggered_desc = {
				trigger = {
					scope:activity.special_guest:coronation_officiant = {
						has_trait = high_septon
					}
				}
				desc = coronation.0005.desc_high_septon
			}
			desc = coronation.0005.desc
		}
	}
	theme = family
	left_portrait = {
		character = root
		animation = throne_room_conversation_3
	}
	center_portrait = {
		character = scope:coronation_officiant
		animation = personality_content
		camera = camera_event_right
	}

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_artifact_selection"
		container = "custom_widgets_container"
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					OR = {
						is_alive = yes
						is_incapable = no
						is_imprisoned = no
						NOT = {
							has_character_flag = removed_as_officiant
						}
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = coronation_officiant
			}
		}
		if = {
			limit = {
				scope:coronation_target = {
					any_character_artifact = {
						artifact_slot_type = helmet
					}
					is_ai = no
				}
			}
			scope:coronation_target = {
				every_character_artifact = {
					limit = {
						artifact_slot_type = helmet
					}
					root = {
						add_to_variable_list = {
							name = possible_artifacts
							target = prev
						}
						if = {
							limit = {
								NOT = { has_variable = selected_artifact }
							}
							set_variable = { name = selected_artifact value = prev }
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:coronation_target = {
					is_ai = yes
				}
			}
			ai_choose_crown_effect = {
				SELECTOR = scope:coronation_target
			}
		}
	}

	option = {
		name = coronation.0005.a
		trigger = {
			is_ai = no
		}

		var:selected_artifact = {
			save_scope_as = selected_crown_for_coronation
		}
		custom_tooltip = coronation.0005.a.tt
		scope:selected_crown_for_coronation = {
			set_variable = coronation_crown
		}

		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.0005.a
		trigger = {
			is_ai = yes
		}
		scope:selected_crown_for_coronation = {
			set_variable = coronation_crown
		}
		custom_tooltip = coronation.0005.a.tt

		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	after = {
		clear_variable_list = possible_artifacts
		remove_variable = selected_artifact
		random_character_artifact = {
			limit = {
				exists = var:selected_artifact
				artifact_slot_type = helmet
			}
			remove_variable = selected_artifact
		}
		if = { #Since we have a new crown
			limit = {
				scope:activity = {
					has_variable = misplaced_crown
				}
			}
			scope:activity = {
				remove_variable = misplaced_crown
			}
		}
	}
}

coronation.0006 = {
	type = character_event
	title = coronation.0006.t
	desc = coronation.0006.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_callous
	}
	cooldown = { days = 1 }

	trigger = {
		OR = {
			highest_held_title_tier = tier_empire
			iron_throne_valid_trigger = yes
		}
		is_landed = yes
		OR = {
			is_at_war = yes
			agot_mw_is_in_realm_at_megawar = yes
		}
		NOT = { exists = var:pre_war_liege }
		#AGOT Added
		NOR = {
			government_has_flag = government_is_nw
			has_government = ruins_government
			has_government = free_city_government
			has_government = republic_government
		}
		root = {
			OR = {
				has_inactive_trait = not_had_coronation
				has_character_flag = not_had_coronation
			}
		}
	}

	option = {
		name = coronation.0006.a
		custom_tooltip = coronation.0006.a.tt
		add_character_modifier = {
			modifier = coronation_rushed_modifier
			years = 5
		}
		if = {
			limit = {
				root = {
					has_character_modifier = uncoronated_modifier
				}
			}
			root = { remove_character_modifier = uncoronated_modifier }
		}
		if = {
			limit = {
				root = {
					has_character_modifier = uncoronated_child_modifier
				}
			}
			root = { remove_character_modifier = uncoronated_child_modifier }
		}
		add_legitimacy = medium_legitimacy_loss
		hidden_effect = {
			if = {
				limit = {
					has_inactive_trait = not_had_coronation
				}
				make_trait_active = not_had_coronation
				remove_trait = not_had_coronation
			}
			if = {
				limit = {
					has_character_flag = not_had_coronation
				}
				remove_character_flag = not_had_coronation
			}
		}
		if = {
			limit = {
				any_character_artifact = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
			}
			root = {
				random_character_artifact = {
					limit = {
						artifact_slot_type = helmet
						has_variable = coronation_crown
					}
					equip_artifact_to_owner_replace = yes
				}
			}
		}
		else_if = {
			limit = {
				any_character_artifact = {
					artifact_slot_type = helmet
				}
			}
			root = {
				random_character_artifact = {
					limit = {
						artifact_slot_type = helmet
					}
					equip_artifact_to_owner_replace = yes
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 1000
				OR = {
					has_trait = impatient
					has_trait = arbitrary
					has_trait = fickle
					has_trait = callous
					has_trait = sadistic
					has_trait = paranoid
				}
			}
		}
	}

	option = {
		name = coronation.0006.b
		custom_tooltip = coronation.0006.b.tt
		ai_chance = {
			base = 100
			modifier = {
				add = 1000
				OR = {
					has_trait = patient
					has_trait = just
					has_trait = diligent
				}
			}
		}
	}

	after = {
		if = {
			limit = {
				any_character_artifact = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
			}
			every_character_artifact = {
				limit = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
				remove_variable = coronation_crown
			}
		}
	}
}

coronation.0007 = {
	hidden = yes

	trigger = {
		scope:title = primary_title
		scope:title.tier = tier_empire
		government_has_flag = government_is_feudal
		NOR = {
			has_inactive_trait = not_had_coronation
			has_character_flag = not_had_coronation
		}
	}

	immediate = {
		if = {
			limit = {
				root = {
					age >= 16
				}
			}
			root = {
				add_character_modifier = uncoronated_modifier
				add_character_flag = not_had_coronation
			}
		}
		else = {
			root = {
				add_character_modifier = uncoronated_child_modifier
				add_character_flag = not_had_coronation
			}
		}
		trigger_event = {
			id = coronation.0010
			days = { 10 30 }
		}
	}
}

coronation.0008 = {
	type = character_event
	title = coronation.0008.t
	desc = coronation.0008.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	cooldown = { days = 1 }

	trigger = {
		OR = {
			highest_held_title_tier = tier_empire
			iron_throne_valid_trigger = yes
		}
		is_landed = yes
		is_ruler = yes
		#AGOT Added
		NOR = {
			government_has_flag = government_is_nw
			has_government = ruins_government
			has_government = free_city_government
			has_government = republic_government
		}
		root = {
			OR = {
				has_inactive_trait = not_had_coronation
				has_character_flag = not_had_coronation
			}
			has_character_modifier = uncoronated_child_modifier
			age >= 16
		}
	}

	immediate = {
		remove_character_modifier = uncoronated_child_modifier
		add_character_modifier = uncoronated_modifier
	}

	option = {
		name = coronation.0008.a
	}
}

coronation.0009 = {
	hidden = yes

	trigger = {
		OR = {
			has_inactive_trait = not_had_coronation #Left just in case
			has_character_flag = not_had_coronation #Replaces the above
			has_character_modifier = uncoronated_child_modifier
			has_character_modifier = uncoronated_modifier
		}
		scope:title.tier = tier_empire
		primary_title.tier < tier_empire
	}

	immediate = {
		if = {
			limit = { has_inactive_trait = not_had_coronation }
			make_trait_active = not_had_coronation
			remove_trait = not_had_coronation
		}
		if = {
			limit = { has_character_flag = not_had_coronation }
			remove_character_flag = not_had_coronation
		}
		if = {
			limit = { has_character_modifier = uncoronated_child_modifier }
			remove_character_modifier = uncoronated_child_modifier
		}
		if = {
			limit = { has_character_modifier = uncoronated_modifier }
			remove_character_modifier = uncoronated_modifier
		}
	}
}

coronation.0010 = {
	hidden = yes

	trigger = {
		OR = {
			has_inactive_trait = not_had_coronation #Left just in case
			has_character_flag = not_had_coronation #Replaces the above
			has_character_modifier = uncoronated_child_modifier
			has_character_modifier = uncoronated_modifier
		}
		scope:title.tier = tier_empire
		is_ai = yes
		is_available = yes
	}

	immediate = {
		if = {
			limit = {
				OR = {
					highest_held_title_tier = tier_empire
					iron_throne_valid_trigger = yes
				}
				is_landed = yes
				trigger_if = {
					limit = {
						is_ai = yes
					}
					is_at_war = no
					#AGOT Added
					agot_mw_is_in_realm_at_megawar = no
				}
				has_dlc_feature = tours_and_tournaments
				has_dlc_feature = advanced_activities
				#AGOT Added
				government_has_flag = government_is_feudal
			}
			ai_attempt_to_host_activity = activity_coronation
		}
		else_if = {
			limit = {
				OR = {
					highest_held_title_tier = tier_empire
					iron_throne_valid_trigger = yes
				}
				is_landed = yes
				trigger_if = {
					limit = {
						is_ai = yes
					}
					is_at_war = no
					#AGOT Added
					agot_mw_is_in_realm_at_megawar = no
				}
				NOT = {
					has_dlc_feature = tours_and_tournaments
				}
				#AGOT Added
				government_has_flag = government_is_feudal
			}
			ai_attempt_to_host_activity = activity_no_dlc_coronation
		}
	}
}

# ON START - CEREMONY

coronation.0100 = {
	type = activity_event
	title = coronation.0100.t
	desc = {
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = education_diplomacy_3
							has_trait = education_diplomacy_4
							has_trait = education_diplomacy_5
							has_trait = education_stewardship_3
							has_trait = education_stewardship_4
							has_trait = education_stewardship_5
							has_trait = diplomat
							has_trait = administrator
							has_trait = ambitious
						}
					}
					desc = coronation.0100.desc_diplo
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = education_learning_3
							has_trait = education_learning_4
							has_trait = education_learning_5
							has_trait = scholar
							has_trait = theologian
							has_trait = zealous
							has_character_modifier = bp1_superstition_modifier
						}
					}
					desc = coronation.0100.desc_religious
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = lifestyle_reveler
							has_trait = drunkard
						}
					}
					desc = coronation.0100.desc_drunkard
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = seducer
							has_trait = lustful
							has_trait = rakish
							has_trait = deviant
							has_trait = adulterer
							has_trait = fornicator
						}
					}
					desc = coronation.0100.desc_seducer
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = chaste
							has_trait = humble
							has_trait = shy
							has_trait = reclusive
						}
					}
					desc = coronation.0100.desc_shy
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = wrathful
							has_trait = arrogant
							has_trait = callous
							has_trait = irritable
							has_trait = impatient
						}
					}
					desc = coronation.0100.desc_arrogant
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = paranoid
							has_trait = craven
						}
					}
					desc = coronation.0100.desc_paranoid
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						OR = {
							has_trait = maimed
							has_trait = one_eyed
							has_trait = one_legged
							has_trait = disfigured
							has_trait = scarred
							has_trait = blind
							has_trait = beauty_bad
							has_trait = physique_bad
							has_trait = clubfooted
							has_trait = hunchbacked
							has_trait = scaly
						}
					}
					desc = coronation.0100.desc_appearance
				}
			}
			desc = coronation.0100.desc_guest
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:spectator
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:coronation_target
					value < 0
				}
			}
			animation = disapproval
		}
		animation = happiness
	}
	center_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				has_trait = paranoid
			}
			animation = shame
		}
		triggered_animation = {
			trigger = {
				has_trait = drunkard
			}
			animation = toast
		}
		animation = personality_bold
	}
	right_portrait = {
		character = scope:other_guest
		camera = camera_event_left_wedding
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:coronation_target
					value < 0
				}
			}
			animation = dismissal
		}
		animation = happiness
	}

	immediate = {
		scope:activity.special_guest:coronation_target = { save_scope_as = coronation_target }
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = other_guest
			}
		}
		else_if = {
			limit = {
				NOT = {
					root = scope:coronation_target
				}
				scope:activity = {
					any_attending_character = {
						is_spouse_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_spouse_of = scope:coronation_target
					}
					save_scope_as = other_guest
				}
			}
		}
		if = {
			limit = {
				NOR = {
					root = scope:coronation_target
					root = scope:other_guest
				}
				root ?= { is_participant_in_activity = scope:activity }
			}
			root = { save_scope_as = spectator }
		}
		else_if = {
			limit = {
				NOR = {
					root = scope:coronation_target
					root = scope:other_guest
				}
				scope:activity = {
					any_attending_character = {
						is_spouse_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_spouse_of = scope:coronation_target
					}
					save_scope_as = spectator
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					root = scope:coronation_target
					root = scope:other_guest
				}
				scope:host.primary_heir ?= { is_participant_in_activity = scope:activity }
			}
			scope:host.primary_heir = { save_scope_as = spectator }
		}
		else_if = {
			limit = {
				NOR = {
					root = scope:coronation_target
					root = scope:other_guest
				}
				scope:activity = {
					any_powerful_vassal = {
						is_participant_in_activity = scope:activity
					}
				}
			}
			scope:activity = {
				random_powerful_vassal = {
					limit = {
						is_participant_in_activity = scope:activity
					}
				}
				save_scope_as = spectator
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_activity_intent = sabotage_coronation_intent
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_activity_intent = sabotage_coronation_intent
					}
					add_to_list = potential_saboteurs
				}
			}
			ordered_in_list = {
				list = potential_saboteurs
				position = 0
				order_by = {
					if = {
						limit = { #We want players to have first dibs. Otherwise the AI will be selected
							is_ai = no
						}

						add = 1000
					}
					if = { #Rivals are favored
						limit = {
							any_relation = {
								type = rival
								this = scope:coronation_target
							}
						}

						add = 100
					}
					if = { #Intrigue characters with low honor are favored
						limit = {
							intrigue >= 25
							ai_honor <= 50
						}

						add = 100
					}
					if = { #Bold, intrigue characters are favored
						limit = {
							intrigue >= 25
							ai_boldness >= 50
						}

						add = 100
					}
					if = { #No compassionate or honorable characters (Ned Stark, that means you)
						limit = {
							OR = {
								ai_compassion > 0
								ai_honor > 0
							}
						}

						add = -1000
					}
				}
				limit = {
					is_participant_in_activity = scope:activity
				}
				add_character_flag = designated_saboteur
			}
		}
	}

	option = {
		name = coronation.0100.a
	}

	after = {
		every_in_list = {
			list = potential_saboteurs
			remove_from_list = potential_saboteurs
		}
	}
}

# ON ENTER - CEREMONY

# For everyone
coronation.0150 = {
	type = activity_event
	title = coronation.0150.t
	desc = {
		first_valid = {
			triggered_desc = { #Ruler, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_ct_intro
			}
			triggered_desc = { #Ruler, no crown
				trigger = {
					root = scope:coronation_target
					NOT = {
						scope:coronation_target = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_ct_no_crown_intro
			}
			triggered_desc = { #Self Crowner, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_self_crowner_intro
			}
			triggered_desc = { #Self Crowner, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_self_crowner_no_crown_intro
			}
			triggered_desc = { #Officiant
				trigger = {
					NOT = { root = scope:coronation_target }
					root = scope:officiant
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_officiant_intro
			}
			triggered_desc = { #Officiant
				trigger = {
					NOT = { root = scope:coronation_target }
					root = scope:officiant
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_officiant_no_crown_intro
			}
			triggered_desc = { #Guests
				trigger = {
					NOT = { root = scope:coronation_target }
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_intro
			}
			triggered_desc = { #Guests, no crown
				trigger = {
					NOR = {
						root = scope:coronation_target
						root = {
							has_character_flag = designated_saboteur
						}
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_no_crown_intro
			}
			triggered_desc = { #Guests
				trigger = {
					NOT = { root = scope:coronation_target }
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_self_crowner_intro
			}
			triggered_desc = { #Guests, no crown self crown
				trigger = {
					NOR = {
						root = scope:coronation_target
						root = {
							has_character_flag = designated_saboteur
						}
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_self_crowner_no_crown_intro
			}
			triggered_desc = { #Saboteur, no crown
				trigger = {
					NOT = {
						root = scope:coronation_target
					}
					root = {
						has_character_flag = designated_saboteur
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_saboteur_no_crown_intro
			}
			triggered_desc = { #Saboteur, no crown self crown
				trigger = {
					NOR = {
						root = scope:coronation_target
					}
					root = {
						has_character_flag = designated_saboteur
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_saboteur_self_crowner_no_crown_intro
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:coronation_target.primary_title = title:e_the_iron_throne
					NOT = {
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_proclaimation_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					scope:coronation_target.primary_title = title:e_the_iron_throne
					scope:coronation_target = {
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_proclaimation_seven_kingdoms_self
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:coronation_target.primary_title = title:e_the_iron_throne }
					NOT = {
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_proclaimation_other
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:coronation_target.primary_title = title:e_the_iron_throne }
					scope:coronation_target = {
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_proclaimation_other_self
			}
		}
		first_valid = {
			triggered_desc = { #Ruler, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_ct_outro
			}
			triggered_desc = { #Ruler, no crown
				trigger = {
					root = scope:coronation_target
					NOT = {
						scope:coronation_target = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_ct_no_crown_outro
			}
			triggered_desc = { #Self Crowner, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_self_crowner_outro
			}
			triggered_desc = { #Self Crowner, with crown
				trigger = {
					root = scope:coronation_target
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
						has_character_flag = crowning_self
					}
				}
				desc = coronation.0150.desc_self_crowner_no_crown_outro
			}
			triggered_desc = { #Officiant
				trigger = {
					NOT = { root = scope:coronation_target }
					root = scope:officiant
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_officiant_outro
			}
			triggered_desc = { #Officiant
				trigger = {
					NOT = { root = scope:coronation_target }
					root = scope:officiant
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_officiant_no_crown_outro
			}
			triggered_desc = { #Guests
				trigger = {
					NOT = { root = scope:coronation_target }
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						NOT = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_outro
			}
			triggered_desc = { #Guests, no crown
				trigger = {
					NOR = {
						root = scope:coronation_target
						root = {
							has_character_flag = designated_saboteur
						}
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_no_crown_outro
			}
			triggered_desc = { #Saboteur, no crown
				trigger = {
					NOT = { root = scope:coronation_target }
					root = {
						has_character_flag = designated_saboteur
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
					}
				}
				desc = coronation.0150.desc_saboteur_no_crown_outro
			}
			triggered_desc = { #Guests
				trigger = {
					NOT = { root = scope:coronation_target }
					scope:coronation_target = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_self_crowner_outro
			}
			triggered_desc = { #Guests
				trigger = {
					NOR = {
						root = scope:coronation_target
						root = {
							has_character_flag = designated_saboteur
						}
					}
					scope:coronation_target = {
						NOT = {
							any_character_artifact = {
								artifact_slot_type = helmet
								has_variable = coronation_crown
							}
						}
						scope:coronation_target = {
							has_character_flag = crowning_self
						}
					}
				}
				desc = coronation.0150.desc_guests_self_crowner_no_crown_outro
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:celebrating_guest
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:coronation_target
					value > 0
				}
			}
			animation = throne_room_applaud_1
		}
		triggered_animation = {
			trigger = {
				scope:coronation_target = {
					NOT = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
						}
					}
				}
				has_character_flag = designated_saboteur
			}
			animation = scheme
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:coronation_target
					value < 0
				}
			}
			animation = disapproval
		}
		animation = content
	}
	center_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				exists = scope:officiant
			}
			animation = throne_room_bow_1
		}
		animation = personality_bold
		camera = camera_event_right_wedding
	}
	right_portrait = {
		character = scope:officiant
		animation = wedding_priest
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		OR = {
			scope:activity = {
				any_attending_character = {
					has_character_flag = officiant
				}
			}
			AND = {
				exists = scope:activity.special_guest:coronation_officiant
				scope:activity = {
					any_attending_character = {
						scope:activity.special_guest:coronation_officiant = {
							is_alive = yes
							is_incapable = no
							is_imprisoned = no
						}
					}
				}
			}
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		base_legitimacy_intent_reward = yes
		scope:activity.special_guest:coronation_target = {
			random_character_artifact = {
				limit = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
				save_scope_as = coronation_target_crown
			}
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
						has_character_flag = removed_as_officiant
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
						NOT = { has_character_flag = removed_as_officiant }
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
						NOT = { has_character_flag = removed_as_officiant }
					}
					save_scope_as = officiant
				}
			}
		}
		if = {
			limit = {
				root = scope:coronation_target
			}
			custom_tooltip = {
				text = agot_was_crowned_first_tooltip
			}
		}
		else = {
			custom_tooltip = {
				text = agot_was_crowned_third_tooltip
			}
		}
		if = {
			limit = {
				root = {
					is_ai = no
					NOR = {
						this = scope:coronation_target
						this = scope:activity.special_guest:coronation_target
						this = scope:officiant
						this = scope:activity.special_guest:coronation_officiant
					}
				}
			}
			root = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_spouse ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.primary_spouse = scope:activity.special_guest:coronation_officiant
					scope:host.primary_spouse = scope:officiant
				}
			}
			scope:host.primary_spouse = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.cp:councillor_castellan ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.cp:councillor_castellan = scope:activity.special_guest:coronation_officiant
					scope:host.cp:councillor_castellan = scope:officiant
				}
			}
			scope:host.cp:councillor_castellan = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_heir ?= { is_participant_in_activity = scope:activity }
				scope:host.primary_heir ?= { is_adult = yes }
				NOR = {
					scope:host.primary_heir = scope:activity.special_guest:coronation_officiant
					scope:host.primary_heir = scope:officiant
				}
			}
			scope:host.primary_heir = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_powerful_vassal_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_powerful_vassal_of = scope:coronation_target
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else = {
			limit = {
				scope:activity = {
					any_attending_character = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
	}

	option = {
		name = coronation.0150.a
		trigger = {
			scope:coronation_target = { is_male = yes }
			NOT = { root = scope:coronation_target }
		}
		show_as_tooltip = {
			if = {
				limit = {
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				custom_tooltip = {
					text = coronation.0150.a.tt_seven_kingdoms
				}
			}
			else_if = {
				limit = {
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				custom_tooltip = {
					text = coronation.0150.a.tt_other
				}
			}
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_completed_log
					tags = { good }
					score = 20
					character = scope:coronation_target
					target = scope:officiant

					scope:coronation_target = {
						if = {
							limit = {
								scope:activity = {
									has_variable = misplaced_crown
								}
							}
							give_nickname = nick_the_crownless
							if = {
								limit = {
									root = {
										has_character_flag = designated_saboteur
										has_activity_intent = sabotage_coronation_intent
									}
								}
								root = { complete_activity_intent = yes }
							}
						}
						if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
								}
							}
							add_piety = major_piety_gain
							add_legitimacy = major_legitimacy_gain
						}
						else_if = {
							limit = {
								scope:officiant = {
									dynasty ?= scope:coronation_target.dynasty
								}
							}
							dynasty = { add_dynasty_prestige = major_dynasty_prestige_gain }
						}
						else_if = {
							limit = {
								scope:officiant = {
									is_powerful_vassal_of = scope:coronation_target
								}
							}
							add_legitimacy = major_legitimacy_gain
						}
						else = {
							add_prestige = major_prestige_gain
						}
						if = {
							limit = {
								scope:coronation_target = {
									has_character_modifier = uncoronated_modifier
								}
							}
							remove_character_modifier = uncoronated_modifier
						}
						if = {
							limit = {
								scope:coronation_target = {
									has_character_modifier = uncoronated_child_modifier
								}
							}
							remove_character_modifier = uncoronated_child_modifier
						}
					}

					scope:officiant = {
						if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
									is_valid_for_legitimacy_change = yes
								}
							}
							add_piety = major_piety_gain
							add_legitimacy = major_legitimacy_gain
						}
						else_if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
								}
							}
							add_piety = major_piety_gain
						}
						add_prestige = major_prestige_gain
						if = {
							limit = {
								NOT = { this = scope:host.faith.religious_head }
								NOT = {
									scope:activity = {
										has_variable = misplaced_crown
									}
								}
							}
							if = {
								limit = {
									scope:coronation_target = { is_male = yes }
								}
								scope:officiant = {
									give_nickname = nick_the_kingmaker
								}
							}
							else_if = {
								limit = {
									scope:coronation_target = { is_female = yes }
								}
								scope:officiant = {
									give_nickname = nick_the_queenmaker
								}
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				this = scope:officiant
			}
			create_character_memory = {
				type = performed_coronation
				participants = {
					coronation_target = scope:coronation_target
				}
			}
		}
		else = {
			create_character_memory = {
				type = witnessed_coronation
				participants = {
					officiant = scope:officiant
					coronation_target = scope:coronation_target
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.0150.b
		trigger = {
			scope:coronation_target = { is_female = yes }
			NOT = { root = scope:coronation_target }
		}
		show_as_tooltip = {
			if = {
				limit = {
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				custom_tooltip = {
					text = coronation.0150.b.tt_seven_kingdoms
				}
			}
			else_if = {
				limit = {
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				custom_tooltip = {
					text = coronation.0150.b.tt_other
				}
			}
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_completed_log
					tags = { good }
					score = 20
					character = scope:coronation_target
					target = scope:officiant

					scope:coronation_target = {
						if = {
							limit = {
								scope:activity = {
									has_variable = misplaced_crown
								}
							}
							give_nickname = nick_the_crownless
							if = {
								limit = {
									root = {
										has_character_flag = designated_saboteur
										has_activity_intent = sabotage_coronation_intent
									}
								}
								root = { complete_activity_intent = yes }
							}
						}
						if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
								}
							}
							add_piety = major_piety_gain
							add_legitimacy = major_legitimacy_gain
						}
						else_if = {
							limit = {
								scope:officiant = {
									dynasty ?= scope:coronation_target.dynasty
								}
							}
							dynasty = { add_dynasty_prestige = major_dynasty_prestige_gain }
						}
						else_if = {
							limit = {
								scope:officiant = {
									is_powerful_vassal_of = scope:coronation_target
								}
							}
							add_legitimacy = major_legitimacy_gain
						}
						else = {
							add_prestige = major_prestige_gain
						}
						if = {
							limit = {
								scope:coronation_target = {
									has_character_modifier = uncoronated_modifier
								}
							}
							remove_character_modifier = uncoronated_modifier
						}
						if = {
							limit = {
								scope:coronation_target = {
									has_character_modifier = uncoronated_child_modifier
								}
							}
							remove_character_modifier = uncoronated_child_modifier
						}
					}

					scope:officiant = {
						if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
									is_valid_for_legitimacy_change = yes
								}
							}
							add_piety = major_piety_gain
							add_legitimacy = major_legitimacy_gain
						}
						else_if = {
							limit = {
								scope:officiant = {
									this ?= scope:coronation_target.faith.religious_head
								}
							}
							add_piety = major_piety_gain
						}
						add_prestige = major_prestige_gain
						if = {
							limit = {
								NOT = { this = scope:host.faith.religious_head }
								NOT = {
									scope:activity = {
										has_variable = misplaced_crown
									}
								}
							}
							if = {
								limit = {
									scope:coronation_target = { is_male = yes }
								}
								scope:officiant = {
									give_nickname = nick_the_kingmaker
								}
							}
							else_if = {
								limit = {
									scope:coronation_target = { is_female = yes }
								}
								scope:officiant = {
									give_nickname = nick_the_queenmaker
								}
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				this = { has_character_flag = officiant }
			}
			create_character_memory = {
				type = performed_coronation
				participants = {
					coronation_target = scope:coronation_target
				}
			}
		}
		else = {
			create_character_memory = {
				type = witnessed_coronation
				participants = {
					officiant = scope:officiant
					coronation_target = scope:coronation_target
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.0150.c
		trigger = {
			root = scope:coronation_target
		}
		if = {
			limit = {
				scope:coronation_target.location = {
					OR = {
						has_building = the_red_keep_01
						has_building = the_red_keep_02
						has_building = the_red_keep_03
					}
				}
			}
			custom_tooltip = {
				text = coronation.0150.c.tt_seven_kingdoms
			}
		}
		else_if = {
			limit = {
				scope:coronation_target.location = {
					NOR = {
						has_building = the_red_keep_01
						has_building = the_red_keep_02
						has_building = the_red_keep_03
					}
				}
			}
			custom_tooltip = {
				text = coronation.0150.c.tt_other
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_completed_log
				tags = { good }
				score = 20
				character = scope:coronation_target
				target = scope:officiant

				scope:coronation_target = {
					if = {
						limit = {
							scope:activity = {
								has_variable = misplaced_crown
							}
						}
						give_nickname = nick_the_crownless
						hidden_effect = { #Completes the saboteur's intent if not done already
							if = {
								limit = {
									scope:activity = {
										any_attending_character = {
											has_character_flag = designated_saboteur
											has_activity_intent = sabotage_coronation_intent
										}
									}
								}
								scope:activity = {
									every_attending_character = {
										limit = {
											has_character_flag = designated_saboteur
											has_activity_intent = sabotage_coronation_intent
										}
										complete_activity_intent = yes
									}
								}
							}
						}
					}
					if = {
						limit = {
							scope:officiant = {
								this ?= scope:coronation_target.faith.religious_head
							}
						}
						add_piety = major_piety_gain
						add_legitimacy = major_legitimacy_gain
					}
					else_if = {
						limit = {
							scope:officiant = {
								dynasty ?= scope:coronation_target.dynasty
							}
						}
						dynasty = { add_dynasty_prestige = major_dynasty_prestige_gain }
					}
					else_if = {
						limit = {
							scope:officiant = {
								is_powerful_vassal_of = scope:coronation_target
							}
						}
						add_legitimacy = major_legitimacy_gain
					}
					else = {
						add_prestige = major_prestige_gain
					}
					if = {
						limit = {
							scope:coronation_target = {
								has_character_modifier = uncoronated_modifier
							}
						}
						remove_character_modifier = uncoronated_modifier
					}
					if = {
						limit = {
							scope:coronation_target = {
								has_character_modifier = uncoronated_child_modifier
							}
						}
						remove_character_modifier = uncoronated_child_modifier
					}
				}

				scope:officiant = {
					if = {
						limit = {
							scope:officiant = {
								this ?= scope:coronation_target.faith.religious_head
								is_valid_for_legitimacy_change = yes
							}
						}
						add_piety = major_piety_gain
						add_legitimacy = major_legitimacy_gain
					}
					else_if = {
						limit = {
							scope:officiant = {
								this ?= scope:coronation_target.faith.religious_head
							}
						}
						add_piety = major_piety_gain
					}
					add_prestige = major_prestige_gain
					if = {
						limit = {
							NOT = { this = scope:host.faith.religious_head }
							NOT = {
								scope:activity = {
									has_variable = misplaced_crown
								}
							}
						}
						if = {
							limit = {
								scope:coronation_target = { is_male = yes }
							}
							scope:officiant = {
								give_nickname = nick_the_kingmaker
							}
						}
						else_if = {
							limit = {
								scope:coronation_target = { is_female = yes }
							}
							scope:officiant = {
								give_nickname = nick_the_queenmaker
							}
						}
					}
				}
			}
		}
		create_character_memory = {
			type = was_coronated
			participants = {
				officiant = scope:officiant
			}
		}
		hidden_effect = {
			scope:coronation_target = {
				if = { #This is just in case
					limit = {
						has_inactive_trait = not_had_coronation
					}
					make_trait_active = not_had_coronation
					remove_trait = not_had_coronation
				}
				if = {
					limit = {
						has_character_flag = not_had_coronation
					}
					remove_character_flag = not_had_coronation
				}
			}
		}
		if = {
			limit = {
				scope:coronation_target = {
					has_title = title:e_the_iron_throne
					OR = {
						has_trait = paranoid #Aerys
						has_trait = sadistic #Maegor/Joff
						has_trait = lunatic_1
						stress >= high_stress #Viserys/Rhaenyra
					}
				}
			}
			hidden_effect = {
				random_list = {
					33 = {
						root = { add_character_flag = unworthy_ruler }
					}
					67 = {
						root = { remove_character_flag = unworthy_ruler }
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					root = scope:coronation_target
					exists = scope:coronation_target_crown
				}
				root = {
					scope:coronation_target_crown = {
						equip_artifact_to_owner_replace = yes
						remove_variable = coronation_crown
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_variable = sabotaged_throne
				}
				root = scope:coronation_target
			}
			scope:coronation_target = {
				trigger_event = coronation.1140
			}
		}
	}
}

# For everyone - Sits Iron Throne
coronation.0151 = {
	type = activity_event
	title = coronation.0151.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = scope:coronation_target
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
					NOT = {
						scope:activity = {
							has_variable = sabotaged_throne
						}
					}
				}
				desc = coronation.0151.desc_intro_ruler_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					root = scope:coronation_target
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
					NOT = {
						scope:activity = {
							has_variable = sabotaged_throne
						}
					}
				}
				desc = coronation.0151.desc_intro_ruler_other
			}
			triggered_desc = {
				trigger = {
					root = scope:coronation_target
					scope:activity = {
						has_variable = sabotaged_throne
					}
					scope:coronation_target = {
						has_character_flag = ruler_slipped
					}
				}
				desc = coronation.0151.desc_intro_ruler_slips
			}
			triggered_desc = {
				trigger = {
					root = scope:coronation_target
					scope:activity = {
						has_variable = sabotaged_throne
					}
					scope:coronation_target = {
						has_character_flag = ruler_recovered
					}
				}
				desc = coronation.0151.desc_intro_ruler_recovers
			}
			triggered_desc = {
				trigger = {
					NOT = {
						root = scope:coronation_target
					}
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
					NOT = {
						scope:activity = {
							has_variable = sabotaged_throne
						}
					}
				}
				desc = coronation.0151.desc_intro_guest_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					NOT = {
						root = scope:coronation_target
					}
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
					NOT = {
						scope:activity = {
							has_variable = sabotaged_throne
						}
					}
				}
				desc = coronation.0151.desc_intro_guest_other
			}
			triggered_desc = {
				trigger = {
					NOT = {
						root = scope:coronation_target
					}
					scope:activity = {
						has_variable = sabotaged_throne
					}
					scope:coronation_target = {
						has_variable = ruler_slipped
					}
				}
				desc = coronation.0151.desc_intro_guest_slips
			}
			triggered_desc = {
				trigger = {
					NOT = {
						root = scope:coronation_target
					}
					scope:activity = {
						has_variable = sabotaged_throne
					}
					scope:coronation_target = {
						has_variable = ruler_recovered
					}
				}
				desc = coronation.0151.desc_intro_guest_recovers
			}
		}
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						scope:coronation_target = { has_character_flag = unworthy_ruler }
					}
					desc = coronation.0151.desc_unworthy
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						NOT = {
							scope:coronation_target = {
								has_character_flag = unworthy_ruler
							}
						}
						scope:coronation_target.location = {
							OR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
					desc = coronation.0151.desc_worthy
				}
				triggered_desc = {
					trigger = {
						root = scope:coronation_target
						NOT = {
							scope:coronation_target = {
								has_character_flag = unworthy_ruler
							}
						}
						scope:coronation_target.location = {
							NOR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
					desc = coronation.0151.desc_other
				}
			}
			random_valid = {
				triggered_desc = {
					trigger = {
						NOT = { root = scope:coronation_target }
						scope:coronation_target = { has_character_flag = unworthy_ruler }
					}
					desc = coronation.0151.desc_unworthy_guest
				}
				triggered_desc = {
					trigger = {
						NOT = { root = scope:coronation_target }
						NOT = {
							scope:coronation_target = {
								has_character_flag = unworthy_ruler
							}
						}
						scope:coronation_target.location = {
							OR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
					desc = coronation.0151.desc_worthy_guest
				}
				triggered_desc = {
					trigger = {
						NOT = { root = scope:coronation_target }
						NOT = {
							scope:coronation_target = {
								has_character_flag = unworthy_ruler
							}
						}
						scope:coronation_target.location = {
							NOR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
					desc = coronation.0151.desc_other_guest
				}
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:celebrating_guest
		triggered_animation = {
			trigger = {
				scope:coronation_target = {
					has_character_flag = unworthy_ruler
				}
			}
			animation = disgust
		}
		animation = personality_content
	}
	center_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				scope:coronation_target = {
					has_character_flag = unworthy_ruler
				}
			}
			animation = fear
		}
		animation = personality_bold
		camera = camera_event_right_wedding
	}
	right_portrait = {
		character = scope:officiant
		triggered_animation = {
			trigger = {
				scope:coronation_target = {
					has_character_flag = unworthy_ruler
				}
			}
			animation = disgust
		}
		animation = throne_room_applaud_1
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		OR = {
			scope:activity = {
				any_attending_character = {
					has_character_flag = officiant
				}
			}
			AND = {
				exists = scope:activity.special_guest:coronation_officiant
				scope:activity = {
					any_attending_character = {
						scope:activity.special_guest:coronation_officiant = {
							is_alive = yes
							is_incapable = no
							is_imprisoned = no
						}
					}
				}
			}
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		base_legitimacy_intent_reward = yes
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
					}
					save_scope_as = officiant
				}
			}
		}
		if = {
			limit = {
				scope:coronation_target = {
					has_character_flag = unworthy_ruler
				}
				root = scope:coronation_target
			}
			scope:coronation_target = {
				add_character_flag = cut_by_throne
				random_list = {
					74 = {
						add_trait = wounded_1
					}
					25 = {
						add_trait = wounded_2
					}
					1 = { #Get Maegor'd loser
						death = {
							death_reason = death_iron_throne
						}
					}
				}
				every_vassal = {
					custom = custom.every_vassal
					add_opinion = {
						target = scope:coronation_target
						modifier = cut_on_throne_opinion
					}
				}
				every_councillor = {
					add_opinion = {
						target = scope:coronation_target
						modifier = cut_on_throne_opinion
					}
				}
			}
		}
		if = {
			limit = {
				root = {
					is_ai = no
					NOR = {
						this = scope:coronation_target
						this = scope:activity.special_guest:coronation_target
						this = scope:officiant
						this = scope:activity.special_guest:coronation_officiant
					}
				}
			}
			root = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_spouse ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.primary_spouse = scope:activity.special_guest:coronation_officiant
					scope:host.primary_spouse = scope:officiant
				}
			}
			scope:host.primary_spouse = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.cp:councillor_castellan ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.cp:councillor_castellan = scope:activity.special_guest:coronation_officiant
					scope:host.cp:councillor_castellan = scope:officiant
				}
			}
			scope:host.cp:councillor_castellan = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_heir ?= { is_participant_in_activity = scope:activity }
				scope:host.primary_heir ?= { is_adult = yes }
				NOR = {
					scope:host.primary_heir = scope:activity.special_guest:coronation_officiant
					scope:host.primary_heir = scope:officiant
				}
			}
			scope:host.primary_heir = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_powerful_vassal_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_powerful_vassal_of = scope:coronation_target
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else = {
			limit = {
				scope:activity = {
					any_attending_character = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
							this = scope:coronation_target
							this = scope:activity.special_guest:coronation_target
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
	}

	option = {
		name = coronation.0151.a
		trigger = {
			NOT = { root = scope:coronation_target }
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.0151.b
		trigger = {
			root = scope:coronation_target
		}
		if = {
			limit = {
				scope:coronation_target = {
					has_character_flag = unworthy_ruler
				}
			}
			hidden_effect = {	#Make all weak claims on your titles into strong claims.
				every_held_title = {
					save_temporary_scope_as = abdicator_title
					every_claimant = {
						limit = { has_weak_claim_on = scope:abdicator_title }
						make_claim_strong = scope:abdicator_title
					}
				}
			}
			custom_tooltip = stress_threshold.3411.l.tt
		}
		else_if = {
			limit = {
				scope:coronation_target = { has_activity_intent = promote_rule_intent }
			}
			scope:coronation_target = {
				add_legitimacy = 100
				add_prestige = 250
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				root = {
					has_trait = stubborn
				}
				add = 1000
			}
			modifier = {
				root = {
					has_trait = cynical
				}
				add = 100
			}
			modifier = {
				root = {
					has_trait = brave
				}
				add = 100
			}
		}
	}

	option = {
		name = coronation.0151.c
		trigger = {
			scope:coronation_target = { has_character_flag = unworthy_ruler }
			root = scope:coronation_target
		}
		ai_chance = {
			base = 0
		}
		scope:activity = {
			set_variable = coronation_invalidated_ruler_abdicated
		}
		#Account for stress.
		add_stress = medium_stress_impact_gain

		#You abdicate.
		scope:coronation_target.dynasty ?= {
			add_dynasty_prestige_level = -1
		}
		every_vassal = {
			limit = {
				opinion = {	#They've gotta not completely hate you to be annoyed by this.
					target = root
					value >= medium_negative_opinion
				}
				NOR = {	#Various relations either support you or already hated you.
					has_relation_rival = root
					has_relation_friend = root
					has_relation_lover = root
					has_trait = ambitious	#Ambitious peeps are actually ok with a change of leader.
				}
			}
			custom = stress_threshold.3411.l.list
			add_opinion = {
				modifier = stress_abdicated_opinion
				opinion = -80
				target = root
			}
		}
		hidden_effect = {	#Make all weak claims on your titles into strong claims.
			every_held_title = {
				save_temporary_scope_as = abdicator_title
				every_claimant = {
					limit = { has_weak_claim_on = scope:abdicator_title }
					make_claim_strong = scope:abdicator_title
				}
			}
		}
		custom_tooltip = stress_threshold.3411.l.tt
		depose = yes
	}

	after = {
		if = {
			limit = {
				NOR = {
					this = scope:coronation_target
					has_character_flag = paid_homage
					has_character_flag = coronation_representative
				}
				NOT = {
					scope:activity = {
						has_variable = coronation_invalidated_ruler_abdicated
					}
				}
			}
			trigger_event = {
				id = coronation.0152 # Finishes homage for all vassals
				days = 1
			}
		}
		else_if = {
			limit = {
				has_character_flag = coronation_representative
				NOR = {
					this = scope:coronation_target
					has_character_flag = paid_homage
				}
				NOT = {
					scope:activity = {
						has_variable = coronation_invalidated_ruler_abdicated
					}
				}
			}
			trigger_event = {
				id = coronation.0153 # Finishes homage for all representatives
				days = 1
			}
		}
		if = {
			limit = {
				root = scope:coronation_target
				scope:coronation_target = {
					has_character_flag = ruler_slipped
				}
			}
			scope:coronation_target = {
				remove_character_flag = ruler_slipped
			}
		}
		if = {
			limit = {
				root = scope:coronation_target
				scope:coronation_target = {
					has_character_flag = ruler_recovered
				}
			}
			scope:coronation_target = {
				remove_character_flag = ruler_recovered
			}
		}
	}
}

# Homage Event

# For every vassal except ruler
coronation.0152 = {
	type = activity_event
	title = coronation.0152.t
	desc = coronation.0152.desc
	theme = coronation_homage_activity
	left_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				opinion = {
					target = root
					value > 0
				}
			}
			animation = reception_groom_left
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = root
					value < 0
				}
			}
			animation = dismissal
		}
	}
	right_portrait = {
		character = scope:vassal
		animation = throne_room_bow_1
	}

	weight_multiplier = {
		base = 1
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		is_landed = yes
		is_independent_ruler = no
		highest_held_title_tier >= tier_county
		NOT = {
			has_character_flag = paid_homage
		}
		trigger_if = { # Has not paid homage to this liege before
			limit = {
				has_variable = pay_homage_grace
				exists = top_liege
			}
			NOT = { var:pay_homage_grace = top_liege }
		}
		NOT = {
			this = scope:activity.special_guest:coronation_target
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		save_scope_as = vassal
	}

	# Option A: Submission
	option = {
		name = coronation.0152.a
		ai_chance = { # Always likely
			base = 100
			modifier = { # Generous vassals want to give gold if they can!
				ai_greed <= -50
				gold >= medium_gold_value
				add = -50
			}

			ai_value_modifier = {
				who = scope:vassal
				ai_sociability = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_sociability = 0 } }
						}
						value = 1.0
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_rationality = 0 } }
						}
						value = 2.0
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:vassal = {
								scope:vassal = { NOT = { ai_honor = 0 } }
							}
						}
						value = 1.0
					}
				}
			}

			#Rank difference
			#LPs are not impacted since they are closest in rank.
			modifier = {
				scope:vassal = {
					is_ruler = yes
					highest_held_title_tier < tier_empire
				}
				add = {
					value = 0
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 2
								}
							}
						}
						add = 100
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 3
								}
							}
						}
						add = 250
					}
					if = { #King asking counts they usually bend the knee.
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 4
								}
							}
						}
						add = 500
					}
				}
			}

			opinion_modifier = {
				who = scope:vassal
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
		}
		flavor = coronation.0152_submission
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_submission_log
				tags = { good }
				score = 20
				character = scope:vassal
				target = scope:coronation_target

				# Effect
				if = {
					limit = {
						scope:vassal.dynasty = scope:coronation_target.dynasty
					}
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty ?= { add_dynasty_prestige = minor_dynasty_prestige_gain }
						add_legitimacy = 2
					}
					scope:vassal = {
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
				else = {
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty ?= { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_legitimacy = 2
					}
					scope:vassal = {
						dynasty ?= { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
			}
		}
	}

	# Option B: Hook
	option = {
		name = coronation.0152.b
		show_as_unavailable = {
			always = yes
		}
		trigger = {
			NOT = { scope:coronation_target = { has_hook = scope:vassal } }
		}
		ai_chance = { # More likely if family
			base = 100
			modifier = {
				is_close_or_extended_family_of = scope:coronation_target
				add = 25
			}

			#Rank difference
			modifier = {
				scope:vassal = {
					is_ruler = yes
					highest_held_title_tier < tier_empire
				}
				add = {
					value = 0
					if = { #LPs won't want to be hooked
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value = 1
								}
							}
						}
						add = -150
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 2
								}
							}
						}
						add = 150
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 3
								}
							}
						}
						add = 300
					}
					if = { #King asking counts they usually bend the knee.
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 4
								}
							}
						}
						add = 550
					}
				}
			}

			opinion_modifier = {
				who = scope:vassal
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
			modifier = { # Certain AI's really do not want to be indebted
				OR = {
					has_trait = paranoid
					has_trait = arrogant
				}
				add = -50
			}
			ai_value_modifier = {
				who = scope:vassal
				ai_sociability = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_sociability = 0 } }
						}
						value = 1.0
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_rationality = 0 } }
						}
						value = 2.0
					}
				}
				ai_compassion = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_compassion = 0 } }
						}
						value = 2.0
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:vassal = {
								scope:vassal = { NOT = { ai_honor = 0 } }
							}
						}
						value = 1.0
					}
				}
			}
		}
		flavor = coronation.0152_hook
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_hook_log
				tags = { good }
				score = 20
				character = scope:vassal
				target = scope:coronation_target
				if = {
					limit = {
						scope:vassal.dynasty = scope:coronation_target.dynasty
					}
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = minor_dynasty_prestige_gain }
						add_legitimacy = 2
						add_hook = {
							type = favor_hook
							target = scope:vassal
						}
					}
					scope:vassal = {
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
				else = {
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_legitimacy = 2
						add_hook = {
							type = favor_hook
							target = scope:vassal
						}
					}
					scope:vassal = {
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
			}
		}
	}

	# Option C: Contract
	option = {
		name = coronation.0152.c
		show_as_unavailable = {
			always = yes
		}
		trigger = {
			scope:vassal = {
				OR = {
					vassal_contract_has_modifiable_obligations = yes
					vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
				}
				is_vassal_of = scope:coronation_target
			}
		}
		ai_chance = { # More likely if contract is already lenient
			base = 100
			modifier = {
				vassal_contract_obligation_level:feudal_government_taxes = feudal_tax_low_level
				add = 25
			}
			modifier = {
				vassal_contract_obligation_level:feudal_government_taxes = feudal_tax_exempt_level
				add = 75
			}
			opinion_modifier = {
				who = scope:vassal
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}

			#Rank difference
			#LPs are not impacted since they are closest in rank.
			modifier = {
				scope:vassal = {
					is_ruler = yes
					highest_held_title_tier < tier_empire
				}
				add = {
					value = 0
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 2
								}
							}
						}
						add = 100
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 3
								}
							}
						}
						add = 250
					}
					if = { #King asking counts they usually bend the knee.
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 4
								}
							}
						}
						add = 500
					}
				}
			}

			modifier = { # Certain AI's really do not want increased obligations
				OR = {
					has_trait = ambitious
					has_trait = arrogant
					has_trait = greedy
					ai_greed >= 50
				}
				add = -100
			}

			ai_value_modifier = {
				who = scope:vassal
				ai_sociability = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_sociability = 0 } }
						}
						value = 1.0
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_rationality = 0 } }
						}
						value = 2.0
					}
				}
				ai_greed = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_greed = 0 } }
						}
						value = -2.0
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:vassal = {
								scope:vassal = { NOT = { ai_honor = 0 } }
							}
						}
						value = 1.0
					}
				}
			}

		}
		flavor = coronation.0152_contract
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_contract_log
				tags = { good }
				score = 20
				character = scope:vassal
				target = scope:coronation_target

				# Effect
				if = {
					limit = {
						scope:vassal.dynasty = scope:coronation_target.dynasty
					}
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = minor_dynasty_prestige_gain }
						add_legitimacy = 2
					}
					scope:vassal = {
						vassal_contract_increase_obligation_level = feudal_government_taxes
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = minor_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
				else = {
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_legitimacy = 2
					}
					scope:vassal = {
						vassal_contract_increase_obligation_level = feudal_government_taxes
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = minor_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
			}
		}
	}

	# Option D: Gold
	option = {
		name = coronation.0152.d
		show_as_unavailable = {
			always = yes
		}
		trigger = {
			scope:vassal = { gold >= medium_gold_value }
		}
		ai_chance = { # More likely if rich
			base = 100
			modifier = {
				gold >= major_gold_value
				add = 100
			}

			#Rank difference
			modifier = {
				scope:vassal = {
					is_ruler = yes
					highest_held_title_tier < tier_empire
				}
				add = {
					value = 0
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value = 1
								}
							}
						}
						add = 50
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 2
								}
							}
						}
						add = 100
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 3
								}
							}
						}
						add = 250
					}
					if = { #King asking counts they usually bend the knee.
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 4
								}
							}
						}
						add = 500
					}
				}
			}

			opinion_modifier = {
				who = scope:vassal
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}

			ai_value_modifier = {
				who = scope:vassal
				ai_sociability = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_sociability = 0 } }
						}
						value = 1.0
					}
				}
				ai_rationality = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_rationality = 0 } }
						}
						value = 2.0
					}
				}
				ai_greed = { #Greedy characters won't, but generous characters will give gold
					if = {
						limit = {
							scope:vassal = { NOT = { ai_greed = 0 } }
						}
						value = -1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:vassal = {
								scope:vassal = { NOT = { ai_honor = 0 } }
							}
						}
						value = 1.0
					}
				}
			}
		}
		flavor = coronation.0152_gold
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_gold_log
				tags = { good }
				score = 20
				character = scope:vassal
				target = scope:coronation_target

				# Effect
				if = {
					limit = {
						scope:vassal.dynasty = scope:coronation_target.dynasty
					}
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = minor_dynasty_prestige_gain }
						add_legitimacy = 2
						add_gold = scope:vassal.medium_gold_value
					}
					scope:vassal = {
						add_prestige = major_prestige_gain
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 20
						}
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
						hidden_effect = {
							pay_reserved_gold = {
								target = scope:coronation_target
								gold = medium_gold_value
							}
						}
					}
				}
				else = {
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_legitimacy = 2
						add_gold = scope:vassal.medium_gold_value
					}
					scope:vassal = {
						dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_prestige = major_prestige_gain
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 20
						}
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
						hidden_effect = {
							pay_reserved_gold = {
								target = scope:coronation_target
								gold = medium_gold_value
							}
						}
					}
				}
			}
		}
	}

	# Option E: Refusal
	option = {
		name = coronation.0152.e
		stress_impact = {
			just = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
		ai_chance = {
			base = -100

			modifier = { #Unworthy rulers are not liked
				scope:coronation_target = { has_character_flag = unworthy_ruler }
				add = 50
			}

			modifier = { # Officiants should not refuse otherwise the activity invalidates
				scope:vassal = {
					OR = {
						this = scope:activity.special_guest:coronation_officiant
						has_character_flag = officiant
					}
				}
				add = -1000
			}

			ai_value_modifier = {
				who = scope:vassal
				ai_boldness = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_boldness = 0 } }
						}
						value = 0.5
					}
				}
				ai_energy = {
					if = {
						limit = {
							scope:vassal = { NOT = { ai_energy = 0 } }
						}
						value = 0.5
					}
				}
				ai_rationality = { #Only idiots will refuse
					if = {
						limit = {
							scope:vassal = { NOT = { ai_rationality = 0 } }
						}
						value = -1.0
					}
				}
				ai_honor = {
					if = {
						limit = {
							scope:vassal = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
							scope:coronation_target = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = -3.0
					}
					else_if = {
						limit = {
							scope:vassal = { #If AI is honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor > 0
							}
						}
						value = -1.75
					}
					else_if = {
						limit = {
							scope:vassal = { #If AI is NOT honorable and the law compels to obey the liege, AI will be more likely to obey.
								ai_honor < 0
							}
							scope:coronation_target = {
								has_realm_law_flag = vassal_refusal_is_treason
							}
						}
						value = 1.25
					}
					else = { #If not honorable and refusal is not a crime, then they take their chances
						value = -1.0
					}
				}
			}

			modifier = { #Makes no sense for these characters to refuse
				OR = {
					has_trait = just
					has_trait = loyal
				}
				add = -1000
			}


			modifier = {
				scope:coronation_target.dynasty ?= { has_dynasty_perk = ce1_legitimacy_legacy_1 }
				add = -100
			}

			modifier = {
				add = -200
				scope:coronation_target = {
					any_vassal_or_below = { this = scope:vassal }
					has_realm_law_flag = vassal_refusal_is_treason
				}
			}

			modifier = {
				add = -100
				is_allied_to = scope:coronation_target
			}

			modifier = {
				add = -100
				is_close_or_extended_family_of = scope:coronation_target
			}

			modifier = {
				add = -100
				is_councillor_of = scope:coronation_target
			}

			#Rank difference
			#LPs are not impacted since they are closest in rank.
			modifier = {
				scope:vassal = {
					is_ruler = yes
					highest_held_title_tier < tier_empire
				}
				add = {
					value = 0
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 2
								}
							}
						}
						add = -100
					}
					if = {
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 3
								}
							}
						}
						add = -250
					}
					if = { #King asking counts they usually bend the knee.
						limit = {
							scope:coronation_target = {
								tier_difference = {
									target = scope:vassal
									value >= 4
								}
							}
						}
						add = -500
					}
				}
			}

			opinion_modifier = { #AI opinion score
				who = scope:vassal
				opinion_target = scope:coronation_target
				multiplier = -1.25
			}
		}
		flavor = coronation.0152_refusal
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_refusal_log
				tags = { good }
				score = 20
				character = scope:vassal
				target = scope:coronation_target
				# Effect
				scope:coronation_target = {
					add_opinion = {
						modifier = coronation_treachery_opinion
						opinion = -80
						target = scope:vassal
					}
					add_prestige = minor_prestige_loss
				}
				scope:vassal = {
					add_character_flag = refused_to_bend_knee
					add_character_flag = paid_homage
					custom_tooltip = coronation.0152_refusal.tt
				}
			}
		}
	}
}

# Homage Representative Event

# Only for representatives
coronation.0153 = {
	type = activity_event
	title = coronation.0152.t
	desc = coronation.0152.desc
	theme = coronation_homage_activity
	left_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				opinion = {
					target = root
					value > 0
				}
			}
			animation = reception_groom_left
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = root
					value < 0
				}
			}
			animation = dismissal
		}
	}
	right_portrait = {
		character = scope:representative
		animation = throne_room_bow_1
	}

	weight_multiplier = {
		base = 1
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		has_character_flag = coronation_representative
		NOT = { has_character_flag = paid_homage }
		NOT = {
			this = scope:activity.special_guest:coronation_target
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		save_scope_as = representative
		root.liege = {
			save_scope_as = vassal
		}
	}

	# Submission
	option = {
		name = coronation.0152.a
		ai_chance = { # Always will do
			base = 100
		}
		flavor = coronation.0152_submission
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_homage_submission_representative_log
				tags = { good }
				score = 20
				character = scope:representative
				target = scope:coronation_target

				# Effect
				if = {
					limit = {
						scope:vassal.dynasty = scope:coronation_target.dynasty
					}
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty ?= { add_dynasty_prestige = minor_dynasty_prestige_gain }
						add_legitimacy = miniscule_legitimacy_gain
					}
					scope:vassal = {
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
				else = {
					scope:coronation_target = {
						add_prestige = miniscule_prestige_gain
						dynasty ?= { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						add_legitimacy = 2
					}
					scope:vassal = {
						dynasty ?= { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = respect_opinion
							opinion = 10
						}
						add_prestige = miniscule_prestige_gain
						add_character_flag = paid_homage
						set_variable = {
							name = pay_homage_grace
							value = scope:coronation_target
						}
					}
				}
				scope:representative = {
					add_prestige = minor_prestige_gain
				}
			}
		}
	}
}

#Phase end for ruler
coronation.0154 = {
	type = activity_event
	title = coronation.0154.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				desc = coronation.0154.desc_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				desc = coronation.0154.desc_other
			}
		}
		triggered_desc = {
			trigger = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = refused_to_bend_knee
					}
				}
			}
			desc = coronation.0154.desc_refusal
		}
	}
	theme = coronation_homage_activity
	left_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:vassal
					value > 0
				}
			}
			animation = reception_groom_left
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:vassal
					value <= 0
				}
			}
			animation = dismissal
		}
	}
	right_portrait = {
		character = scope:vassal
		animation = throne_room_bow_1
	}
	lower_left_portrait = {
		character = scope:refused_to_bend_knee
		trigger = {
			scope:activity = {
				any_attending_character = {
					has_character_flag = refused_to_bend_knee
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		scope:activity = {
			any_attending_character = {
				has_character_flag = paid_homage
			}
		}
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = paid_homage
						is_powerful_vassal_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = paid_homage
						is_powerful_vassal_of = scope:coronation_target
					}
					save_scope_as = vassal
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = paid_homage
						is_vassal_of = scope:coronation_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = paid_homage
						is_vassal_of = scope:coronation_target
					}
					save_scope_as = vassal
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = refused_to_bend_knee
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = refused_to_bend_knee
					}
					save_scope_as = refused_to_bend_knee
				}
			}
		}
	}

	# Very good...
	option = {
		name = coronation.0154.a
		ai_chance = {
			base = 100
		}
	}
}

# ON START - BANQUET

coronation.0200 = {
	type = activity_event
	title = coronation.0200.t
	desc = {
		first_valid = {
			triggered_desc = { #host
				trigger = {
					root = scope:host
				}
				desc = coronation.0200.desc_host
			}
			desc = coronation.0200.desc #guest
		}
	}
	theme = wedding_banquet_activity
	left_portrait = {
		trigger = {
			NOT = {
				root = scope:host
			}
		}
		character = root
		animation = toast_goblet
	}
	right_portrait = {
		character = scope:host
		camera = camera_event_right_wedding
		animation = toast_goblet
	}

	trigger = {
		exists = scope:activity
	}

	option = {
		name = coronation.0200.a
		if = {
			limit = {
				root = scope:host
			}
			add_prestige = minor_prestige_gain
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.0200.b
		trigger = {
			root = scope:host
			age >= 16
		}
		if = {
			limit = {
				has_trait = lifestyle_reveler
			}
			add_trait_xp = {
				trait = lifestyle_reveler
				value = 5
			}
		}
		else = {
			random_list = {
				90 = {
					add_trait = lifestyle_reveler
				}
				10 = {
					add_trait = drunkard
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 101
				OR = {
					has_trait = gregarious
					has_trait = eccentric
				}
			}
			modifier = {
				add = -100
				has_trait = shy
			}
		}
	}
}

# INVALIDATED

# For the host and the guests - one of the spouses died

coronation.0900 = {
	type = character_event
	title = coronation.0900.t
	desc = coronation.0900.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = sadness
	}
	right_portrait = {
		character = scope:sad_spouse
		animation = grief
	}

	immediate = {
		scope:host = { save_scope_as = dead_spouse }
		if = {
			limit = {
				root = scope:previous_host
			}
			# The coronation is invalidated: get a refund
			custom_tooltip = {
				text = coronation.9000.tt
				add_gold = var:coronation_gold_recoup_value
			}
		}
	}

	option = {
		name = coronation.0900.a
	}

	after = {
		if = {
			limit = {
				has_variable = coronation_gold_recoup_value
			}
			remove_variable = coronation_gold_recoup_value
		}
	}
}

# If the host who is a spouse dies, notify the heir
coronation.0915 = {
	type = character_event
	title = coronation.0900.t
	desc = coronation.0915.desc
	theme = family
	left_portrait = {
		character = root
		animation = sadness
	}
	lower_center_portrait = scope:previous_host

	immediate = {
		# The wedding is invalidated: get a refund
		custom_tooltip = {
			text = coronation.9015.tt
			add_gold = scope:previous_host.var:coronation_gold_recoup_value
		}
	}

	option = {
		name = coronation.0915.a
	}

	after = {
		if = {
			limit = {
				has_variable = coronation_gold_recoup_value
			}
			remove_variable = coronation_gold_recoup_value
		}
	}
}

# A spouse has been imprisoned: for the prisoner
coronation.0920 = {
	type = character_event
	title = coronation.0900.t
	desc = coronation.0920.desc
	theme = prison
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { is_in_prison_type = house_arrest }
			animation = prisonhouse
		}
		triggered_animation = {
			trigger = { is_in_prison_type = dungeon }
			animation = prisondungeon
		}
	}

	immediate = {
		if = {
			limit = {
				root = scope:previous_host
			}
			# The wedding is invalidated: get a refund
			custom_tooltip = {
				text = coronation.9000.tt
				add_gold = var:coronation_gold_recoup_value
			}
		}
	}

	option = {
		name = coronation.0920.a
	}

	after = {
		if = {
			limit = {
				has_variable = coronation_gold_recoup_value
			}
			remove_variable = coronation_gold_recoup_value
		}
	}
}

# A spouse has been imprisoned: for everyone else
coronation.0921 = {
	type = character_event
	title = coronation.0900.t
	desc = coronation.0921.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = sadness
	}
	lower_center_portrait = scope:prisoner_spouse

	immediate = {
		if = {
			limit = {
				root = scope:previous_host
			}
			# The wedding is invalidated: get a refund
			custom_tooltip = {
				text = coronation.9000.tt
				add_gold = var:coronation_gold_recoup_value
			}
		}
	}

	option = {
		name = coronation.0921.a
	}

	after = {
		if = {
			limit = {
				has_variable = coronation_gold_recoup_value
			}
			remove_variable = coronation_gold_recoup_value
		}
	}
}

# CONCLUSION - HOST

coronation.0950 = {
	type = activity_event
	title = coronation.0950.t
	desc = coronation.0950.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:host
		animation = throne_room_bow_1
	}
	right_portrait = {
		character = scope:officiant
		trigger = { exists = scope:officiant }
		animation = personality_zealous
	}

	trigger = {
		root = scope:host
	}

	immediate = {
		save_scope_as = root_scope
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
					}
					save_scope_as = officiant
				}
			}
		}
		play_music_cue = mx_cue_positive_effect
		show_as_tooltip = {
			disburse_coronation_activity_rewards = yes
		}
	}

	option = {
		name = coronation.0950.a
	}
}

# CONCLUSION - GUESTS

coronation.0970 = {
	type = activity_event
	title = coronation.0950.t
	desc = coronation.0970.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:root_scope
		animation = personality_bold
	}
	center_portrait = {
		character = scope:coronation_target
		animation = throne_room_bow_1
	}
	right_portrait = {
		character = scope:officiant
		trigger = { exists = scope:officiant }
		animation = personality_zealous
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
					}
					save_scope_as = officiant
				}
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = scope:officiant
						root = {
							NOT = { this = scope:officiant }
						}
					}
					NOT = {
						exists = scope:officiant
					}
				}
			}
			save_scope_as = root_scope
		}
		show_as_tooltip = {
			disburse_coronation_activity_rewards = yes
		}
		if = {
			limit = {
				has_character_flag = paid_homage
			}
			remove_character_flag = paid_homage
		}
	}

	option = {
		name = coronation.0970.a
	}
}

# FALLBACK INVALIDATION
coronation.0998 = {
	type = character_event
	title = coronation.0900.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:coronation_target = {
						has_character_flag = stolen_crown
					}
				}
				desc = coronation.0998.desc_stolen_crown
			}
			desc = coronation.0998.desc
		}
	}
	theme = realm

	left_portrait = {
		character = root
		animation = sadness
	}

	immediate = {
		# we should never get this far. If it happens, just get a free pass since something has gone wrong
	}

	option = {
		name = coronation.0998.a
	}

	after = {
		if = {
			limit = {
				scope:coronation_target = {
					has_character_flag = stolen_crown
				}
			}
			scope:coronation_target = {
				remove_character_flag = stolen_crown
			}
		}
	}
}

# INVALIDATION - HOST TIER TOO LOW
coronation.0999 = {
	type = character_event
	title = coronation.0999.t
	desc = coronation.0999.desc
	theme = realm

	left_portrait = {
		character = scope:host
		animation = grief
	}

	immediate = {
		scope:host = { add_gold = var:coronation_gold_recoup_value }
	}

	option = {
		name = coronation.0999.a
	}
}

# CEREMONY EVENTS

##################################################
# Artistic Differences
# by Claudia Baldassi
# coronation.1000
##################################################

# A relative arrives early and criticizes your chosen options.

coronation.1000 = {
	type = activity_event
	title = coronation.1000.t
	desc = {
		desc = coronation.1000.desc
		random_valid = {
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_humble
						}
					}
				}
				desc = coronation.1000.desc_servants
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
					}
					NOT = { scope:1000_relative.dynasty = root.dynasty }
				}
				desc = coronation.1000.desc_dec
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_humble
						}
					}
				}
				desc = coronation.1000.desc_dec_low
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
				}
				desc = coronation.1000.desc_entertainment
			}
			desc = coronation.1000.desc_fallback
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = eyeroll
	}
	right_portrait = {
		character = scope:1000_relative
		animation = disapproval
	}

	cooldown = { years = 5 }

	weight_multiplier = {
		base = 1
		modifier = {
			scope:activity.special_guest:coronation_target = {
				any_close_family_member = {
					is_alive = yes
					is_ai = yes
					is_participant_in_activity = scope:activity
					has_trait = fickle
				}
			}
			add = 1
		}
		modifier = {
			scope:activity.special_guest:coronation_target = {
				any_close_family_member = {
					is_alive = yes
					is_ai = yes
					is_participant_in_activity = scope:activity
					has_trait = arrogant
				}
			}
			add = 3
		}
		modifier = {
			has_activity_intent = reduce_stress_intent
			add = 2
		}
		modifier = {
			scope:activity.special_guest:coronation_target = {
				any_close_family_member = {
					is_alive = yes
					is_ai = yes
					is_participant_in_activity = scope:activity
					root.intent_target ?= this
				}
			}
			add = 3
		}
	}

	trigger = {
		scope:host = root
		location = scope:activity.activity_location
		scope:activity.special_guest:coronation_target = root

		scope:activity.special_guest:coronation_target = {
			any_close_family_member = {
				coronation_1000_valid_relative_trigger = yes
			}
		}
	}

	immediate = {
		add_character_flag = busy_in_coronation_event

		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}

		scope:coronation_target = {
			random_close_family_member = {
				limit = {
					coronation_1000_valid_relative_trigger = yes
					root.intent_target ?= this
				}
				alternative_limit = {
					coronation_1000_valid_relative_trigger = yes
				}
				save_scope_as = 1000_relative
				add_character_flag = busy_in_coronation_event
			}
		}
		title:e_the_iron_throne = {
			every_past_holder = {
				limit = {
					NOR = {
						is_alive = yes
						this = character:Targaryen_82 #Baelor too pious
					}
				}
				add_to_list = potential_figures
			}
		}
		random_in_list = {
			list = potential_figures
			save_scope_as = historical_figure
		}
	}

	# Option A: mediate
	option = {
		name = coronation.1000.a
		duel = {
			skill = diplomacy
			target = scope:1000_relative

			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = coronation.1000.a.success
				send_interface_toast = {
					title = coronation.1000.a.success.tt
					left_icon = root
					right_icon = scope:1000_relative
					scope:activity = {
						add_activity_log_entry = {
							key = coronation_artistic_mediate_log
							tags = { good }
							score = 20
							character = root
							target = scope:1000_relative

							# Effect
							root = {
								reverse_add_opinion = {
									target = scope:1000_relative
									modifier = impressed_opinion
									opinion = 20
								}
								add_prestige = minor_prestige_gain
								stress_impact = {
									base = minor_stress_impact_loss
									impatient = minor_stress_impact_gain
									arrogant = minor_stress_impact_gain
								}
							}
						}
					}
				}
			}

			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1000.a.failure
				send_interface_toast = {
					title = coronation.1000.a.failure.tt
					left_icon = root
					right_icon = scope:1000_relative
					scope:activity = {
						add_activity_log_entry = {
							key = coronation_artistic_mediate_fail_log
							tags = { bad }
							score = 20
							character = root
							target = scope:1000_relative
						}
						root = {
							stress_impact = {
								base = minor_stress_impact_gain
								impatient = medium_stress_impact_gain
								arrogant = medium_stress_impact_gain
							}
						}
					}
				}
			}
		}

		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = impatient
			}
			modifier = {
				add = -50
				has_trait = arrogant
			}
		}
	}

	# Option B: insult
	option = {
		name = coronation.1000.b
		scope:activity = {
			add_activity_log_entry = {
				key = coronation_artistic_insult_log
				tags = { bad }
				score = 20
				character = root
				target = scope:1000_relative

				# Effect
				root = {
					reverse_add_opinion = {
						target = scope:1000_relative
						modifier = insult_opinion
						opinion = -20
					}
					add_dread = minor_dread_gain
				}
			}
		}

		stress_impact = {
			patient = medium_stress_impact_gain
			humble = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = patient
			}
			modifier = {
				add = -50
				has_trait = humble
			}
		}
	}

	#Option C: I don't care
	option = {
		name = coronation.1000.c
		trigger = {
			has_activity_intent = reduce_stress_intent
		}
		custom_tooltip = available_because_intent_tt
		stress_impact = {
			base = minor_stress_impact_loss
		}
		ai_chance = {
			base = 80
			modifier = {
				has_trait = lazy
				add = 100
			}
		}
	}

	#Option D: Think of our House
	option = {
		name = coronation.1000.d
		trigger = {
			has_activity_intent = raise_dynasty_prestige_intent
		}
		custom_tooltip = available_because_intent_tt
		dynasty = {
			add_dynasty_prestige = minor_dynasty_prestige_gain
		}
		ai_chance = {
			base = 80
			modifier = {
				has_trait = ambitious
				add = 100
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:1000_relative = { remove_character_flag = busy_in_coronation_event }
	}
}

##################################################
# A Magnificent Welcome
# by Claudia Baldassi
# coronation.1010
##################################################

# You have an occasion to kickstart your Diplomacy/Seduce targeting efforts

coronation.1010 = {
	type = activity_event
	title = coronation.1010.t
	desc = {
		desc = coronation.1010.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					has_activity_intent = diplomatic_intent
				}
				desc = coronation.1010.diplo
			}
			triggered_desc = {
				trigger = {
					has_activity_intent = woo_attendee_intent
				}
				desc = coronation.1010.seduce
			}
			triggered_desc = {
				trigger = {
					exists = scope:1010_match
				}
				desc = coronation.1010.match
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = happiness
	}
	center_portrait = {
		trigger = {
			exists = scope:1010_match
		}
		character = scope:1010_match
		animation = boredom
	}
	right_portrait = {
		character = scope:1010_target
		animation = dismissal
	}

	cooldown = { years = 5 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		OR = {
			has_activity_intent = diplomatic_intent
			has_activity_intent = woo_attendee_intent
		}

		scope:host = root
		intent_target.location = root.location

		intent_target = {
			is_ai = yes
			NOT = { has_character_flag = busy_in_coronation_event }
		}
	}

	immediate = {
		intent_target = {
			save_scope_as = 1010_target
			add_character_flag = busy_in_coronation_event
		}
		if = {
			limit = {
				any_child = {
					is_adult = no
					is_betrothed = no
					is_participant_in_activity = scope:activity
					is_ai = yes
					NOT = { has_character_flag = busy_in_coronation_event }
				}
			}
			random_child = {
				limit = {
					is_adult = no
					is_betrothed = no
					is_participant_in_activity = scope:activity
					is_ai = yes
					NOT = { has_character_flag = busy_in_coronation_event }
				}
				save_scope_as = 1010_match
				add_character_flag = busy_in_coronation_event
			}
		}
		add_character_flag = busy_in_coronation_event
	}

	#Option A: gardens
	option = {
		name = coronation.1010.a
		random_list = {
			# target is impressed
			60 = {
				modifier = {
					scope:activity.activity_location.county = {
						development_level >= medium_development_level
					}
					add = 15
				}
				modifier = {
					has_trait = lifestyle_gardener
					add = 25
				}
				modifier = {
					has_trait = lifestyle_herbalist
					add = 25
				}
				modifier = {
					any_court_position_holder = {
						type = court_gardener_court_position
					}
					add = 40
				}
				modifier = {
					scope:activity.activity_location = {
						has_building_or_higher = orchards_01
					}
					add = 20
				}
				modifier = {
					scope:activity.activity_location = {
						has_building_or_higher = royal_garden_01
					}
					add = 50
				}
				desc = coronation.1010.a.success
				send_interface_toast = {
					title = coronation.1010.a.success.tt
					left_icon = scope:1010_target
					scope:activity = {
						add_activity_log_entry = {
							key = coronation_welcome_garden_log
							tags = { good }
							score = 20
							character = root
							target = scope:1010_target

							# Effect
							root = {
								reverse_add_opinion = {
									target = scope:1010_target
									modifier = impressed_opinion
									opinion = 20
								}
								if = {
									limit = {
										has_activity_intent = woo_attendee_intent
										can_set_relation_lover_trigger = { CHARACTER = scope:1010_target }
									}
									progress_towards_lover_effect = {
										REASON = lover_atmospheric_location
										CHARACTER = scope:1010_target
										OPINION = default_lover_opinion
									}
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
						lustful = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						ambitious = medium_stress_impact_loss
					}
				}
			}
			#target is not impressed
			40 = {
				modifier = {
					diplomacy < 10
					add = 10
				}
				modifier = {
					stewardship < 10
					add = 10
				}
				modifier = {
					scope:activity.activity_location.county = {
						development_level <= bad_development_level
					}
					add = 30
				}
				desc = coronation.1010.a.failure
				send_interface_toast = {
					title = coronation.1010.a.failure.tt
					left_icon = scope:1010_target
					scope:activity = {
						add_activity_log_entry = {
							key = coronation_welcome_garden_fail_log
							tags = { bad }
							score = 20
							character = root
							target = scope:1010_target

							# Effect
							root = {
								reverse_add_opinion = {
									target = scope:1010_target
									modifier = bored_opinion
									opinion = -20
								}
								stress_impact = {
									base = minor_stress_impact_gain
									lustful = medium_stress_impact_gain
									arrogant = medium_stress_impact_gain
									ambitious = medium_stress_impact_gain
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				scope:activity.activity_location.county = {
					development_level >= medium_development_level
				}
				add = 15
			}
			modifier = {
				has_trait = lifestyle_gardener
				add = 25
			}
			modifier = {
				has_trait = lifestyle_herbalist
				add = 25
			}
			modifier = {
				any_court_position_holder = {
					type = court_gardener_court_position
				}
				add = 40
			}
			modifier = {
				scope:activity.activity_location = {
					has_building_or_higher = orchards_01
				}
				add = 20
			}
			modifier = {
				scope:activity.activity_location = {
					has_building_or_higher = royal_garden_01
				}
				add = 50
			}
		}
	}

	#Option B: venue
	option = {
		name = coronation.1010.b
		random_list = {
			# target is impressed
			60 = {
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
					}
					add = 10
				}
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
					}
					add = 10
				}
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
					}
					add = 10
				}
				desc = coronation.1010.b.success
				send_interface_toast = {
					title = coronation.1010.a.success.tt
					left_icon = scope:1010_target
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_welcome_ceremony_log
							tags = { good }
							score = 20
							character = root
							target = scope:1010_target

							# Effect
							root = {
								reverse_add_opinion = {
									target = scope:1010_target
									modifier = impressed_opinion
									opinion = 20
								}
								if = {
									limit = {
										has_activity_intent = woo_attendee_intent
										can_set_relation_lover_trigger = { CHARACTER = scope:1010_target }
									}
									progress_towards_lover_effect = {
										REASON = lover_atmospheric_location
										CHARACTER = scope:1010_target
										OPINION = default_lover_opinion
									}
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
						lustful = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						ambitious = medium_stress_impact_loss
					}
				}
			}
			#target is not impressed
			40 = {
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_humble
						}
					}
					add = 10
				}
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_bad
						}
					}
					add = 10
				}
				modifier = {
					scope:activity = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_bad
						}
					}
					add = 10
				}
				desc = coronation.1010.b.failure
				send_interface_toast = {
					title = coronation.1010.a.failure.tt
					left_icon = scope:1010_target
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_welcome_ceremony_fail_log
							tags = { bad }
							score = 20
							character = root
							target = scope:1010_target

							# Effect
							root = {
								reverse_add_opinion = {
									target = scope:1010_target
									modifier = bored_opinion
									opinion = -20
								}
								stress_impact = {
									base = minor_stress_impact_gain
									lustful = medium_stress_impact_gain
									arrogant = medium_stress_impact_gain
									ambitious = medium_stress_impact_gain
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				scope:activity = {
					has_activity_option = {
						category = coronation_option_pomp
						option = coronation_pomp_grandiose
					}
				}
				add = 10
			}
			modifier = {
				scope:activity = {
					has_activity_option = {
						category = wedding_option_food
						option = wedding_food_good
					}
				}
				add = 10
			}
			modifier = {
				scope:activity = {
					has_activity_option = {
						category = wedding_option_entertainment
						option = wedding_entertainment_good
					}
				}
				add = 10
			}
		}
	}

	#Option C: nevermind
	option = {
		name = coronation.1010.c
		reverse_add_opinion = {
			target = scope:1010_target
			modifier = feeling_welcome_opinion
			opinion = 5
		}
		stress_impact = {
			base = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = lazy
				add = 50
			}
		}
	}
	after = {
		remove_character_flag = busy_in_coronation_event
		scope:1010_target = { remove_character_flag = busy_in_coronation_event }
		if = {
			limit = {
				exists = scope:1010_match
			}
			scope:1010_match = { remove_character_flag = busy_in_coronation_event }
		}
	}
}

##################################################
# A Good/Bad Omen
# by Claudia Baldassi
# coronation.1030
##################################################

# A good or bad omen happens: how do you react?

coronation.1030 = {
	type = activity_event
	title = coronation.1030.t
	desc = {
		desc = coronation.1030.desc
		random_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = good_thing_flag
				}
				desc = coronation.1030.desc_good1
			}
			triggered_desc = {
				trigger = {
					has_character_flag = good_thing_flag
				}
				desc = coronation.1030.desc_good2
			}
			triggered_desc = {
				trigger = {
					has_character_flag = good_thing_flag
				}
				desc = coronation.1030.desc_good3
			}
			triggered_desc = {
				trigger = {
					has_character_flag = bad_thing_flag
				}
				desc = coronation.1030.desc_bad1
			}
			triggered_desc = {
				trigger = {
					has_character_flag = bad_thing_flag
				}
				desc = coronation.1030.desc_bad2
			}
			triggered_desc = {
				trigger = {
					has_character_flag = bad_thing_flag
				}
				desc = coronation.1030.desc_bad3
			}
		}
		desc = coronation.1030.desc_outro
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = bad_thing_flag
				}
				desc = coronation.1030.desc_bad
			}
			desc = coronation.1030.desc_good
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				has_character_flag = bad_thing_flag
			}
			animation = fear
		}
		animation = happiness
	}
	right_portrait = {
		character = scope:1030_chatter
		triggered_animation = {
			trigger = {
				has_character_flag = bad_thing_flag
			}
			animation = worry
		}
		animation = admiration
	}
	lower_center_portrait = {
		character = scope:coronation_target
	}

	cooldown = { years = 5 }

	trigger = {

		scope:activity = {
			NOT = {
				has_variable = has_had_event_1030
			}
		}

		scope:activity.special_guest:coronation_target = { is_ai = yes }
		scope:activity = {
			any_attending_character = {
				is_ai = yes
				NOR = {
					this = scope:activity.special_guest:coronation_target
					this = root
					has_character_flag = busy_in_coronation_event
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			has_character_modifier = bp1_superstition_modifier
			add = 3
		}
		modifier = {
			is_ai = yes
			factor = 0.3
		}
		modifier = {
			has_activity_intent = reduce_stress_intent
			add = 1
		}
	}

	immediate = {
		scope:activity = {
			set_variable = has_had_event_1030
		}
		hidden_effect = {
			random_list = {
				50 = {
					add_character_flag = good_thing_flag
				}
				50 = {
					add_character_flag = bad_thing_flag
				}
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
			add_character_flag = busy_in_coronation_event
		}

		scope:activity = {
			random_attending_character = {
				limit = {
					NOR = {
						scope:coronation_target = this
						root = this
					}
					is_ai = yes
				}
				save_scope_as = 1030_chatter
				add_character_flag = busy_in_coronation_event
			}
		}

		add_character_flag = busy_in_coronation_event

		# TODO - Add legend seed
		#random = {
		#	chance = legend_seed_chance_low
		#	add_character_flag = wedding_legend_seed
		#}
	}

	#Option A: good omen - excellent!
	option = {
		name = coronation.1030.a
		trigger = {
			has_character_flag = good_thing_flag
		}
		scope:activity = {
			add_activity_log_entry = {
				key = wedding_omen_good_log
				tags = { good }
				score = 50
				character = root
				target = scope:coronation_target
			}
		}
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = {
				base = medium_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
	}

	#Option B: dismiss bad omen
	option = {
		name = coronation.1030.b
		trigger = {
			has_character_flag = bad_thing_flag
			NOT = { has_character_modifier = bp1_superstition_modifier }
		}
		if = {
			limit = {
				ai_rationality >= 40
			}
			scope:activity = {
				add_activity_log_entry = {
					key = wedding_omen_dismissed_log
					tags = { bad }
					score = 50
					character = root
					target = scope:coronation_target
				}
			}
			if = {
				limit = {
					has_activity_intent = reduce_stress_intent
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
		}
		else = {
			stress_impact = {
				base = minor_stress_impact_gain
			}
			scope:activity = {
				add_activity_log_entry = {
					key = wedding_omen_bad_log
					tags = { bad }
					score = 50
					character = root
					target = scope:coronation_target
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	#Option c: bad omen - panic
	option = {
		name = coronation.1030.c
		trigger = {
			has_character_flag = bad_thing_flag
			has_character_modifier = bp1_superstition_modifier
		}
		stress_impact = {
			base = medium_stress_impact_gain
		}
		scope:activity = {
			add_activity_log_entry = {
				key = wedding_omen_bad_log
				tags = { bad }
				score = 50
				character = root
				target = scope:coronation_target
			}
		}
		ai_chance = {
			base = 100
		}
	}

	#Option D: good omen - you get a legend seed!
	#option = {
	#	name = coronation.1030.d
	#	trigger = {
	#		has_character_flag = good_thing_flag
	#		NOR = {
	#			has_personal_legend_seed = heroic
	#			has_personal_legend_seed = holy
	#			has_personal_legend_seed = legitimizing
	#		}
	#		has_character_flag = wedding_legend_seed
	#		OR = {
	#			scope:coronation_target.dynasty = root.dynasty
	#			scope:spouse_1.dynasty = root.dynasty
	#		}
	#	}
	#
	#	scope:activity = {
	#		add_activity_log_entry = {
	#			key = wedding_omen_good_log
	#			tags = { good }
	#			score = 50
	#			character = root
	#			target = scope:coronation_target
	#		}
	#	}
	#
	#	legend_seed_great_deed_dynasty_effect = yes
	#
	#	ai_chance = { #AI can into legend seeds
	#		base = 200
	#	}
	#}

	after = {
		if = {
			limit = {
				has_character_flag = good_thing_flag
			}
			remove_character_flag = good_thing_flag
		}
		else = {
			remove_character_flag = bad_thing_flag
		}
		remove_character_flag = busy_in_coronation_event
		scope:coronation_target = { remove_character_flag = busy_in_coronation_event }
		scope:1030_chatter = { remove_character_flag = busy_in_coronation_event }
	}
}

###############################
## Legitimization Intent Events
## (During/Before Ceremony)
## 1120-1129
## By BWWalker01
###############################

# Legitimization Intent - Asking the King/Queen to legitimize during/before ceremony
coronation.1120 = {
	type = activity_event
	title = coronation.1120.t
	desc = coronation.1120.desc.intro
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = flirtation
	}
	right_portrait = {
		character = scope:coronation_target
		animation = personality_rational
	}
	center_portrait = {
		character = scope:bastard_scope
		animation = throne_room_bow_1
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			NOT = {
				has_variable = has_had_bastard_intent_1000_event
			}
		}
		has_activity_intent = legitimize_bastard_intent #you're trying to legitimize someone
		intent_target = {
			is_alive = yes #they're not dead yet
			has_trait = bastard	#they haven't been legitimized
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		intent_target = { save_scope_as = bastard_scope }
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			set_variable = has_had_bastard_intent_1000_event
		}
		root = {
			save_scope_as = asking_guest
		}
		scope:activity.activity_location = {
			barony = {
				save_scope_as = activity_barony
			}
		}
	}

	#Go for it
	option = {
		name = coronation.1120.a
		show_as_tooltip = {
			duel = {
				skill = diplomacy
				target = scope:coronation_target
				20 = {	# success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 4.0
						min = -49
					}
					opinion_modifier = {
						who = scope:coronation_target
						opinion_target = scope:asking_guest
						multiplier = 2.5
					}
					opinion_modifier = {
						who = scope:coronation_target
						opinion_target = scope:bastard_scope
						multiplier = 0.25
					}
					modifier = {
						add = 100
						scope:asking_guest = {
							has_relation_friend = scope:coronation_target
						}
					}
					modifier = {
						NOT = { scope:asking_guest = scope:coronation_target }
						add = {
							value = scope:asking_guest.prestige_level
							multiply = 50
						}
					}
					modifier = {
						add = 250
						scope:asking_guest = {
							has_relation_best_friend = scope:coronation_target
						}
					}
					modifier = {
						add = -1000
						scope:asking_guest = {
							has_relation_rival = scope:coronation_target
						}
					}
					modifier = {
						add = 50
						scope:coronation_target = {
							trait_compatibility = {
								target = scope:bastard_scope
								value >= high_positive_trait_compatibility
							}
						}
					}
					modifier = {
						add = 100
						scope:asking_guest = {
							is_powerful_vassal_of = scope:coronation_target
						}
					}
					modifier = {
						add = 50
						scope:asking_guest = {
							is_councillor_of = scope:coronation_target
						}
					}
					desc = coronation.1120.a.success
					complete_activity_intent = yes
					if = {
						limit = {
							NOR = {
								has_hook = scope:house_head
								scope:house_head = { has_hook = scope:actor }
							}
						}
						custom_tooltip = coronation.1121.request_favor_tt
					}
					send_interface_toast = {
						title = coronation_bastard_intent_1000_log_success
						left_icon = scope:coronation_target
						right_icon = scope:bastard_scope
						scope:activity = {
							add_activity_log_entry = {
								key = coronation_bastard_intent_1000_log_success
								character = root
								target = scope:coronation_target

								# Effect
								root = {
									stress_impact = {
										arrogant = minor_stress_impact_gain
									}
									legitimize_bastard_interaction_opinions_effect = {
										BASTARD = scope:bastard_scope
										HOUSE_HEAD = root.top_liege
										LEGITIMIZER = root
									}
								}
							}
						}
					}
				}
				80 = {	# fail
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					desc = coronation.1120.a.failure
					send_interface_toast = {
						title = coronation.1120.a.failure
						left_icon = scope:coronation_target
						add_prestige = minor_prestige_loss
						scope:coronation_target = {
							add_opinion = {
								target = root
								modifier = annoyed_opinion
								opinion = -10
							}
						}
					}
				}
			}
		}
		scope:asking_guest = {
			add_character_flag = asking_guest
		}
		scope:bastard_scope = {
			add_character_flag = bastard_scope
		}
		scope:coronation_target = {
			trigger_event = coronation.1121
		}
		stress_impact = {
			craven = medium_stress_impact_gain
			patient = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
			modifier = {
				factor = 0.50
				has_trait = ambitious
			}
			modifier = {
				factor = 0.50
				scope:asking_guest = { has_hook = scope:coronation_target }
			}
		}
	}

	#Go for it with hook
	option = {
		name = coronation.1120.b
		trigger = {
			has_usable_hook = scope:coronation_target
		}
		show_as_tooltip = {
			send_interface_toast = {
				title = coronation.1120.a.success
				left_icon = scope:coronation_target
				right_icon = scope:bastard_scope
				scope:activity = {
					add_activity_log_entry = {
						key = coronation_bastard_intent_1000_log_success
						character = root
						target = scope:coronation_target

						# Effect
						root = {
							stress_impact = {
								arrogant = minor_stress_impact_gain
							}
							legitimize_bastard_interaction_opinions_effect = {
								BASTARD = scope:bastard_scope
								HOUSE_HEAD = root.top_liege
								LEGITIMIZER = root
							}
						}
					}
				}
			}
			complete_activity_intent = yes
			scope:asking_guest = {
				use_hook = scope:coronation_target
			}
		}
		scope:asking_guest = {
			add_character_flag = asking_guest
		}
		scope:bastard_scope = {
			add_character_flag = bastard_scope
		}
		scope:coronation_target = {
			trigger_event = coronation.1121
			add_character_flag = was_hooked
		}
		stress_impact = {
			craven = medium_stress_impact_gain
			patient = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
			modifier = {
				factor = 1.5
				scope:asking_guest = { has_hook = scope:coronation_target }
			}
			modifier = {
				factor = 1.25
				has_trait = ambitious
			}
			modifier = {
				factor = 1.25
				NOT = {
					scope:asking_guest = {
						has_relation_friend = scope:coronation_target
					}
				}
			}
			modifier = {
				factor = 2
				scope:asking_guest = {
					has_relation_rival = scope:coronation_target
				}
			}
		}
	}

	#Nahhh
	option = {
		name = coronation.1120.c
		scope:activity = {
			remove_variable = has_had_bastard_intent_1000_event
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			modifier = {
				factor = 0
				scope:coronation_target = {
					trait_compatibility = {
						target = scope:bastard_scope
						value >= high_positive_trait_compatibility
					}
				}
			}
		}
	}
}

# Legitimization Intent - Host responds to request
coronation.1121 = {
	type = activity_event
	title = coronation.1120.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:coronation_target = {
						NOT = {
							has_character_flag = was_hooked
						}
					}
				}
				desc = coronation.1121.desc
			}
			triggered_desc = {
				trigger = {
					scope:coronation_target = {
						has_character_flag = was_hooked
					}
				}
				desc = coronation.1121.desc_hooked
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:asking_guest
		animation = flirtation
	}
	right_portrait = {
		character = scope:coronation_target
		animation = personality_rational
	}
	center_portrait = {
		character = scope:bastard_scope
		animation = throne_room_bow_1
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_bastard_intent_1000_event
		}
		root = scope:activity.special_guest:coronation_target
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = asking_guest
						has_activity_intent = legitimize_bastard_intent
						this.intent_target = { is_alive = yes }
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = asking_guest
						has_activity_intent = legitimize_bastard_intent
						this.intent_target = { is_alive = yes }
					}
					save_scope_as = asking_guest
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = bastard_scope
						this = scope:asking_guest.intent_target
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = bastard_scope
						this = scope:asking_guest.intent_target
					}
					save_scope_as = bastard_scope
				}
			}
		}
		root = {
			save_scope_as = coronation_target
		}
	}

	#Player agrees
	option = {
		name = {
			trigger = {
				NOT = {
					scope:coronation_target = {
						has_character_flag = was_hooked
					}
				}
			}
			text = coronation.1121.a
		}
		name = {
			trigger = {
				scope:coronation_target = {
					has_character_flag = was_hooked
				}
			}
			text = coronation.1121.a_hooked
		}
		trigger = {
			root = {
				NOT = { is_ai = yes }
			}
		}
		send_interface_toast = {
			title = coronation.1120.a.success
			left_icon = root
			right_icon = scope:bastard_scope
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_bastard_intent_1000_log_success
					character = scope:coronation_target
					target = scope:bastard_scope

					# Effect
					root = {
						stress_impact = {
							callous = minor_stress_impact_gain
						}
						legitimize_bastard_interaction_opinions_effect = {
							BASTARD = scope:bastard_scope
							HOUSE_HEAD = scope:coronation_target
							LEGITIMIZER = scope:asking_guest
						}
						if = {
							limit = {
								scope:coronation_target = {
									has_character_flag = was_hooked
								}
							}
							scope:asking_guest = {
								use_hook = scope:coronation_target
							}
						}
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					scope:asking_guest = { has_activity_intent = legitimize_bastard_intent }
				}
				scope:asking_guest = {
					complete_activity_intent = yes
				}
			}
		}
	}

	#AI
	option = {
		name = coronation.1121.a
		trigger = {
			scope:coronation_target = {
				is_ai = yes
			}
			NOT = {
				scope:coronation_target = {
					has_character_flag = was_hooked
				}
			}
		}
		scope:asking_guest = {
			duel = {
				skill = diplomacy
				target = scope:coronation_target
				20 = {	# success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 4.0
						min = -49
					}
					opinion_modifier = {
						who = scope:coronation_target
						opinion_target = scope:asking_guest
						multiplier = 2.5
					}
					opinion_modifier = {
						who = scope:coronation_target
						opinion_target = scope:bastard_scope
						multiplier = 0.25
					}
					modifier = {
						add = 100
						scope:asking_guest = {
							has_relation_friend = scope:coronation_target
						}
					}
					modifier = {
						NOT = { scope:asking_guest = scope:coronation_target }
						add = {
							value = scope:asking_guest.prestige_level
							multiply = 50
						}
					}
					modifier = {
						add = 250
						scope:asking_guest = {
							has_relation_best_friend = scope:coronation_target
						}
					}
					modifier = {
						add = -1000
						scope:asking_guest = {
							has_relation_rival = scope:coronation_target
						}
					}
					modifier = {
						add = 50
						scope:coronation_target = {
							trait_compatibility = {
								target = scope:bastard_scope
								value >= high_positive_trait_compatibility
							}
						}
					}
					modifier = {
						add = 100
						scope:asking_guest = {
							is_powerful_vassal_of = scope:coronation_target
						}
					}
					modifier = {
						add = 50
						scope:asking_guest = {
							is_councillor_of = scope:coronation_target
						}
					}
					desc = coronation.1120.a.success
					send_interface_toast = {
						title = coronation.1120.a.success
						left_icon = scope:coronation_target
						right_icon = scope:bastard_scope
						scope:activity = {
							add_activity_log_entry = {
								key = coronation_bastard_intent_1000_log_success
								character = scope:asking_guest
								target = scope:coronation_target

								# Effect
								scope:asking_guest = {
									stress_impact = {
										arrogant = minor_stress_impact_gain
									}
									legitimize_bastard_interaction_opinions_effect = {
										BASTARD = scope:bastard_scope
										HOUSE_HEAD = scope:coronation_target
										LEGITIMIZER = scope:asking_guest
									}
									hidden_effect = {
										complete_activity_intent = yes
									}
								}
							}
						}
					}
				}
				80 = {	# fail
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					send_interface_toast = {
						title = coronation.1120.a.failure
						left_icon = scope:coronation_target
						add_prestige = minor_prestige_loss
						scope:coronation_target = {
							add_opinion = {
								target = scope:asking_guest
								modifier = annoyed_opinion
								opinion = -10
							}
						}
					}
				}
			}
		}
	}

	#AI Hooked
	option = {
		name = coronation.1121.a
		trigger = {
			scope:coronation_target = {
				is_ai = yes
				has_character_flag = was_hooked
			}
		}
		send_interface_toast = {
			title = coronation.1120.a.success
			left_icon = scope:coronation_target
			right_icon = scope:bastard_scope
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_bastard_intent_1000_log_success
					character = scope:asking_guest
					target = scope:coronation_target

					# Effect
					scope:asking_guest = {
						stress_impact = {
							arrogant = minor_stress_impact_gain
						}
						hidden_effect = {
							complete_activity_intent = yes
						}
						legitimize_bastard_interaction_opinions_effect = {
							BASTARD = scope:bastard_scope
							HOUSE_HEAD = scope:coronation_target
							LEGITIMIZER = scope:asking_guest
						}
					}
				}
			}
		}
	}

	#Agree Player
	option = {
		name = coronation.1121.b
		trigger = {
			root = {
				NOT = { is_ai = yes }
			}
			NOR = {
				scope:coronation_target = { has_character_flag = was_hooked }
				scope:coronation_target = { has_hook = scope:asking_guest }
				scope:asking_guest = { has_hook = scope:coronation_target }
			}
		}
		send_interface_toast = {
			title = coronation.1120.a.success
			left_icon = root
			right_icon = scope:bastard_scope
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_bastard_intent_1000_log_success
					character = scope:coronation_target
					target = scope:bastard_scope

					# Effect
					root = {
						stress_impact = {
							callous = minor_stress_impact_gain
						}

						legitimize_bastard_interaction_opinions_effect = {
							BASTARD = scope:bastard_scope
							HOUSE_HEAD = scope:coronation_target
							LEGITIMIZER = scope:asking_guest
						}

						add_hook = {
							type = favor_hook
							target = scope:asking_guest
						}
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					scope:asking_guest = { has_activity_intent = legitimize_bastard_intent }
				}
				scope:asking_guest = {
					complete_activity_intent = yes
				}
			}
		}
	}

	#Nahhh
	option = {
		name = coronation.1121.c
		trigger = {
			scope:coronation_target = {
				NOT = { is_ai = yes }
				NOT = { scope:coronation_target = { has_character_flag = was_hooked } }
			}
		}
		send_interface_toast = {
			title = coronation.1120.a.failure
			left_icon = scope:asking_guest
			scope:asking_guest = {
				add_prestige = minor_prestige_loss
				add_opinion = {
					target = scope:coronation_target
					modifier = annoyed_opinion
					opinion = -10
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	after = {
		scope:asking_guest = { remove_character_flag = asking_guest }
		scope:bastard_scope = { remove_character_flag = bastard_scope }
		if = {
			limit = {
				scope:coronation_target = { has_character_flag = was_hooked }
			}
			scope:coronation_target = { remove_character_flag = was_hooked }
		}
	}
}

###############################
## Sabotage Intent Events
## 1130-1139
## By BWWalker01
###############################

# Sabotage Intent - Determining how to sabotage
coronation.1130 = {
	type = activity_event
	title = coronation.1130.t
	desc = coronation.1130.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = scheme
	}

	lower_left_portrait = scope:host
	artifact = {
		target = scope:sabotage_target_throne
		position = lower_right_portrait
		trigger = {
			exists = scope:sabotage_target_throne
		}
	}
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		has_activity_intent = sabotage_coronation_intent
		has_character_flag = designated_saboteur
		NOT = {
			scope:activity = {
				has_variable = has_had_sabotage_intent_1000_event
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		scope:activity = {
			set_variable = has_had_sabotage_intent_1000_event
		}
		scope:activity.special_guest:coronation_target = {
			if = {
				limit = {
					any_character_artifact = {
						artifact_type = throne_special
						is_equipped = yes
					}
				}
				random_character_artifact = {
					limit = {
						artifact_type = throne_special
						is_equipped = yes
						NOT = {
							has_variable = painted_table
						}
					}
					save_scope_as = sabotage_target_throne
				}
			}
			random_character_artifact = {
				limit = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
				save_scope_as = sabotage_target_crown
			}
			save_scope_as = coronation_target
		}
	}

	#Option A: Steal the Crown
	option = {
		name = coronation.1130.a
		set_variable = planning_to_steal_crown
		trigger = {
			# exists = scope:sabotage_target_crown
			always = no # Edited - Sleepingcafe - 19/06
		}
		flavor = coronation.1130.a.tt
		custom_tooltip = available_because_intent_tt
		# for the follow-up event
		trigger_event = coronation.1131
		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			ambitious = medium_stress_impact_loss
			deceitful = medium_stress_impact_loss
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = deceitful
				add = 50
			}
			modifier = {
				has_trait = arbitrary
				add = 50
			}
			modifier = {
				has_trait = callous
				add = 50
			}
			modifier = {
				has_trait = fickle
				add = 50
			}
		}
	}

	#Option B: Sabotage the Throne (Embarrass or Kill)
	option = {
		name = coronation.1130.b
		flavor = coronation.1130.b.tt
		set_variable = planning_to_sabotage_throne
		# Once proper infrastructure is added will remove this
		trigger = {
			exists = scope:sabotage_target_throne
		}
		trigger_event = coronation.1131
		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			ambitious = medium_stress_impact_loss
			deceitful = medium_stress_impact_loss
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = major_stress_impact_gain
		}
		ai_chance = {
			base = 0
			modifier = {
				add = agot_coronation_sabotage_values
			}
		}
	}

	#Option C: Convince a claimant to object - possibly starting a war
	option = {
		name = coronation.1130.c
		flavor = coronation.1130.c.tt
		set_variable = planning_to_convince_claimant
		trigger = {
			scope:activity = {
				any_attending_character = {
					age >= 16
					any_claim = {
						explicit = yes
						this = scope:coronation_target.primary_title
					}
				}
			}
		}
		trigger_event = coronation.1141
		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			ambitious = medium_stress_impact_loss
			deceitful = medium_stress_impact_loss
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = major_stress_impact_gain
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = deceitful
				add = 50
			}
			modifier = {
				has_trait = arbitrary
				add = 50
			}
			modifier = {
				has_trait = callous
				add = 50
			}
			modifier = {
				has_trait = fickle
				add = 50
			}
			modifier = {
				add = -1000
				is_allied_to = scope:coronation_target
			}
		}
	}

	#DISABLED - Temporary while I figure it out
	#Option D: Cause a scene between two feuding houses
	option = {
		name = coronation.1130.d
		flavor = coronation.1130.d.tt
		set_variable = planning_to_cause_feud_fight
		trigger = {
			#scope:activity = {
			#	any_attending_character = {
			#		exists = var:house_feud_house
			#		any_owned_story = {
			#			story_type = story_cycle_house_feud
			#			has_variable = house_feud_house
			#			var:house_feud_house.house_head = {
			#				is_alive = yes
			#				is_participant_in_activity = scope:activity
			#			}
			#		}
			#	}
			#}
			#To Disable (Remove When in use)
			always = no
		}
		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			ambitious = medium_stress_impact_loss
			deceitful = medium_stress_impact_loss
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = generous
				add = 50
			}
			modifier = {
				has_trait = humble
				add = 50
			}
			modifier = {
				has_trait = gregarious
				add = 50
			}
			modifier = {
				has_trait = compassionate
				add = 50
			}
		}
	}

	#Option E: This is below me
	option = {
		name = coronation.1130.e
		stress_impact = {
			greedy = minor_stress_impact_loss
			temperate = minor_stress_impact_loss
			lazy = minor_stress_impact_loss
			honest = medium_stress_impact_loss
			ambitious = medium_stress_impact_gain
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_gain
			fickle = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = lazy
				add = 50
			}
			modifier = {
				has_trait = honest
				add = 50
			}
		}
	}
}

# Sabotage Intent - Recruiting a distraction (For Stealing Crown and Sabotaging Throne)
coronation.1131 = {
	type = activity_event
	title = coronation.1130.t
	desc = {
		desc = coronation.1131.desc_intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:potential_distraction_1 = {
						has_trait = kingsguard
					}
				}
				desc = coronation.1131.desc_kingsguard
			}
			triggered_desc = {
				trigger = {
					scope:potential_distraction_1 = {
						NOT = { has_trait = kingsguard }
					}
				}
				desc = coronation.1131.desc_knight
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:potential_distraction_2 = {
						this = scope:coronation_target.cp:councillor_spymaster
					}
				}
				desc = coronation.1131.desc_master_whisper
			}
			triggered_desc = {
				trigger = {
					scope:potential_distraction_2 = {
						intrigue >= 20
					}
				}
				desc = coronation.1131.desc_schemer
			}
		}
		desc = coronation.1131.desc_end
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = scheme
	}

	lower_left_portrait = {
		character = scope:potential_distraction_1
		trigger = {
			exists = scope:potential_distraction_1
		}
	}
	lower_center_portrait = {
		character = scope:potential_distraction_2
		trigger = {
			exists = scope:potential_distraction_2
		}
	}
	lower_right_portrait = {
		character = scope:potential_distraction_3
		trigger = {
			exists = scope:potential_distraction_3
		}
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		has_activity_intent = sabotage_coronation_intent
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = saboteur
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
					}
				}
				add_to_list = potential_distractions
			}
		}
		ordered_in_list = {
			list = potential_distractions
			order_by = {
				if = { # Invite personal friends
					limit = {
						any_relation = {
							type = friend
							this = root
						}
					}

					add = 100
				}
				if = { # Rivals are favored
					limit = {
						any_relation = {
							type = rival
							this = scope:coronation_target
						}
					}

					add = 100
				}
				if = { # People who strongly dislike the ruler favored but not rivals
					limit = {
						opinion = {
							target = scope:coronation_target
							value < 60
						}
					}

					add = 100
				}
				if = { # Knights
					limit = {
						has_trait = knight
					}

					add = 50
				}
				if = { # Kingsguard
					limit = {
						has_trait = kingsguard
					}

					add = 30
				}
			}
			limit = {
				is_healthy = yes
				is_ai = yes
				prowess >= 30
				is_adult = yes
				is_participant_in_activity = scope:activity
				opinion = {
					target = root
					value >= 0
				}
				# You must hold some negative opinion of the ruler
				opinion = {
					target = scope:coronation_target
					value < 30
				}
				# You must not be a particularly honorable or compassionate person
				OR = {
					AND = {
						# If your dishonorable, must also not be compassionate
						ai_honor <= medium_negative_ai_value
						NOT = { ai_compassion >= medium_positive_ai_value }
					}
					# If your uncompassionate, must also not be honorable
					AND = {
						ai_compassion <= medium_negative_ai_value
						NOT = { ai_honor >= medium_positive_ai_value }
					}
				}
				exists = this
			}
			save_scope_as = potential_distraction_1
		}
		ordered_in_list = {
			list = potential_distractions
			order_by = {
				if = { # Intrigue Masters
					limit = {
						has_trait = education_intrigue_5
					}

					add = 100
				}
				if = { # Intrigue Masters
					limit = {
						has_trait = education_intrigue_4
					}

					add = 75
				}
				if = {  # Friends
					limit = {
						any_relation = {
							type = friend
							this = scope:saboteur
						}
					}

					add = 100
				}
				if = { #Rivals are favored
					limit = {
						any_relation = {
							type = rival
							this = scope:coronation_target
						}
					}

					add = 100
				}
				if = { #People who strongly dislike the ruler favored but not rivals
					limit = {
						opinion = {
							target = scope:coronation_target
							value < 60
						}
					}

					add = 100
				}
			}
			limit = {
				is_healthy = yes
				is_ai = yes
				is_adult = yes
				is_participant_in_activity = scope:activity
				intrigue >= 20
				opinion = {
					target = root
					value >= 0
				}
				# You must hold some negative opinion of the ruler
				opinion = {
					target = scope:coronation_target
					value < 30
				}
				# You must not be a particularly honorable or compassionate person
				OR = {
					AND = {
						# If your dishonorable, must also not be compassionate
						ai_honor <= medium_negative_ai_value
						NOT = { ai_compassion >= medium_positive_ai_value }
					}
					# If your uncompassionate, must also not be honorable
					AND = {
						ai_compassion <= medium_negative_ai_value
						NOT = { ai_honor >= medium_positive_ai_value }
					}
				}
				exists = this
			}
			save_scope_as = potential_distraction_2
		}
		ordered_in_list = {
			list = potential_distractions
			order_by = {
				if = { # Master Diplomats
					limit = {
						has_trait = education_diplomacy_5
					}

					add = 100
				}
				if = {
					limit = {
						has_trait = education_diplomacy_4
					}

					add = 75
				}
				if = { # Friends
					limit = {
						any_relation = {
							type = friend
							this = scope:saboteur
						}
					}

					add = 100
				}
				if = { #Rivals are favored
					limit = {
						any_relation = {
							type = rival
							this = scope:coronation_target
						}
					}

					add = 100
				}
				if = { #People who strongly dislike the ruler favored but not rivals
					limit = {
						opinion = {
							target = scope:coronation_target
							value < 60
						}
					}

					add = 100
				}
			}
			limit = {
				is_healthy = yes
				is_ai = yes
				diplomacy >= 20
				is_participant_in_activity = scope:activity
				is_adult = yes
				NOR = {
					has_trait = education_intrigue_5
					has_trait = education_intrigue_4
				}
				opinion = {
					target = root
					value >= 0
				}
				# You must hold some negative opinion of the ruler
				opinion = {
					target = scope:coronation_target
					value < 30
				}
				# You must not be a particularly honorable or compassionate person
				OR = {
					AND = {
						# If your dishonorable, must also not be compassionate
						ai_honor <= medium_negative_ai_value
						NOT = { ai_compassion >= medium_positive_ai_value }
					}
					# If your uncompassionate, must also not be honorable
					AND = {
						ai_compassion <= medium_negative_ai_value
						NOT = { ai_honor >= medium_positive_ai_value }
					}
				}
				exists = this
			}
			save_scope_as = potential_distraction_3
		}
		if = {
			limit = {
				NOT = {
					exists = scope:potential_distraction_1
				}
			}
			create_character = {
				template = tournament_unusual_stranger
				dynasty = none
				culture = root.location.culture
				faith = root.location.faith
				location = root.location
				save_scope_as = potential_distraction_1
				after_creation = {
					add_to_activity = scope:activity
				}
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:potential_distraction_2
				}
			}
			create_character = {
				template = tournament_unusual_stranger
				dynasty = none
				culture = root.location.culture
				faith = root.location.faith
				location = root.location
				save_scope_as = potential_distraction_2
				after_creation = {
					add_to_activity = scope:activity
				}
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:potential_distraction_3
				}
			}
			create_character = {
				template = tournament_unusual_stranger
				dynasty = none
				culture = root.location.culture
				faith = root.location.faith
				location = root.location
				save_scope_as = potential_distraction_3
				after_creation = {
					add_to_activity = scope:activity
				}
			}
		}
	}

	# Option A
	option = {
		name = coronation.1131.a
		flavor = coronation.1131.a.tt
		trigger = {
			exists = scope:potential_distraction_1
		}
		duel = {
			skill = diplomacy
			target = scope:potential_distraction_1
			50 = {	# success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 6.0
					min = -49
				}
				opinion_modifier = {
					who = scope:potential_distraction_1
					opinion_target = scope:coronation_target
					multiplier = -1.25
				}
				opinion_modifier = {
					who = scope:potential_distraction_1
					opinion_target = root
					multiplier = 2.25
				}
				modifier = {
					add = -50
					scope:potential_distraction_1 = {
						is_councillor_of = scope:coronation_target
					}
				}
				modifier = {
					scope:saboteur = {
						has_variable = planning_to_sabotage_throne
					}
					factor = 2.5
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 1
					}
					add = 125
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 2
					}
					add = 250
				}
				desc = coronation.1131.a.success
				send_interface_toast = {
					title = coronation.1131.a.success
					left_icon = scope:potential_distraction_1
					scope:potential_distraction_1 = {
						add_character_flag = distraction
						save_scope_as = distraction
						custom_tooltip = coronation.1131.a.success.tt
					}
					scope:saboteur = {
						if = {
							limit = {
								has_variable = planning_to_steal_crown
							}
							trigger_event = coronation.1134
						}
						else_if = {
							limit = {
								has_variable = planning_to_sabotage_throne
							}
							trigger_event = coronation.1139
						}
					}
					hidden_effect = {
						if = {
							limit = {
								scope:potential_distraction_1 = {
									NOT = {
										is_participant_in_activity = scope:activity
									}
								}
							}
							scope:potential_distraction_1 = {
								add_to_activity = scope:activity
							}
						}
					}
				}
			}
			50 = {	# fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1131.a.failure
				send_interface_toast = {
					title = coronation.1131.a.failure
					left_icon = scope:potential_distraction_1
					add_prestige = minor_prestige_loss
					scope:potential_distraction_1 = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -20
						}
						random_list = {
							50 = {
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 2
									}
									add = 250
								}
								opinion_modifier = {
									who = scope:potential_distraction_1
									opinion_target = scope:coronation_target
									multiplier = -1.25
								}
								opinion_modifier = {
									who = scope:potential_distraction_1
									opinion_target = root
									multiplier = 2.25
								}
								custom_tooltip = coronation.1131.a.no_tell_failure.tt
							}
							50 = {
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 2
									}
									add = 250
								}
								custom_tooltip = {
									text = coronation.1131.a.failure.tt
								}
								scope:potential_distraction_1 = {
									save_scope_as = tattle_tale
								}
								scope:coronation_target = {
									trigger_event = {
										id = coronation.1132
										days = 2
									}
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				who = root
				opinion_target = scope:potential_distraction_1
				multiplier = 2.5
			}
		}
	}

	# Option B
	option = {
		name = coronation.1131.b
		flavor = coronation.1131.b.tt
		trigger = {
			exists = scope:potential_distraction_2
		}
		duel = {
			skill = diplomacy
			target = scope:potential_distraction_2
			50 = {	# success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4.0
					min = -49
				}
				opinion_modifier = {
					who = scope:potential_distraction_2
					opinion_target = scope:coronation_target
					multiplier = -1.25
				}
				opinion_modifier = {
					who = scope:potential_distraction_2
					opinion_target = root
					multiplier = 2.25
				}
				modifier = {
					add = -50
					scope:potential_distraction_2 = {
						is_councillor_of = scope:coronation_target
					}
				}
				modifier = {
					scope:saboteur = {
						has_variable = planning_to_sabotage_throne
					}
					factor = 2.5
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 1
					}
					add = 125
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 2
					}
					add = 250
				}
				desc = coronation.1131.b.success
				send_interface_toast = {
					title = coronation.1131.b.success
					left_icon = scope:potential_distraction_2
					scope:potential_distraction_2 = {
						add_character_flag = distraction
						save_scope_as = distraction
						custom_tooltip = coronation.1131.b.success.tt
					}
					scope:saboteur = {
						if = {
							limit = {
								has_variable = planning_to_steal_crown
							}
							trigger_event = coronation.1134
						}
						else_if = {
							limit = {
								has_variable = planning_to_sabotage_throne
							}
							trigger_event = coronation.1139
						}
					}
					hidden_effect = {
						if = {
							limit = {
								scope:potential_distraction_2 = {
									NOT = {
										is_participant_in_activity = scope:activity
									}
								}
							}
							scope:potential_distraction_2 = {
								add_to_activity = scope:activity
							}
						}
					}
				}
			}
			50 = {	# fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1131.b.failure
				send_interface_toast = {
					title = coronation.1131.b.failure
					left_icon = scope:potential_distraction_2
					add_prestige = minor_prestige_loss
					scope:potential_distraction_2 = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -20
						}
						random_list = {
							50 = {
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 2
									}
									add = 250
								}
								opinion_modifier = {
									who = scope:potential_distraction_2
									opinion_target = scope:coronation_target
									multiplier = -1.25
								}
								opinion_modifier = {
									who = scope:potential_distraction_2
									opinion_target = root
									multiplier = 2.25
								}
								custom_tooltip = coronation.1131.b.no_tell_failure.tt
							}
							50 = {
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 2
									}
									add = 250
								}
								custom_tooltip = {
									text = coronation.1131.b.failure.tt
								}
								scope:potential_distraction_2 = {
									save_scope_as = tattle_tale
								}
								scope:coronation_target = {
									trigger_event = {
										id = coronation.1132
										days = 2
									}
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				who = root
				opinion_target = scope:potential_distraction_2
				multiplier = 2.5
			}
		}
	}

	# Option C
	option = {
		name = coronation.1131.c
		flavor = coronation.1131.c.tt
		trigger = {
			exists = scope:potential_distraction_3
		}
		duel = {
			skill = diplomacy
			target = scope:potential_distraction_3
			50 = {	# success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4.0
					min = -49
				}
				opinion_modifier = {
					who = scope:potential_distraction_3
					opinion_target = scope:coronation_target
					multiplier = -1.25
				}
				opinion_modifier = {
					who = scope:potential_distraction_3
					opinion_target = root
					multiplier = 2.25
				}
				modifier = {
					add = -50
					scope:potential_distraction_3 = {
						is_councillor_of = scope:coronation_target
					}
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 1
					}
					add = 125
				}
				modifier = {
					has_dread_level_towards = {
						target = scope:saboteur
						level = 2
					}
					add = 250
				}
				modifier = {
					scope:saboteur = {
						has_variable = planning_to_sabotage_throne
					}
					factor = 2.5
				}
				desc = coronation.1131.c.success
				send_interface_toast = {
					title = coronation.1131.c.success
					left_icon = scope:potential_distraction_3
					scope:potential_distraction_3 = {
						add_character_flag = distraction
						save_scope_as = distraction
						custom_tooltip = coronation.1131.c.success.tt
					}
					scope:saboteur = {
						if = {
							limit = {
								has_variable = planning_to_steal_crown
							}
							trigger_event = coronation.1134
						}
						else_if = {
							limit = {
								has_variable = planning_to_sabotage_throne
							}
							trigger_event = coronation.1139
						}
					}
					hidden_effect = {
						if = {
							limit = {
								scope:potential_distraction_3 = {
									NOT = {
										is_participant_in_activity = scope:activity
									}
								}
							}
							scope:potential_distraction_3 = {
								add_to_activity = scope:activity
							}
						}
					}
				}
			}
			50 = {	# fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1131.c.failure
				send_interface_toast = {
					title = coronation.1131.c.failure
					left_icon = scope:potential_distraction_3
					add_prestige = minor_prestige_loss
					scope:potential_distraction_3 = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -20
						}
						random_list = {
							50 = {
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:saboteur
										level = 2
									}
									add = 250
								}
								opinion_modifier = {
									who = scope:potential_distraction_3
									opinion_target = scope:coronation_target
									multiplier = -1.25
								}
								opinion_modifier = {
									who = scope:potential_distraction_3
									opinion_target = root
									multiplier = 2.25
								}
								custom_tooltip = coronation.1131.c.no_tell_failure.tt
							}
							50 = {
								desc = coronation.1131.c.failure_tell
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 1
									}
									add = 125
								}
								modifier = {
									has_dread_level_towards = {
										target = scope:coronation_target
										level = 2
									}
									add = 250
								}
								custom_tooltip = {
									text = coronation.1131.c.failure.tt
								}
								scope:potential_distraction_3 = {
									save_scope_as = tattle_tale
								}
								scope:coronation_target = {
									trigger_event = coronation.1132
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				who = root
				opinion_target = scope:potential_distraction_3
				multiplier = 2.5
			}
		}
	}
}

# Host is notified by the tattle tale that someone is trying to sabotage the ceremony - decide what to do
coronation.1132 = {
	type = activity_event
	title = coronation.1132.t
	desc = coronation.1132.desc_1
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_target
		animation = disbelief
	}
	center_portrait = {
		character = scope:tattle_tale
		triggered_animation = {
			trigger = {
				NOT = { has_trait = kingsguard }
			}
			animation = throne_room_bow_1
		}
		triggered_animation = {
			trigger = {
				has_trait = kingsguard
			}
			animation = kingsguard
		}
		animation = throne_room_bow_1
		camera = camera_event_right
	}
	right_portrait = {
		character = scope:saboteur
		animation = prisonhouse
		trigger = {
			scope:tattle_tale = {
				has_trait = kingsguard
			}
		}
	}

	lower_left_portrait = scope:saboteur
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
		trigger = {
			scope:saboteur = {
				has_variable = planning_to_steal_crown
			}
		}
	}
	artifact = {
		target = scope:sabotage_target_throne
		position = lower_right_portrait
		trigger = {
			scope:saboteur = {
				has_variable = planning_to_sabotage_throne
			}
		}
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		root = scope:activity.special_guest:coronation_target
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
		scope:activity = {
			any_attending_character = {
				AND = {
					OR = {
						has_variable = planning_to_steal_crown
						has_variable = planning_to_sabotage_throne
					}
					has_activity_intent = sabotage_coronation_intent
					has_character_flag = designated_saboteur
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		scope:activity.special_guest:coronation_target = {
			random_character_artifact = {
				limit = {
					artifact_type = throne_special
					NOT = {
						has_variable = painted_table
					}
					is_equipped = yes
				}
				save_scope_as = sabotage_target_throne
			}
			random_character_artifact = {
				limit = {
					artifact_slot_type = helmet
					has_variable = coronation_crown
				}
				save_scope_as = sabotage_target_crown
			}
			save_scope_as = coronation_target
			add_opinion = {
				target = scope:saboteur
				modifier = angry_opinion
				opinion = -25
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
					}
					save_scope_as = saboteur
				}
			}
		}
	}

	# Option A: Just send them home
	option = {
		name = coronation.1132.a
		flavor = coronation.1132.a.tt
		stress_impact = {
			base = minor_stress_impact_loss
			deceitful = medium_stress_impact_gain
			arbitrary = medium_stress_impact_gain
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_gain
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_loss
			diligent = medium_stress_impact_loss
		}
		scope:saboteur = {
			remove_from_activity = scope:activity
			add_prestige = medium_prestige_loss
			stress_impact = {
				base = medium_stress_impact_gain
			}
			add_opinion = {
				target = scope:coronation_target
				modifier = angry_opinion
				opinion = -15
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = just
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = 1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							root = { ai_honor > 0 }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							NOT = { root = { ai_vengefulness = 0 } }
						}
						value = 1.25
					}
				}
			}
			opinion_modifier = { #Liking the saboteur will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:saboteur
				multiplier = 2.5
			}
		}
	}

	# Option B: Imprison them
	option = {
		name = coronation.1132.b
		flavor = coronation.1132.b.tt
		stress_impact = {
			base = minor_stress_impact_gain
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		imprison_character_effect = {
			TARGET = scope:saboteur
			IMPRISONER = scope:coronation_target
		}
		scope:saboteur = {
			remove_from_activity = scope:activity
			add_prestige = medium_prestige_loss
			stress_impact = {
				base = medium_stress_impact_gain
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = arbitrary
				add = -1000
			}
			modifier = {
				has_trait = wrathful
				add = 50
			}
			modifier = {
				has_trait = vengeful
				add = 100
			}
			modifier = {

			}
			modifier = {
				is_allied_to = scope:saboteur
				add = -1000
			}
			modifier = {
				any_relation = { type = rival this = scope:saboteur }
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = 1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							root = { ai_honor < 0 }
						}
						value = 1.5
					}
				}
				ai_energy = {
					if = {
						limit = {
							NOT = { root = { ai_energy = 0 } }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							root = { ai_vengefulness > 0 }
						}
						value = 1.75
					}
				}
			}
			opinion_modifier = { #Liking the saboteur will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:saboteur
				multiplier = 2.5
			}
		}
	}

	# Option C: Do nothing
	option = {
		name = coronation.1132.c
		flavor = coronation.1132.c.tt
		stress_impact = {
			base = minor_stress_impact_gain
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_gain
			lazy = medium_stress_impact_loss
			just = medium_stress_impact_gain
			wrathful = medium_stress_impact_gain
			forgiving = medium_stress_impact_loss
		}
		add_legitimacy = -75
		scope:saboteur = {
			add_opinion = {
				target = scope:coronation_target
				modifier = pleased_opinion
				opinion = 25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				any_relation = { type = friend this = scope:saboteur }
				add = 1000
			}
			modifier = {
				any_relation = { type = lover this = scope:saboteur }
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = -1.75
					}
				}
				ai_energy = {
					if = {
						limit = {
							root = { ai_energy < 0 }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							NOT = { root = { ai_vengefulness = 0 } }
						}
						value = 2.5
					}
				}
			}
			opinion_modifier = { #Liking the saboteur will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:saboteur
				multiplier = 2.5
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
	}
}


# Stealing the Crown
coronation.1134 = {
	type = activity_event
	title = coronation.1134.t
	desc = coronation.1134.desc
	override_background = corridor_day
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:saboteur
		animation = scheme
	}
	right_portrait = {
		character = scope:distraction
		triggered_animation = {
			trigger = {
				has_activity_intent = woo_attendee_intent
				intent_target = scope:kingsguard
			}
			animation = flirtation_left
		}
		triggered_animation = {
			trigger = {
				has_activity_intent = befriend_attendee_intent
				intent_target = scope:kingsguard
			}
			animation = throne_room_conversation_1
		}
		triggered_animation = {
			trigger = {
				has_trait = kingsguard
			}
			animation = throne_room_conversation_2
		}
		animation = beg
		camera = camera_event_very_right
	}
	center_portrait = {
		character = scope:kingsguard
		camera = camera_event_left_wedding
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:distraction
					value >= 30
				}
				NOT = {
					scope:distraction = {
						has_trait = kingsguard
					}
				}
			}
			animation = laugh
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:distraction
					value < 0
				}
			}
			animation = throne_room_conversation_3
		}
		triggered_animation = {
			trigger = {
				scope:distraction = {
					has_trait = kingsguard
				}
			}
			animation = throne_room_conversation_1
		}
		animation = throne_room_conversation_3
		camera = camera_event_very_left
	}
	lower_right_portrait = scope:officiant
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
			any_attending_character = {
				has_character_flag = distraction
			}
		}
		has_variable = planning_to_steal_crown
		has_activity_intent = sabotage_coronation_intent #you're trying to sabotage the activity
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		root = {
			save_scope_as = saboteur
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_councillor_of = scope:activity.special_guest:coronation_target
						has_trait = kingsguard
						NOT = { has_character_flag = distraction }
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_councillor_of = scope:activity.special_guest:coronation_target
						has_trait = kingsguard
						NOT = { has_character_flag = distraction }
						NOT = { this = scope:potential_distraction_1 }
					}
					save_scope_as = kingsguard
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_knight_of = scope:activity.special_guest:coronation_target
						NOT = { has_character_flag = distraction }
						NOT = { has_character_flag = designated_saboteur }
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_knight_of = scope:activity.special_guest:coronation_target
						NOT = { has_character_flag = distraction }
						NOT = { this = scope:potential_distraction_1 }
						NOT = { has_character_flag = designated_saboteur }
					}
					save_scope_as = kingsguard
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_participant_in_activity = scope:activity
						has_character_flag = distraction
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_participant_in_activity = scope:activity
						has_character_flag = distraction
					}
					save_scope_as = distraction
				}
			}
		}
	}

	#Go for it - prowess
	option = {
		name = coronation.1134.a
		flavor = coronation.1134.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = prowess
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.5
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					modifier = {
						has_trait = knight
						add = 100
					}
					min = 10
					desc = coronation.1134.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.a.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1134.a.tt.success
								scope:sabotage_target_crown = {
									hidden_effect = {
										set_owner = {
											target = scope:saboteur
											history = {
												type = stolen
												actor = scope:coronation_target #stolen from
												recipient = scope:saboteur #stealer
												location = scope:activity.activity_location
											}
										}
										if = {
											limit = {
												NOT = { has_variable = stolen_artifact }
											}
											set_variable = {
												name = stolen_artifact
												value = 1
											}
										}
										else = {
											change_variable = {
												name = stolen_artifact
												add = 1
											}
										}
									}
								}
								scope:coronation_target = {
									add_personal_artifact_claim = scope:sabotage_target_crown
								}
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = misplaced_crown
					}
					scope:kingsguard = { add_character_flag = reserved_for_next_phase }
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1134.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Go for it - intrigue
	option = {
		name = coronation.1134.b
		flavor = coronation.1134.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = intrigue
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.0
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					min = 10
					desc = coronation.1134.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.a.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1134.a.tt.success
								scope:sabotage_target_crown = {
									hidden_effect = {
										set_owner = {
											target = scope:saboteur
											history = {
												type = stolen
												actor = scope:coronation_target #stolen from
												recipient = scope:saboteur #stealer
												location = scope:activity.activity_location
											}
										}
										if = {
											limit = {
												NOT = { has_variable = stolen_artifact }
											}
											set_variable = {
												name = stolen_artifact
												value = 1
											}
										}
										else = {
											change_variable = {
												name = stolen_artifact
												add = 1
											}
										}
									}
								}
								scope:coronation_target = {
									add_personal_artifact_claim = scope:sabotage_target_crown
								}
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = misplaced_crown
					}
					scope:kingsguard = { add_character_flag = reserved_for_next_phase }
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1134.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Go for it - diplomacy
	option = {
		name = coronation.1134.c
		flavor = coronation.1134.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = diplomacy
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.0
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					min = 10
					desc = coronation.1134.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.a.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1134.a.tt.success
								scope:sabotage_target_crown = {
									hidden_effect = {
										set_owner = {
											target = scope:saboteur
											history = {
												type = stolen
												actor = scope:coronation_target #stolen from
												recipient = scope:saboteur #stealer
												location = scope:activity.activity_location
											}
										}
										if = {
											limit = {
												NOT = { has_variable = stolen_artifact }
											}
											set_variable = {
												name = stolen_artifact
												value = 1
											}
										}
										else = {
											change_variable = {
												name = stolen_artifact
												add = 1
											}
										}
									}
								}
								scope:coronation_target = {
									add_personal_artifact_claim = scope:sabotage_target_crown
								}
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = misplaced_crown
					}
					scope:kingsguard = { add_character_flag = reserved_for_next_phase }
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1134.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Fellow kingsguard
	option = {
		name = coronation.1134.d
		trigger = {
			scope:distraction = {
				has_trait = kingsguard
			}
		}
		random_list = {
			50 = {
				modifier = {
					scope:distraction = {
						has_title = title:d_kingsguard
					}
					add = 1000
				}
				opinion_modifier = {
					who = scope:kingsguard
					opinion_target = scope:distraction
					multiplier = 1.75
				}
				desc = coronation.1134.d.tt.success
				scope:saboteur = {
					send_interface_toast = {
						title = coronation.1134.a.tt.success
						left_icon = scope:saboteur
						right_icon = scope:coronation_target
						custom_tooltip = {
							text = coronation.1134.a.tt.success
							scope:sabotage_target_crown = {
								hidden_effect = {
									set_owner = {
										target = scope:saboteur
										history = {
											type = stolen
											actor = scope:coronation_target #stolen from
											recipient = scope:saboteur #stealer
											location = scope:activity.activity_location
										}
									}
									if = {
										limit = {
											NOT = { has_variable = stolen_artifact }
										}
										set_variable = {
											name = stolen_artifact
											value = 1
										}
									}
									else = {
										change_variable = {
											name = stolen_artifact
											add = 1
										}
									}
								}
							}
							scope:coronation_target = {
								add_personal_artifact_claim = scope:sabotage_target_crown
							}
						}
					}
					stress_impact = {
						base = medium_stress_impact_loss
						deceitful = medium_stress_impact_loss
						honest = major_stress_impact_gain
						craven = major_stress_impact_gain
						patient = medium_stress_impact_loss
					}
				}
				scope:activity = {
					set_variable = misplaced_crown
				}
				scope:kingsguard = { add_character_flag = reserved_for_next_phase }
			}
			50 = {
				desc = coronation.1134.d.tt.failure
				scope:kingsguard = {
					add_opinion = {
						target = scope:distraction
						modifier = suspicion_opinion
						opinion = -15
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	#Nahhh
	option = {
		name = coronation.1134.e
		flavor = coronation.1134.e.tt
		ai_chance = {
			base = 100
			modifier = {
				factor = 1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event

		#Clean up the distraction
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = distraction
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = distraction
					}
					remove_character_flag = distraction
				}
			}
		}
	}
}

# The officiant is notified and decides what to do
coronation.1135 = {
	type = activity_event
	title = coronation.1135.t
	desc = coronation.1135.desc
	theme = family
	left_portrait = {
		character = scope:coronation_officiant
		animation = fear
	}
	right_portrait = {
		character = scope:kingsguard_notifier
		animation = shame
	}

	lower_left_portrait = scope:host
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = misplaced_crown
		}
		OR = {
			root = scope:activity.special_guest:coronation_officiant
			has_character_flag = officiant
			has_character_flag = officiant_on_start
		}
		NOT = {
			scope:activity.special_guest:coronation_target = { has_character_flag = already_resolved }
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		save_scope_as = coronation_officiant
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
					save_scope_as = saboteur
					random_character_artifact = {
						limit = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
						save_scope_as = sabotage_target_crown
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = reserved_for_next_phase
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = reserved_for_next_phase
					}
					save_scope_as = kingsguard_notifier
				}
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
			add_character_flag = already_resolved
		}
	}

	# Option A: Find the Crown
	option = {
		name = coronation.1135.a
		flavor = coronation.1135.a.tt
		# for the follow-up event
		stress_impact = {
			base = minor_stress_impact_loss
			deceitful = medium_stress_impact_gain
			arbitrary = medium_stress_impact_gain
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_loss
			diligent = medium_stress_impact_loss
		}
		if = {
			limit = {
				scope:saboteur = {
					any_character_artifact = {
						artifact_slot_type = helmet
						has_variable = stolen_artifact
						has_variable = coronation_crown
					}
				}
			}
			random_list = {
				50 = {
					opinion_modifier = {
						who = scope:saboteur
						opinion_target = scope:coronation_officiant
						multiplier = 2.5
					}
					modifier = {
						has_trait = education_diplomacy_5
						add = 100
					}
					modifier = {
						has_trait = education_diplomacy_4
						add = 75
					}
					modifier = {
						diplomacy >= 20
						add = 50
					}
					modifier = {
						scope:saboteur = {
							is_ai = no
						}
						add = 3000
					}
					modifier = {
						martial >= 20
						add = 50
					}
					desc = coronation.1135.a.success.tt
					trigger_event = coronation.1136
					custom_tooltip = {
						text = coronation.1135.a.confront.tt
					}
				}
				50 = {
					desc = coronation.1135.a.failure.tt
					stress_impact = {
						base = medium_stress_impact_gain
					}
					scope:coronation_officiant = {
						send_interface_toast = {
							title = coronation.1135.a.failure.tt
							left_icon = scope:coronation_officiant
							right_icon = scope:coronation_target
							scope:coronation_target = {
								add_opinion = {
									target = scope:coronation_officiant
									modifier = angry_opinion
									opinion = -50
								}
								add_legitimacy = -75
							}
						}
					}
					scope:coronation_target = {
						send_interface_toast = {
							title = coronation.1135.a.failure.tt_stolen
							left_icon = scope:coronation_officiant
							right_icon = scope:coronation_target
							custom_tooltip = coronation.1135.a.failure.tt_unrecovered
							scope:coronation_target = {
								add_opinion = {
									target = scope:coronation_officiant
									modifier = angry_opinion
									opinion = -50
								}
								add_legitimacy = -75
							}
						}
						trigger_event = coronation.1138
					}
					hidden_effect = {
						scope:saboteur = {
							send_interface_toast = {
								title = coronation.1135.a.failure_saboteur.tt
								left_icon = scope:coronation_officiant
								right_icon = scope:coronation_target
								custom_tooltip = coronation.1135.failure_saboteur.tt
								show_as_tooltip = {
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = angry_opinion
											opinion = -50
										}
									}
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = deceitful
				add = -50
			}
			modifier = {
				has_trait = just
				add = 100
			}
			modifier = {
				has_trait = diligent
				add = 1000
			}
			modifier = {
				has_trait = arbitrary
				add = -50
			}
			modifier = {
				has_trait = callous
				add = -50
			}
			modifier = {
				has_trait = fickle
				add = -50
			}
			modifier = {
				has_activity_intent = raise_dynasty_prestige_intent
				add = 1000
			}
			opinion_modifier = { #People who like the liege will try to find the crown
				who = scope:coronation_officiant
				opinion_target = scope:coronation_target
				multiplier = 2.5
			}
		}
	}

	# OPTION DISABLED - This should have it's own scripted effects to create replica crowns
	# Option B: Forge a new crown and hope no one notices (They might)
	#option = {
	#	name = coronation.1135.b
	#	flavor = coronation.1135.b.tt
	#	trigger_event = coronation.1131
	#	stress_impact = {
	#		base = minor_stress_impact_gain
	#		deceitful = medium_stress_impact_loss
	#		arbitrary = medium_stress_impact_loss
	#		fickle = medium_stress_impact_loss
	#		callous = medium_stress_impact_loss
	#		sadistic = major_stress_impact_gain
	#		lazy = medium_stress_impact_loss
	#		just = medium_stress_impact_gain
	#		diligent = medium_stress_impact_gain
	#	}
	#	ai_chance = {
	#		base = 100
	#		modifier = {
	#			has_trait = generous
	#			add = 50
	#		}
	#		modifier = {
	#			has_trait = humble
	#			add = 50
	#		}
	#		modifier = {
	#			has_trait = gregarious
	#			add = 50
	#		}
	#		modifier = {
	#			has_trait = compassionate
	#			add = 50
	#		}
	#	}
	#}

	# Option C: Roll with it, no one will care (They will)/We have a backup
	option = {
		name = coronation.1135.c
		flavor = coronation.1135.c.tt
		stress_impact = {
			lazy = major_stress_impact_loss
			honest = medium_stress_impact_gain
			just = major_stress_impact_gain
			arbitrary = medium_stress_impact_loss
			ambitious = medium_stress_impact_gain
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			fickle = medium_stress_impact_loss
		}
		scope:saboteur = {
			send_interface_toast = {
				title = coronation.1135.a.no_search_saboteur.tt
				left_icon = scope:saboteur
				right_icon = scope:coronation_officiant
			}
			hidden_effect = {
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
		}
		scope:coronation_target = {
			if = {
				limit = {
					NOT = {
						any_character_artifact = {
							artifact_slot_type = helmet
						}
					}
				}
				hidden_effect = {
					send_interface_toast = {
						title = coronation.1135.a.tt.success_target
						left_icon = scope:coronation_target
						right_icon = scope:coronation_officiant
						custom_tooltip = coronation.1135.a.no_search_saboteur.tt
					}
				}
				trigger_event = {
					id = coronation.1138
					days = 2
				}
			}
			else = {
				hidden_effect = {
					send_interface_toast = {
						title = coronation.1135.a.tt.success_target
						left_icon = scope:coronation_target
						right_icon = scope:coronation_officiant
						custom_tooltip = coronation.1135.a.backup_crown.tt
					}
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = lazy
				add = 1000
			}
			modifier = {
				has_trait = honest
				add = -50
			}
		}
	}
}

coronation.1136 = {
	type = activity_event
	title = coronation.1135.t
	desc = coronation.1136.desc
	theme = family
	left_portrait = {
		character = scope:saboteur
		animation = personality_rational
		camera = camera_event_very_left
	}
	right_portrait = {
		character = scope:kingsguard_notifier
		animation = throne_room_conversation_3
	}
	center_portrait = {
		character = scope:coronation_officiant
		animation = beg
		camera = camera_event_right
	}
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_officiant
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
					save_scope_as = saboteur
					random_character_artifact = {
						limit = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
						save_scope_as = sabotage_target_crown
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = reserved_for_next_phase
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = reserved_for_next_phase
					}
					save_scope_as = kingsguard_notifier
				}
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
			hidden_effect = {
				send_interface_toast = {
					title = coronation.1135.a.tt.success_target
					right_icon = scope:coronation_target
					left_icon = scope:saboteur
					custom_tooltip = coronation.1136.a.tt.success_target
				}
			}
		}
	}

	#What do you want - AI
	option = {
		name = coronation.1136.a
		trigger = {
			scope:saboteur = {
				is_ai = yes
			}
		}
		duel = {
			skill = diplomacy
			target = scope:saboteur
			# Success
			30 = {
				desc = coronation.1136.tt.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 6.0
					min = -49
				}
				opinion_modifier = {
					who = scope:saboteur
					opinion_target = scope:coronation_officiant
					multiplier = 1.5
				}
				random_list = {
					# You're successful - no strings.
					25 = {
						desc = coronation.1136.tt.success_1
						ai_value_modifier = {
							ai_compassion = {
								if = {
									limit = {
										NOT = { scope:saboteur = { ai_compassion = 0 } }
									}
									value = 3.0
								}
							}
						}
						ai_value_modifier = {
							ai_honor = {
								if = {
									limit = {
										NOT = { scope:saboteur = { ai_honor = 0 } }
									}
									value = 3.0
								}
							}
						}
						min = 10
						scope:coronation_officiant = {
							send_interface_toast = {
								title = coronation.1136.tt.success_past
								left_icon = scope:saboteur
								right_icon = scope:coronation_target
								restore_crown_coronation_effect = yes
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = grateful_opinion
										opinion = 50
									}
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = pleased_opinion
										opinion = 25
									}
								}
								scope:coronation_officiant = {
									add_opinion = {
										target = scope:saboteur
										modifier = annoyed_opinion
										opinion = -15
									}
								}
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_loss
							just = major_stress_impact_loss
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
						scope:coronation_target = {
							hidden_effect = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_target
									show_as_tooltip = {
										restore_crown_coronation_effect = yes
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = grateful_opinion
												opinion = 50
											}
										}
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = pleased_opinion
												opinion = 25
											}
										}
										scope:coronation_officiant = {
											add_opinion = {
												target = scope:saboteur
												modifier = annoyed_opinion
												opinion = -15
											}
										}
									}
								}
							}
						}
						scope:activity = {
							remove_variable = misplaced_crown
						}
						scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
						scope:saboteur = { remove_variable = planning_to_steal_crown }
					}
					# You're successful, but pay gold.
					25 = {
						desc = coronation.1136.tt.success_2
						opinion_modifier = {
							who = scope:saboteur
							opinion_target = scope:coronation_officiant
							multiplier = 1.5
						}
						ai_value_modifier = {
							ai_greed = {
								if = {
									limit = {
										NOT = { scope:saboteur = { ai_greed = 0 } }
									}
									value = 3.0
								}
							}
						}
						min = 10
						scope:coronation_officiant = {
							send_interface_toast = {
								title = coronation.1136.tt.success_past
								left_icon = scope:saboteur
								right_icon = scope:coronation_target
								restore_crown_coronation_effect = yes
								pay_long_term_gold = {
									target = scope:saboteur
									gold = major_gold_value
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = grateful_opinion
										opinion = 50
									}
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = annoyed_opinion
										opinion = -25
									}
								}
								scope:coronation_officiant = {
									add_opinion = {
										target = scope:saboteur
										modifier = irritated_opinion
										opinion = -25
									}
								}
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
							greedy = major_stress_impact_gain
						}
						scope:coronation_target = {
							hidden_effect = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_target
									show_as_tooltip = {
										restore_crown_coronation_effect = yes
										pay_long_term_gold = {
											target = scope:saboteur
											gold = major_gold_value
										}
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = grateful_opinion
												opinion = 50
											}
										}
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = annoyed_opinion
												opinion = -25
											}
										}
										scope:coronation_officiant = {
											add_opinion = {
												target = scope:saboteur
												modifier = irritated_opinion
												opinion = -25
											}
										}
									}
								}
							}
						}
						scope:activity = {
							remove_variable = misplaced_crown
						}
						scope:saboteur = { remove_variable = planning_to_steal_crown }
						scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
					}
					# You're successful, but owe a favor
					25 = {
						desc = coronation.1136.tt.success_3
						ai_value_modifier = {
							ai_boldness = {
								if = {
									limit = {
										NOT = { scope:saboteur = { ai_boldness = 0 } }
									}
									value = 1.5
								}
							}
						}
						modifier = {
							NOR = {
								scope:saboteur = { has_hook = scope:coronation_officiant }
								scope:coronation_officiant = { has_hook = scope:saboteur }
							}
							add = 1000
						}
						min = 10
						scope:coronation_officiant = {
							send_interface_toast = {
								title = coronation.1136.tt.success_past
								left_icon = scope:saboteur
								right_icon = scope:coronation_officiant
								restore_crown_coronation_effect = yes
								scope:saboteur = {
									add_hook = {
										type = favor_hook
										target = scope:coronation_officiant
									}
									remove_variable = planning_to_steal_crown
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = grateful_opinion
										opinion = 50
									}
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:coronation_officiant
										modifier = annoyed_opinion
										opinion = -25
									}
								}
								scope:coronation_officiant = {
									add_opinion = {
										target = scope:saboteur
										modifier = angry_opinion
										opinion = -50
									}
								}
							}
							stress_impact = {
								base = medium_stress_impact_loss
								deceitful = medium_stress_impact_loss
								honest = major_stress_impact_gain
								craven = major_stress_impact_gain
								patient = medium_stress_impact_loss
							}
						}
						scope:coronation_target = {
							hidden_effect = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_officiant
									show_as_tooltip = {
										restore_crown_coronation_effect = yes
										scope:saboteur = {
											add_hook = {
												type = favor_hook
												target = scope:coronation_officiant
											}
											remove_variable = planning_to_steal_crown
										}
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = grateful_opinion
												opinion = 50
											}
										}
										scope:coronation_target = {
											add_opinion = {
												target = scope:coronation_officiant
												modifier = annoyed_opinion
												opinion = -25
											}
										}
										scope:coronation_officiant = {
											add_opinion = {
												target = scope:saboteur
												modifier = angry_opinion
												opinion = -50
											}
										}
									}
								}
							}
						}
						scope:activity = {
							remove_variable = misplaced_crown
						}
						scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
					}
				}
			}
			# Refuses.
			70 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 10
				desc = coronation.1136.tt.failure
				send_interface_toast = {
					title = coronation.1136.tt.failure_past
					left_icon = scope:saboteur
					scope:coronation_officiant = {
						stress_impact = {
							base = medium_stress_impact_gain
							deceitful = medium_stress_impact_gain
							craven = major_stress_impact_gain
						}
						scope:coronation_officiant = {
							add_opinion = {
								target = scope:saboteur
								modifier = hate_opinion
								opinion = -100
							}
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:saboteur
							modifier = treachery_opinion
							opinion = -80
						}
						add_opinion = {
							target = scope:coronation_officiant
							modifier = angry_opinion
							opinion = -50
						}
					}
				}
				scope:coronation_target = {
					hidden_effect = {
						send_interface_toast = {
							title = coronation.1136.tt.failure_past
							left_icon = scope:saboteur
							show_as_tooltip = {
								scope:coronation_officiant = {
									stress_impact = {
										base = medium_stress_impact_gain
										deceitful = medium_stress_impact_gain
										craven = major_stress_impact_gain
									}
									add_opinion = {
										target = scope:saboteur
										modifier = hate_opinion
										opinion = -100
									}
								}
								scope:coronation_target = {
									add_opinion = {
										target = scope:saboteur
										modifier = treachery_opinion
										opinion = -80
									}
									add_opinion = {
										target = scope:coronation_officiant
										modifier = angry_opinion
										opinion = -50
									}
								}
							}
						}
					}
					trigger_event = {
						id = coronation.1138
						days = 2
					}
				}
			}
		}

		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
			modifier = {
				add = 1000
				has_trait = just
			}
		}
	}

	#What do you want - Player
	option = {
		name = coronation.1136.a
		trigger = {
			scope:saboteur = {
				is_ai = no
			}
		}
		scope:saboteur = { trigger_event = coronation.1137 }
		show_as_tooltip = {
			duel = {
				skill = diplomacy
				target = scope:saboteur
				# Success
				30 = {
					desc = coronation.1136.tt.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.0
						min = -49
					}
					opinion_modifier = {
						who = scope:saboteur
						opinion_target = scope:coronation_officiant
						multiplier = 1.5
					}
					random_list = {
						# You're successful - no strings.
						25 = {
							desc = coronation.1136.tt.success_1
							ai_value_modifier = {
								ai_compassion = {
									if = {
										limit = {
											NOT = { scope:saboteur = { ai_compassion = 0 } }
										}
										value = 3.0
									}
								}
							}
							ai_value_modifier = {
								ai_honor = {
									if = {
										limit = {
											NOT = { scope:saboteur = { ai_honor = 0 } }
										}
										value = 3.0
									}
								}
							}
							min = 10
							scope:coronation_officiant = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_target
									restore_crown_coronation_effect = yes
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = grateful_opinion
											opinion = 50
										}
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = pleased_opinion
											opinion = 25
										}
									}
									scope:coronation_officiant = {
										add_opinion = {
											target = scope:saboteur
											modifier = annoyed_opinion
											opinion = -15
										}
									}
								}
							}
							stress_impact = {
								base = medium_stress_impact_loss
								deceitful = medium_stress_impact_loss
								honest = major_stress_impact_loss
								just = major_stress_impact_loss
								craven = major_stress_impact_gain
								patient = medium_stress_impact_loss
							}
							scope:coronation_target = {
								hidden_effect = {
									send_interface_toast = {
										title = coronation.1136.tt.success_past
										left_icon = scope:saboteur
										right_icon = scope:coronation_target
										show_as_tooltip = {
											restore_crown_coronation_effect = yes
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = grateful_opinion
													opinion = 50
												}
											}
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = pleased_opinion
													opinion = 25
												}
											}
											scope:coronation_officiant = {
												add_opinion = {
													target = scope:saboteur
													modifier = annoyed_opinion
													opinion = -15
												}
											}
										}
									}
								}
							}
							scope:activity = {
								remove_variable = misplaced_crown
							}
							scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
							scope:saboteur = { remove_variable = planning_to_steal_crown }
						}
						# You're successful, but pay gold.
						25 = {
							desc = coronation.1136.tt.success_2
							opinion_modifier = {
								who = scope:saboteur
								opinion_target = scope:coronation_officiant
								multiplier = 1.5
							}
							ai_value_modifier = {
								ai_greed = {
									if = {
										limit = {
											NOT = { scope:saboteur = { ai_greed = 0 } }
										}
										value = 3.0
									}
								}
							}
							min = 10
							scope:coronation_officiant = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_target
									restore_crown_coronation_effect = yes
									pay_long_term_gold = {
										target = scope:saboteur
										gold = major_gold_value
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = grateful_opinion
											opinion = 50
										}
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = annoyed_opinion
											opinion = -25
										}
									}
									scope:coronation_officiant = {
										add_opinion = {
											target = scope:saboteur
											modifier = irritated_opinion
											opinion = -25
										}
									}
								}
							}
							stress_impact = {
								base = medium_stress_impact_loss
								deceitful = medium_stress_impact_loss
								honest = major_stress_impact_gain
								craven = major_stress_impact_gain
								patient = medium_stress_impact_loss
								greedy = major_stress_impact_gain
							}
							scope:coronation_target = {
								hidden_effect = {
									send_interface_toast = {
										title = coronation.1136.tt.success_past
										left_icon = scope:saboteur
										right_icon = scope:coronation_target
										show_as_tooltip = {
											restore_crown_coronation_effect = yes
											pay_long_term_gold = {
												target = scope:saboteur
												gold = major_gold_value
											}
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = grateful_opinion
													opinion = 50
												}
											}
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = annoyed_opinion
													opinion = -25
												}
											}
											scope:coronation_officiant = {
												add_opinion = {
													target = scope:saboteur
													modifier = irritated_opinion
													opinion = -25
												}
											}
										}
									}
								}
							}
							scope:activity = {
								remove_variable = misplaced_crown
							}
							scope:saboteur = { remove_variable = planning_to_steal_crown }
							scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
						}
						# You're successful, but owe a favor
						25 = {
							desc = coronation.1136.tt.success_3
							ai_value_modifier = {
								ai_boldness = {
									if = {
										limit = {
											NOT = { scope:saboteur = { ai_boldness = 0 } }
										}
										value = 1.5
									}
								}
							}
							modifier = {
								NOR = {
									scope:saboteur = { has_hook = scope:coronation_officiant }
									scope:coronation_officiant = { has_hook = scope:saboteur }
								}
								add = 1000
							}
							min = 10
							scope:coronation_officiant = {
								send_interface_toast = {
									title = coronation.1136.tt.success_past
									left_icon = scope:saboteur
									right_icon = scope:coronation_officiant
									restore_crown_coronation_effect = yes
									scope:saboteur = {
										add_hook = {
											type = favor_hook
											target = scope:coronation_officiant
										}
										remove_variable = planning_to_steal_crown
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = grateful_opinion
											opinion = 50
										}
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:coronation_officiant
											modifier = annoyed_opinion
											opinion = -25
										}
									}
									scope:coronation_officiant = {
										add_opinion = {
											target = scope:saboteur
											modifier = angry_opinion
											opinion = -50
										}
									}
								}
								stress_impact = {
									base = medium_stress_impact_loss
									deceitful = medium_stress_impact_loss
									honest = major_stress_impact_gain
									craven = major_stress_impact_gain
									patient = medium_stress_impact_loss
								}
							}
							scope:coronation_target = {
								hidden_effect = {
									send_interface_toast = {
										title = coronation.1136.tt.success_past
										left_icon = scope:saboteur
										right_icon = scope:coronation_officiant
										show_as_tooltip = {
											restore_crown_coronation_effect = yes
											scope:saboteur = {
												add_hook = {
													type = favor_hook
													target = scope:coronation_officiant
												}
												remove_variable = planning_to_steal_crown
											}
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = grateful_opinion
													opinion = 50
												}
											}
											scope:coronation_target = {
												add_opinion = {
													target = scope:coronation_officiant
													modifier = annoyed_opinion
													opinion = -25
												}
											}
											scope:coronation_officiant = {
												add_opinion = {
													target = scope:saboteur
													modifier = angry_opinion
													opinion = -50
												}
											}
										}
									}
								}
							}
							scope:activity = {
								remove_variable = misplaced_crown
							}
							scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
						}
					}
				}
				# Refuses.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1136.tt.failure
					send_interface_toast = {
						title = coronation.1136.tt.failure_past
						left_icon = scope:saboteur
						scope:coronation_officiant = {
							stress_impact = {
								base = medium_stress_impact_gain
								deceitful = medium_stress_impact_gain
								craven = major_stress_impact_gain
							}
							scope:coronation_officiant = {
								add_opinion = {
									target = scope:saboteur
									modifier = hate_opinion
									opinion = -100
								}
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = treachery_opinion
								opinion = -80
							}
							add_opinion = {
								target = scope:coronation_officiant
								modifier = angry_opinion
								opinion = -50
							}
						}
					}
					scope:coronation_target = {
						hidden_effect = {
							send_interface_toast = {
								title = coronation.1136.tt.failure_past
								left_icon = scope:saboteur
								show_as_tooltip = {
									scope:coronation_officiant = {
										stress_impact = {
											base = medium_stress_impact_gain
											deceitful = medium_stress_impact_gain
											craven = major_stress_impact_gain
										}
										add_opinion = {
											target = scope:saboteur
											modifier = hate_opinion
											opinion = -100
										}
									}
									scope:coronation_target = {
										add_opinion = {
											target = scope:saboteur
											modifier = treachery_opinion
											opinion = -80
										}
										add_opinion = {
											target = scope:coronation_officiant
											modifier = angry_opinion
											opinion = -50
										}
									}
								}
							}
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}

			modifier = {
				scope:saboteur = {
					is_ai = no
				}
				add = 100
			}

			modifier = {
				has_trait = just
				add = 1000
			}
		}
	}

	#Keep it
	option = {
		name = coronation.1136.b
		scope:coronation_target = {
			trigger_event = {
				id = coronation.1138
				days = 2
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = vengeful
				}
			}

			modifier = {
				has_trait = just
				add = -100
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:saboteur = { remove_character_flag = busy_in_coronation_event }

		#Clean up the distraction
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = distraction
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = distraction
					}
					remove_character_flag = distraction
				}
			}
		}
	}
}


coronation.1137 = {
	type = activity_event
	title = coronation.1135.t
	desc = coronation.1137.desc
	theme = family
	left_portrait = {
		character = scope:saboteur
		animation = personality_rational
		camera = camera_event_very_left
	}
	right_portrait = {
		character = scope:kingsguard_notifier
		animation = throne_room_conversation_3
	}
	center_portrait = {
		character = scope:coronation_officiant
		animation = beg
		camera = camera_event_right
	}
	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = saboteur
		add_character_flag = busy_in_coronation_event
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
					random_character_artifact = {
						limit = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
						save_scope_as = sabotage_target_crown
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = reserved_for_next_phase
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = reserved_for_next_phase
					}
					save_scope_as = kingsguard_notifier
				}
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity.special_guest:coronation_officiant = {
			save_scope_as = coronation_officiant
			add_character_flag = busy_in_coronation_event
		}
	}

	option = {
		name = coronation.1137.a
		flavor = coronation.1137.a.tt
		scope:coronation_officiant = {
			send_interface_toast = {
				title = coronation.1136.tt.success_past
				left_icon = scope:saboteur
				right_icon = scope:coronation_target
				restore_crown_coronation_effect = yes
				scope:coronation_target = {
					add_opinion = {
						target = scope:coronation_officiant
						modifier = grateful_opinion
						opinion = 50
					}
				}
				scope:coronation_target = {
					add_opinion = {
						target = scope:saboteur
						modifier = pleased_opinion
						opinion = 25
					}
				}
				scope:coronation_officiant = {
					add_opinion = {
						target = scope:saboteur
						modifier = annoyed_opinion
						opinion = -15
					}
				}
				scope:saboteur = {
					stress_impact = {
						base = medium_stress_impact_loss
						deceitful = medium_stress_impact_gain
						honest = major_stress_impact_gain
						craven = major_stress_impact_gain
						patient = medium_stress_impact_loss
						ambitious = medium_stress_impact_gain
						greedy = medium_stress_impact_gain
						callous = medium_stress_impact_gain
						sadistic = medium_stress_impact_gain
					}
				}
				stress_impact = {
					base = medium_stress_impact_loss
					honest = major_stress_impact_loss
					craven = major_stress_impact_gain
					just = medium_stress_impact_loss
				}
			}
		}
		hidden_effect = {
			scope:coronation_target = {
				send_interface_toast = {
					title = coronation.1136.tt.success_past
					left_icon = scope:saboteur
					right_icon = scope:coronation_target
					show_as_tooltip = {
					restore_crown_coronation_effect = yes
						scope:coronation_target = {
							add_opinion = {
								target = scope:coronation_officiant
								modifier = grateful_opinion
								opinion = 50
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = pleased_opinion
								opinion = 25
							}
						}
						scope:coronation_officiant = {
							add_opinion = {
								target = scope:saboteur
								modifier = annoyed_opinion
								opinion = -15
							}
						}
					}
				}
			}
		}
		scope:activity = {
			remove_variable = misplaced_crown
		}
		remove_variable = planning_to_steal_crown
		scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.1137.b
		flavor = coronation.1137.b.tt
		scope:coronation_officiant = {
			send_interface_toast = {
				title = coronation.1136.tt.success_past
				left_icon = scope:saboteur
				right_icon = scope:coronation_target
				restore_crown_coronation_effect = yes
				scope:coronation_target = {
					add_opinion = {
						target = scope:coronation_officiant
						modifier = grateful_opinion
						opinion = 50
					}
				}
				scope:coronation_target = {
					add_opinion = {
						target = scope:saboteur
						modifier = annoyed_opinion
						opinion = -25
					}
				}
				scope:coronation_officiant = {
					add_opinion = {
						target = scope:saboteur
						modifier = irritated_opinion
						opinion = -25
					}
				}
				pay_long_term_gold = {
					target = scope:saboteur
					gold = major_gold_value
				}
				scope:saboteur = {
					stress_impact = {
						base = medium_stress_impact_loss
						deceitful = medium_stress_impact_loss
						honest = major_stress_impact_gain
						craven = major_stress_impact_gain
						patient = medium_stress_impact_loss
						ambitious = major_stress_impact_loss
					}
				}
				stress_impact = {
					base = medium_stress_impact_gain
					deceitful = medium_stress_impact_loss
					honest = major_stress_impact_gain
					craven = major_stress_impact_gain
					just = medium_stress_impact_gain
					greedy = major_stress_impact_gain
				}
			}
		}
		hidden_effect = {
			scope:coronation_target = {
				send_interface_toast = {
					title = coronation.1136.tt.success_past
					left_icon = scope:saboteur
					right_icon = scope:coronation_target
					show_as_tooltip = {
						restore_crown_coronation_effect = yes
						scope:coronation_officiant = {
							pay_long_term_gold = {
								target = scope:saboteur
								gold = major_gold_value
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:coronation_officiant
								modifier = grateful_opinion
								opinion = 50
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = annoyed_opinion
								opinion = -25
							}
						}
						scope:coronation_officiant = {
							add_opinion = {
								target = scope:saboteur
								modifier = irritated_opinion
								opinion = -25
							}
						}
					}
				}
			}
		}
		scope:activity = {
			remove_variable = misplaced_crown
		}
		scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
		remove_variable = planning_to_steal_crown
		ai_chance = {
			base = 100
		}
	}

	#Option C: For a Favor
	option = {
		name = coronation.1137.c
		flavor = coronation.1137.c.tt
		scope:coronation_officiant = {
			send_interface_toast = {
				title = coronation.1136.tt.success_past
				left_icon = scope:saboteur
				right_icon = scope:coronation_officiant
				restore_crown_coronation_effect = yes
				scope:coronation_target = {
					add_opinion = {
						target = scope:coronation_officiant
						modifier = grateful_opinion
						opinion = 50
					}
				}
				scope:coronation_target = {
					add_opinion = {
						target = scope:saboteur
						modifier = annoyed_opinion
						opinion = -25
					}
				}
				scope:coronation_officiant = {
					add_opinion = {
						target = scope:saboteur
						modifier = angry_opinion
						opinion = -50
					}
				}
			}
			scope:saboteur = {
				add_hook = {
					type = favor_hook
					target = scope:coronation_officiant
				}
				stress_impact = {
					base = medium_stress_impact_loss
					deceitful = medium_stress_impact_loss
					honest = major_stress_impact_gain
					craven = major_stress_impact_gain
					patient = medium_stress_impact_loss
					ambitious = major_stress_impact_loss
					authoritative = medium_stress_impact_loss
				}
			}
			stress_impact = {
				base = medium_stress_impact_loss
				deceitful = medium_stress_impact_loss
				honest = major_stress_impact_gain
				craven = major_stress_impact_gain
				patient = medium_stress_impact_loss
			}
		}
		hidden_effect = {
			scope:coronation_target = {
				send_interface_toast = {
					title = coronation.1136.tt.success_past
					left_icon = scope:saboteur
					right_icon = scope:coronation_target
					show_as_tooltip = {
						restore_crown_coronation_effect = yes
						scope:saboteur = {
							add_hook = {
								type = favor_hook
								target = scope:coronation_officiant
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:coronation_officiant
								modifier = grateful_opinion
								opinion = 50
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = annoyed_opinion
								opinion = -25
							}
						}
						scope:coronation_officiant = {
							add_opinion = {
								target = scope:saboteur
								modifier = angry_opinion
								opinion = -50
							}
						}
					}
				}
			}
		}
		scope:activity = {
			remove_variable = misplaced_crown
		}
		remove_variable = planning_to_steal_crown
		scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
		ai_chance = {
			base = 100
		}
	}

	#Keep it
	option = {
		name = coronation.1137.d
		flavor = coronation.1137.d.tt
		scope:coronation_officiant = {
			send_interface_toast = {
				title = coronation.1136.tt.failure_past
				left_icon = scope:saboteur
				right_icon = scope:coronation_officiant
				scope:coronation_target = {
					add_opinion = {
						target = scope:coronation_officiant
						modifier = angry_opinion
						opinion = -50
					}
				}
				scope:coronation_target = {
					add_opinion = {
						target = scope:saboteur
						modifier = treachery_opinion
						opinion = -80
					}
				}
				scope:coronation_officiant = {
					add_opinion = {
						target = scope:saboteur
						modifier = hate_opinion
						opinion = -100
					}
				}
			}
			scope:saboteur = {
				stress_impact = {
					base = medium_stress_impact_gain
					deceitful = medium_stress_impact_loss
					honest = major_stress_impact_gain
					craven = major_stress_impact_gain
					just = major_stress_impact_gain
					ambitious = medium_stress_impact_loss
				}
			}
			stress_impact = {
				base = medium_stress_impact_gain
				deceitful = medium_stress_impact_loss
				honest = major_stress_impact_gain
				craven = major_stress_impact_gain
				just = massive_stress_impact_gain
			}
		}
		hidden_effect = {
			scope:coronation_target = {
				send_interface_toast = {
					title = coronation.1136.tt.failure_past
					left_icon = scope:saboteur
					right_icon = scope:coronation_target
					show_as_tooltip = {
						restore_crown_coronation_effect = yes
						scope:coronation_target = {
							add_opinion = {
								target = scope:coronation_officiant
								modifier = angry_opinion
								opinion = -50
							}
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = treachery_opinion
								opinion = -80
							}
						}
						scope:coronation_officiant = {
							add_opinion = {
								target = scope:saboteur
								modifier = hate_opinion
								opinion = -100
							}
						}
					}
				}
				trigger_event = {
					id = coronation.1138
					days = 2
				}
			}
			scope:saboteur = {
				if = { #Clean up variables
					limit = {
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
							has_variable = stolen_artifact
						}
					}
					every_character_artifact = {
						limit = {
							artifact_slot_type = helmet
							has_variable = coronation_crown
							has_variable = stolen_artifact
						}
						remove_variable = coronation_crown
						remove_variable = stolen_artifact
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
		remove_variable = planning_to_steal_crown
		scope:kingsguard_notifier = { remove_character_flag = reserved_for_next_phase }
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:coronation_officiant = { remove_character_flag = busy_in_coronation_event }
	}
}

coronation.1138 = {
	type = activity_event
	title = coronation.1135.t
	desc = coronation.1138.desc
	theme = family
	left_portrait = {
		character = scope:coronation_target
		animation = anger
	}
	right_portrait = {
		character = scope:coronation_officiant
		animation = shame
	}

	artifact = {
		target = scope:sabotage_target_crown
		position = lower_center_portrait
	}

	cooldown = { years = 1 }

	trigger = {
		scope:activity = {
			has_variable = misplaced_crown
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		save_scope_as = coronation_target
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
						any_character_artifact = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
					}
					save_scope_as = saboteur
					random_character_artifact = {
						limit = {
							artifact_slot_type = helmet
							has_variable = stolen_artifact
							has_variable = coronation_crown
						}
						save_scope_as = sabotage_target_crown
					}
				}
			}
		}
		scope:activity.special_guest:coronation_officiant = {
			save_scope_as = coronation_officiant
			add_character_flag = busy_in_coronation_event
		}
	}

	# Option A: Replace the Officiant
	option = {
		name = coronation.1138.a
		custom_tooltip = coronation.1138.a.tt
		scope:coronation_officiant = {
			add_character_flag = removed_as_officiant
		}
		# for the follow-up event
		scope:coronation_target = {
			trigger_event = coronation.0002
		}
		scope:saboteur = {
			hidden_effect = {
				send_interface_toast = {
					title = coronation.1135.a.officiant_removed.tt
					left_icon = scope:saboteur
					complete_activity_intent = yes
				}

				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = deceitful
				add = -50
			}
			modifier = {
				has_trait = just
				add = -100
			}
			modifier = {
				has_trait = wrathful
				add = 1000
			}
			modifier = {
				has_trait = arbitrary
				add = -50
			}
			modifier = {
				has_trait = callous
				add = 100
			}
			modifier = {
				has_trait = fickle
				add = 100
			}
			opinion_modifier = { #People who like the liege will try to find the crown
				who = scope:coronation_officiant
				opinion_target = scope:coronation_target
				multiplier = 2.5
			}
		}
	}

	# Option B: We carry on
	option = {
		name = coronation.1138.b
		custom_tooltip = coronation.1138.b.tt
		scope:saboteur = {
			hidden_effect = {
				send_interface_toast = {
					title = coronation.1135.a.carry_on.tt
					left_icon = scope:saboteur
					complete_activity_intent = yes
				}
				stress_impact = {
					base = medium_stress_impact_loss
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = lazy
				add = 1000
			}
		}
	}

	# Option C:
	option = {
		name = coronation.1138.c
		custom_tooltip = coronation.1138.c.tt
		trigger = {
			custom_tooltip = {
				text = needs_crown_for_to_select
				root = {
					any_character_artifact = {
						artifact_slot_type = helmet
					}
				}
			}
		}
		show_as_unavailable = {
			always = yes
		}
		trigger_event = coronation.0005
		ai_chance = {
			base = 1000
			modifier = {
				add = 100
				has_trait = forgiving
			}
			modifier = {
				add = 100
				has_trait = trusting
			}
			modifier = {
				add = 100
				has_trait = gregarious
			}
		}
	}

	# Option D: We cancel
	option = {
		name = coronation.1138.d
		custom_tooltip = {
			text = coronation.1138.d.tt
		}
		scope:coronation_target = {
			set_variable = {
				name = coronation_gold_recoup_value
				value = {
					value = 0
					# For a base, add the total pot spent.
					add = scope:activity.var:coronation_refund_pot
					# Then revise it down a little to account for some costs being irredeemable.
					multiply = 0.75
				}
			}
		}
		add_character_flag = stolen_crown
		hidden_effect = {
			invalidate_activity = root.involved_activity
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = lazy
				add = 1000
			}
			modifier = {
				has_trait = craven
				add = 1000
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:coronation_officiant = { remove_character_flag = busy_in_coronation_event }
	}
}

# Sabotaging the Throne
coronation.1139 = {
	type = activity_event
	title = coronation.1139.t
	desc = coronation.1139.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:saboteur
		animation = scheme
	}
	right_portrait = {
		character = scope:distraction
		triggered_animation = {
			trigger = {
				has_activity_intent = woo_attendee_intent
				intent_target = scope:kingsguard
			}
			animation = flirtation_left
		}
		triggered_animation = {
			trigger = {
				has_activity_intent = befriend_attendee_intent
				intent_target = scope:kingsguard
			}
			animation = throne_room_conversation_1
		}
		triggered_animation = {
			trigger = {
				has_trait = kingsguard
			}
			animation = throne_room_conversation_2
		}
		animation = beg
		camera = camera_event_very_right
	}
	center_portrait = {
		character = scope:kingsguard
		camera = camera_event_left_wedding
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:distraction
					value >= 30
				}
				NOT = {
					scope:distraction = {
						has_trait = kingsguard
					}
				}
			}
			animation = laugh
		}
		triggered_animation = {
			trigger = {
				opinion = {
					target = scope:distraction
					value < 0
				}
			}
			animation = throne_room_conversation_3
		}
		triggered_animation = {
			trigger = {
				scope:distraction = {
					has_trait = kingsguard
				}
			}
			animation = throne_room_conversation_1
		}
		animation = throne_room_conversation_3
		camera = camera_event_very_left
	}
	lower_right_portrait = scope:officiant
	artifact = {
		target = scope:sabotage_target_throne
		position = lower_center_portrait
	}

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
		has_variable = planning_to_sabotage_throne
		has_activity_intent = sabotage_coronation_intent #you're trying to sabotage the activity
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		root = {
			save_scope_as = saboteur
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_councillor_of = scope:activity.special_guest:coronation_target
						has_trait = kingsguard
						NOT = { has_character_flag = distraction }
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_councillor_of = scope:activity.special_guest:coronation_target
						has_trait = kingsguard
						NOT = { has_character_flag = distraction }
						NOT = { this = scope:potential_distraction_1 }
					}
					save_scope_as = kingsguard
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_knight_of = scope:activity.special_guest:coronation_target
						NOT = { has_character_flag = distraction }
						NOT = { has_character_flag = designated_saboteur }
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_knight_of = scope:activity.special_guest:coronation_target
						NOT = { has_character_flag = distraction }
						NOT = { this = scope:potential_distraction_1 }
						NOT = { has_character_flag = designated_saboteur }
					}
					save_scope_as = kingsguard
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_participant_in_activity = scope:activity
						has_character_flag = distraction
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_participant_in_activity = scope:activity
						has_character_flag = distraction
					}
					save_scope_as = distraction
				}
			}
		}
	}

	#Go for it - prowess
	option = {
		name = coronation.1139.a
		flavor = coronation.1139.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = prowess
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.5
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					modifier = {
						has_trait = knight
						add = 100
					}
					min = 10
					desc = coronation.1139.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1139.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1139.a.tt.success_text
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = sabotaged_throne
					}
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1139.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1139.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Go for it - intrigue
	option = {
		name = coronation.1139.b
		flavor = coronation.1139.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = intrigue
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.0
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					min = 10
					desc = coronation.1139.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1139.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1139.a.tt.success_text
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = sabotaged_throne
					}
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1139.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1134.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Go for it - diplomacy
	option = {
		name = coronation.1139.c
		flavor = coronation.1139.a.tt
		# You try to sabotage the Iron Throne.
		scope:distraction = {
			duel = {
				skill = diplomacy
				target = scope:kingsguard
				# You're successful.
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 6.0
						min = -49
					}
					opinion_modifier = {
						who = scope:kingsguard
						opinion_target = scope:distraction
						multiplier = 1.5
					}
					min = 10
					desc = coronation.1139.tt.success
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1139.tt.success
							left_icon = scope:saboteur
							right_icon = scope:coronation_target
							custom_tooltip = {
								text = coronation.1139.a.tt.success_text
							}
						}
						stress_impact = {
							base = medium_stress_impact_loss
							deceitful = medium_stress_impact_loss
							honest = major_stress_impact_gain
							craven = major_stress_impact_gain
							patient = medium_stress_impact_loss
						}
					}
					scope:activity = {
						set_variable = sabotaged_throne
					}
				}
				# The distraction is caught.
				70 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 10
					desc = coronation.1139.tt.failure
					scope:distraction = { add_prestige = massive_prestige_loss }
					scope:kingsguard = {
						add_opinion = {
							target = scope:distraction
							modifier = angry_opinion
							opinion = -45
						}
					}
					scope:coronation_target = {
						add_opinion = {
							target = scope:distraction
							modifier = treachery_opinion
							opinion = -80
						}
					}
					scope:saboteur = {
						send_interface_toast = {
							title = coronation.1139.tt.failure
							left_icon = scope:kingsguard
							scope:saboteur = {
								stress_impact = {
									base = medium_stress_impact_gain
									deceitful = medium_stress_impact_gain
									craven = major_stress_impact_gain
								}
							}
							# Plus scope:kingsguard notices.
							scope:kingsguard = {
								add_opinion = {
									target = scope:saboteur
									modifier = angry_opinion
									opinion = -45
								}
								save_scope_as = tattle_tale
							}
							scope:coronation_target = {
								add_opinion = {
									target = scope:saboteur
									modifier = treachery_opinion
									opinion = -80
								}
								trigger_event = {
									id = coronation.1132
									days = 2
								}
							}
							scope:saboteur = { add_prestige = massive_prestige_loss }
						}
					}
				}
			}
		}

		# We give base stress loss for this'un too.
		ai_chance = {
			base = 1
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_compassion = -0.25
				ai_rationality = -0.25
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = patient
				}
			}
		}
	}

	#Fellow kingsguard
	option = {
		name = coronation.1139.d
		trigger = {
			scope:distraction = {
				has_trait = kingsguard
			}
		}
		random_list = {
			50 = {
				modifier = {
					scope:distraction = {
						has_title = title:d_kingsguard
					}
					add = 1000
				}
				opinion_modifier = {
					who = scope:kingsguard
					opinion_target = scope:distraction
					multiplier = 1.75
				}
				desc = coronation.1134.d.tt.success
				scope:saboteur = {
					send_interface_toast = {
						title = coronation.1139.d.tt.success
						left_icon = scope:saboteur
						right_icon = scope:coronation_target
						custom_tooltip = {
							text = coronation.1139.a.tt.success_text
						}
					}
					stress_impact = {
						base = medium_stress_impact_loss
						deceitful = medium_stress_impact_loss
						honest = major_stress_impact_gain
						craven = major_stress_impact_gain
						patient = medium_stress_impact_loss
					}
				}
				scope:activity = {
					set_variable = sabotaged_throne
				}
			}
			50 = {
				desc = coronation.1134.d.tt.failure
				scope:saboteur = {
					send_interface_toast = {
						title = coronation.1139.tt.failure
						left_icon = scope:kingsguard
						scope:saboteur = {
							stress_impact = {
								base = medium_stress_impact_gain
								deceitful = medium_stress_impact_gain
								craven = major_stress_impact_gain
							}
						}
						# Plus scope:kingsguard notices.
						scope:kingsguard = {
							add_opinion = {
								target = scope:saboteur
								modifier = angry_opinion
								opinion = -45
							}
							scope:kingsguard = {
								add_opinion = {
									target = scope:distraction
									modifier = annoyed_opinion
									opinion = -15
								}
							}
							save_scope_as = tattle_tale
						}
						scope:coronation_target = {
							add_opinion = {
								target = scope:saboteur
								modifier = treachery_opinion
								opinion = -80
							}
							trigger_event = {
								id = coronation.1132
								days = 2
							}
						}
						scope:saboteur = { add_prestige = massive_prestige_loss }
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	#Nahhh
	option = {
		name = coronation.1139.e
		flavor = coronation.1139.e.tt
		ai_chance = {
			base = 100
			modifier = {
				factor = -1.25
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event

		#Clean up the distraction
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = distraction
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = distraction
					}
				}
				remove_character_flag = distraction
			}
		}
	}
}

#Ruler Slips
coronation.1140 = {
	type = activity_event
	title = coronation.1140.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:activity = {
						scope:activity.activity_location = {
							OR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
				}
				desc = coronation.1140.desc_seven_kingdoms
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						scope:activity.activity_location = {
							NOR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
				}
				desc = coronation.1140.desc_other
			}
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:celebrating_guest
		animation = grief
	}
	center_portrait = {
		character = scope:coronation_target
		animation = fear
		camera = camera_event_right_wedding
	}
	right_portrait = {
		character = scope:officiant
		animation = shock
	}

	immediate = {
		play_music_cue = mx_cue_positive_effect
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = designated_saboteur
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						has_character_flag = designated_saboteur
					}
					save_scope_as = saboteur
				}
			}
		}
		scope:activity.special_guest:coronation_target = {
			if = {
				limit = {
					any_character_artifact = {
						artifact_type = throne_special
						is_equipped = yes
					}
				}
				random_character_artifact = {
					limit = {
						artifact_type = throne_special
						is_equipped = yes
					}
					save_scope_as = sabotage_target_throne
				}
			}
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
					}
					save_scope_as = officiant
				}
			}
		}
		if = {
			limit = {
				root = {
					is_ai = no
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:officiant
						this = scope:activity.special_guest:coronation_officiant
					}
				}
			}
			root = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_spouse ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.primary_spouse = scope:activity.special_guest:coronation_officiant
					scope:host.primary_spouse = scope:officiant
				}
			}
			scope:host.primary_spouse = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.cp:councillor_castellan ?= { is_participant_in_activity = scope:activity }
				NOR = {
					scope:host.cp:councillor_castellan = scope:activity.special_guest:coronation_officiant
					scope:host.cp:councillor_castellan = scope:officiant
				}
			}
			scope:host.cp:councillor_castellan = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:host.primary_heir ?= { is_participant_in_activity = scope:activity }
				scope:host.primary_heir ?= { is_adult = yes }
				NOR = {
					scope:host.primary_heir = scope:activity.special_guest:coronation_officiant
					scope:host.primary_heir = scope:officiant
				}
			}
			scope:host.primary_heir = { save_scope_as = celebrating_guest }
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = best_friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						any_relation = {
							type = friend
							this = scope:coronation_target
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
		else = {
			limit = {
				scope:activity = {
					any_attending_character = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						opinion = {
							target = scope:coronation_target
							value > 0
						}
						NOR = {
							this = scope:activity.special_guest:coronation_officiant
							this = scope:officiant
						}
					}
					save_scope_as = celebrating_guest
				}
			}
		}
	}

	option = {
		name = coronation.1140.a
		random_list = {
			1 = {
				desc = coronation.1140.a.tt_die
				trigger = {
					scope:coronation_target.primary_title = title:e_the_iron_throne
					scope:coronation_target.location = {
						OR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				death = {
					death_reason = death_iron_throne_impaled_sabotage
					killer = scope:saboteur
				}

				scope:saboteur = {
					add_secret = {
						type = secret_murder
						target = scope:coronation_target
					}
				}
				scope:coronation_target.dynasty ?= {
					add_dynasty_prestige_level = -1
				}
			}
			1 = {
				desc = coronation.1140.a.tt_die_broken_neck
				trigger = {
					NOT = {
						scope:coronation_target.primary_title = title:e_the_iron_throne
						scope:coronation_target.location = {
							OR = {
								has_building = the_red_keep_01
								has_building = the_red_keep_02
								has_building = the_red_keep_03
							}
						}
					}
				}
				death = {
					death_reason = death_throne_slipped_sabotage
					killer = scope:saboteur
				}

				scope:saboteur = {
					add_secret = {
						type = secret_murder
						target = scope:coronation_target
					}
				}
				scope:coronation_target.dynasty ?= {
					add_dynasty_prestige_level = -1
				}
			}
			59 = {
				desc = coronation.1140.a.tt_slip
				modifier = {
					add = 1
					scope:coronation_target.location = {
						NOR = {
							has_building = the_red_keep_01
							has_building = the_red_keep_02
							has_building = the_red_keep_03
						}
					}
				}
				scope:activity = {
					add_activity_log_entry = {
						key = coronation_slip_log
						tags = { bad }
						score = 20
						character = scope:coronation_target
						scope:coronation_target = {
							add_prestige = major_prestige_loss
							add_character_flag = ruler_slipped
						}
					}
				}
				hidden_effect = {
					scope:activity = {
						every_attending_character = {
							send_interface_toast = {
								title = coronation_slip_title
								left_icon = scope:coronation_target
								custom_tooltip = coronation_slip_log
								show_as_tooltip = {
									add_prestige = major_prestige_loss
								}
							}
						}
					}
				}
			}
			40 = {
				desc = coronation.1140.a.tt_recover
				scope:activity = {
					add_activity_log_entry = {
						key = coronation_recovery_log
						tags = { good }
						score = 20
						character = scope:coronation_target
						scope:coronation_target = {
							add_prestige = medium_prestige_gain
							add_character_flag = ruler_recovered
						}
					}
				}
				hidden_effect = {
					scope:activity = {
						every_attending_character = {
							send_interface_toast = {
								title = coronation_recovery_title
								left_icon = scope:coronation_target
								custom_tooltip = coronation_recovery_log
								show_as_tooltip = {
									add_prestige = medium_prestige_gain
								}
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

# Saboteur selects a claimant to support
coronation.1141 = {
	type = activity_event
	title = coronation.1141.t
	desc = coronation.1141.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}

	trigger = {
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
		has_character_flag = designated_saboteur
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = saboteur
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					age >= 16
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						is_primary_heir_of = scope:activity.special_guest:coronation_target
					}
					AND = {
						has_claim_on = scope:activity.special_guest:coronation_target.primary_title
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = coronation_claimant
		}
	}

	option = {
		name = coronation.1141.a
		var:si_selected_character = {
			save_scope_as = coronation_claimant
			remove_variable = si_selecting_character
		}
		custom_tooltip = coronation.1141.a.tt
		clear_variable_list = possible_characters
		trigger_event = coronation.1142
		stress_impact = {
			ambitious = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			content = massive_stress_impact_gain
			just = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 1000
				has_trait = ambitious
			}
			modifier = {
				add = 100
				has_trait = disloyal
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
		}
	}

	option = {
		name = coronation.1141.b
		custom_tooltip = coronation.1134.e.tt
		stress_impact = {
			ambitious = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
			patient = medium_stress_impact_loss
		}
		clear_variable_list = possible_characters
		ai_chance = {
			base = 50
		}
	}

	after = {
		scope:coronation_claimant = {
			if = {
				limit = {
					has_variable = si_selected_character
				}
				remove_variable = si_selected_character
			}
		}
		clear_variable_list = possible_characters
	}
}

coronation.1142 = {
	type = activity_event
	title = coronation.1142.t
	desc = coronation.1142.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:saboteur
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:coronation_claimant
		animation = personality_rational
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
	}

	# Option A (Lords Paramount)
	option = {
		name = coronation.1142.a
		trigger = {
			exists = scope:coronation_claimant
			highest_held_title_tier = tier_kingdom
			is_landed = yes
		}
		flavor = coronation.1141.lp
		custom_tooltip = coronation.1141.a.tt
		# Claimant will respond
		scope:coronation_claimant = {
			trigger_event = coronation.1143
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option A (Other Lords)
	option = {
		name = coronation.1142.a
		trigger = {
			exists = scope:coronation_claimant
			highest_held_title_tier < tier_kingdom
			is_landed = yes
		}
		flavor = coronation.1141.flavor
		custom_tooltip = coronation.1141.a.tt
		# Claimant will respond
		scope:coronation_claimant = {
			trigger_event = coronation.1143
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option A (None Landed - You just want to see the world burn)
	option = {
		name = coronation.1142.a
		trigger = {
			exists = scope:coronation_claimant
			is_landed = no
		}
		custom_tooltip = coronation.1141.a.tt
		# Claimant will respond
		scope:coronation_claimant = {
			trigger_event = coronation.1143
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.1142.b
		flavor = coronation.1142.b.tt
		reverse_add_opinion = {
			target = scope:coronation_claimant
			modifier = annoyed_opinion
			opinion = -20
		}
		# AI doesn't back out
		ai_chance = {
			base = 0
		}
	}
}

#Claimant responds
coronation.1143 = {
	type = activity_event
	title = coronation.1143.t
	desc = coronation.1143.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_claimant
		animation = personality_rational
	}

	right_portrait = {
		character = scope:saboteur
		animation = throne_room_conversation_2
		camera = camera_event_very_right
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
	}

	# Option A: Agree
	option = {
		name = coronation.1143.a
		flavor = coronation.1143.a.tt
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.1143.a_success
				left_icon = scope:coronation_claimant
				right_icon = scope:saboteur
				scope:saboteur = {
					progress_towards_friend_effect = {
						REASON = friend_promised_to_support_claim
						CHARACTER = scope:coronation_claimant
						OPINION = default_friend_opinion
					}
				}
			}
			add_character_flag = coronation_claimant
			trigger_event = coronation.2000
		}
		hidden_effect = {
			scope:saboteur = {
				send_interface_toast = {
					title = coronation.1143.a_success
					left_icon = scope:coronation_claimant
					right_icon = scope:saboteur
					show_as_tooltip = {
						scope:saboteur = {
							progress_towards_friend_effect = {
								REASON = friend_promised_to_support_claim
								CHARACTER = scope:coronation_claimant
								OPINION = default_friend_opinion
							}
						}
					}
				}
				trigger_event = {
					id = coronation.2011 #Triggers the event to talk to AI vassals and send ravens to  player vassals
					days = 1
				}
			}
		}
		ai_chance = {
			base = 0
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:coronation_claimant
				opinion_target = scope:saboteur
				multiplier = 1.5
			}
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:coronation_claimant
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
			modifier = {
				add = 300
				has_trait = trusting
			}
			#Allies
			modifier = {
				add = {
					scope:coronation_claimant = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_claimant = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
			ai_value_modifier = {
				ai_rationality = {
					if = {
						limit = {
							NOT = { scope:coronation_claimant = { ai_rationality = 0 } }
							scope:coronation_target = {
								any_ally = {
									highest_held_title_tier = tier_kingdom
									count >= 1
								}
							}
						}
						value = 1.5
					}
				}
			}
			#Friends
			modifier = { # Friends
				add = 250
				scope:coronation_claimant = {
					has_relation_friend = scope:saboteur
					NOT = { has_relation_best_friend = scope:saboteur }
				}
			}
			modifier = { # Best Friend
				add = 500
				scope:coronation_claimant = {
					has_relation_best_friend = scope:saboteur
				}
			}
			# Rivalry
			modifier = { # Say no to rivals
				add = -100
				scope:coronation_claimant = {
					has_relation_rival = scope:saboteur
					NOT = { has_relation_nemesis = scope:saboteur }
				}
			}
			modifier = { # Say no to nemesis
				add = -300
				scope:coronation_claimant = {
					has_relation_nemesis = scope:saboteur
				}
			}
			modifier = { # Ruler is their rival
				add = 100
				scope:coronation_claimant = {
					has_relation_rival = scope:coronation_target
					NOT = { has_relation_nemesis = scope:coronation_target }
				}
			}
			modifier = { # Ruler is nemesis
				add = 300
				scope:coronation_claimant = {
					has_relation_nemesis = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are their rivals
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_rival = scope:coronation_claimant
								NOT = { has_relation_nemesis = scope:coronation_claimant }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are their nemesis
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:coronation_claimant
							}
							add = 300
						}
					}
				}
			}
			modifier = {
				scope:coronation_claimant.culture = { has_cultural_parameter = facilitate_alliance_acceptance }
				add = 50 #should be in a file 00_traditions_values
			}
		}
	}

	# Option B: Refuse
	option = {
		name = coronation.1143.b
		custom_tooltip = coronation.1143.b.tt
		scope:saboteur = {
			trigger_event = coronation.1144
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:coronation_claimant
				opinion_target = scope:coronation_target
				multiplier = 1.5
			}
			modifier = {
				add = 300
				has_trait = paranoid
			}
			modifier = {
				add = 1000
				is_allied_to = scope:coronation_target
			}
			# Friends
			modifier = {
				add = -100
				scope:saboteur = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = -300
				scope:saboteur = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is friend
				add = 100
				scope:coronation_claimant = {
					has_relation_friend = scope:coronation_target
					NOT = { has_relation_best_friend = scope:coronation_target }
				}
			}
			modifier = { # Ruler is Best Friend
				add = 300
				scope:coronation_claimant = {
					has_relation_best_friend = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your friends
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_friend = scope:coronation_claimant
								NOT = { has_relation_best_friend = scope:coronation_claimant }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your Best Friend - you don't want to fight them
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:coronation_claimant
							}
							add = 300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}

	#Option C: Renounce Claims
	option = {
		name = coronation.1143.c
		stress_impact = {
			ambitious = major_stress_impact_gain
			arrogant = major_stress_impact_gain
			content = massive_stress_impact_loss
			just = medium_stress_impact_loss
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOT = {
						root = scope:coronation_claimant
					}
				}
				send_interface_toast = {
					title = coronation.2000.c.result
					left_icon = scope:coronation_claimant
					right_icon = scope:coronation_target
					show_as_tooltip = {
						scope:coronation_claimant = {
							every_claim = {
								explicit = yes
								limit = {
									save_temporary_scope_as = temp_claim
									OR = {
										holder = scope:coronation_target
										AND = {
											exists = holder
											NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
											holder = { target_is_liege_or_above = scope:coronation_target }
										}
										scope:coronation_target = {
											any_held_title = {
												is_de_jure_liege_or_above_target = scope:temp_claim
											}
										}
									}
								}
								scope:coronation_claimant = { remove_claim = prev }
							}
							reverse_add_opinion = {
								target = scope:coronation_target
								modifier = grateful_opinion
								opinion = 50
							}
						}
					}
				}
			}
		}
		send_interface_toast = {
			title = coronation.2000.c.result
			left_icon = scope:coronation_claimant
			right_icon = scope:coronation_target
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_claimant_renounce_log
					tags = { good }
					score = 20
					character = scope:coronation_claimant
					target = scope:coronation_target

					# Effect
					scope:coronation_claimant = {
						every_claim = {
							explicit = yes
							limit = {
								save_temporary_scope_as = temp_claim
								OR = {
									holder = scope:coronation_target
									AND = {
										exists = holder
										NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
										holder = { target_is_liege_or_above = scope:coronation_target }
									}
									scope:coronation_target = {
										any_held_title = {
											is_de_jure_liege_or_above_target = scope:temp_claim
										}
									}
								}
							}
							scope:coronation_claimant = { remove_claim = prev }
						}
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = grateful_opinion
							opinion = 50
						}
					}
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = -1000
				has_trait = ambitious
			}
			modifier = {
				add = 1000
				OR = {
					has_trait = loyal
					has_trait = content
				}
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
		}
	}
}

coronation.1144 = {
	type = activity_event
	title = coronation.1144.t
	desc = coronation.1144.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:saboteur
		animation = anger
	}

	right_portrait = {
		character = scope:coronation_claimant
		animation = dismissal
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		reverse_add_opinion = {
			target = scope:coronation_claimant
			modifier = annoyed_opinion
			opinion = -20
		}
		custom_tooltip = coronation.1144.b_failure
	}

	# Option A (Damn them)
	option = {
		name = coronation.1144.a
		progress_towards_rival_effect = {
			CHARACTER = scope:coronation_claimant
			REASON = rival_ruined_plans
			OPINION = default_rival_opinion
		}
		ai_chance = {
			base = 50

			modifier = {
				add = 1000

				OR = {
					has_trait = vengeful
					has_trait = wrathful
				}
			}
		}
	}

	# Option B (Whatever)
	option = {
		name = coronation.1144.b
		ai_chance = {
			base = 0

			modifier = {
				add = 1000

				OR = {
					has_trait = forgiving
					has_trait = calm
				}
			}
		}
	}
}

##################################################
# Romantic Scouting
# by Claudia Baldassi
# coronation.1150
##################################################

# Seduction Intent: target scouting

coronation.1150 = {
	type = activity_event
	title = coronation.1150.t
	desc = {
		desc = coronation.1150.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:intent_target = {
						OR = {
							has_trait = shy
							has_trait = compassionate
						}
					}
				}
				desc = coronation.1150.desc_1
			}
			triggered_desc = {
				trigger = {
					scope:intent_target = {
						OR = {
							has_trait = gluttonous
							has_trait = drunkard
						}
					}
				}
				desc = coronation.1150.desc_2
			}
			triggered_desc = {
				trigger = {
					scope:intent_target = {
						OR = {
							has_trait = callous
							has_trait = cynical
						}
					}
				}
				desc = coronation.1150.desc_3
			}
			triggered_desc = {
				trigger = {
					scope:intent_target = {
						has_trait = zealous
					}
				}
				desc = coronation.1150.desc_4
			}
			desc = coronation.1150.desc_fallback
		}
		desc = coronation.1150.desc_conclusion
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = flirtation_left
	}
	right_portrait = {
		character = scope:intent_target
		animation = personality_content
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		has_activity_intent = woo_attendee_intent
		NOT = {
			this = scope:activity.special_guest:coronation_target
		}
		NOT = {
			intent_target = scope:activity.special_guest:coronation_target
		}
		intent_target = { is_ai = yes }
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		intent_target = {
			save_scope_as = intent_target
			add_character_flag = busy_in_coronation_event
		}
	}

	# Option A: approach with diplo
	option = {
		name = coronation.1150.a
		duel = {
			skill = diplomacy
			target = scope:intent_target
			# Success: you make a good impression
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = coronation.1150.a.success
				send_interface_toast = {
					title = coronation.1150.a.success.tt
					left_icon = root
					right_icon = scope:intent_target
					progress_towards_lover_effect = {
						REASON = lover_impressed_by_talk
						CHARACTER = scope:intent_target
						OPINION = 15
					}
					if = {
						limit = {
							has_lifestyle = diplomacy_lifestyle
						}
						add_diplomacy_lifestyle_xp = major_lifestyle_experience
					}
					stress_impact = {
						base = minor_stress_impact_loss
						ambitious = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						lustful = major_stress_impact_loss
					}
				}
				scope:activity = {
					add_activity_log_entry = {
						key = seduction_good_impression_log
						tags = { good }
						score = 50
						character = root
						target = scope:intent_target
					}
				}
			}
			# Failure: target is not impress
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1150.a.failure
				send_interface_toast = {
					title = coronation.1150.a.failure.tt
					left_icon = root
					right_icon = scope:intent_target
					scope:intent_target = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -15
						}
					}
					stress_impact = {
						arrogant = medium_stress_impact_gain
						shy = medium_stress_impact_gain
						lustful = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				diplomacy >= average_skill_level
				add = 50
			}
		}
	}

	# Option B: approach with intrigue
	option = {
		name = coronation.1150.b
		duel = {
			skill = intrigue
			target = scope:intent_target
			# Success: you make a good impression
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = coronation.1150.a.success
				send_interface_toast = {
					title = coronation.1150.a.success.tt
					left_icon = root
					right_icon = scope:intent_target
					progress_towards_lover_effect = {
						REASON = lover_impressed_by_talk
						CHARACTER = scope:intent_target
						OPINION = 15
					}
					if = {
						limit = {
							has_lifestyle = intrigue_lifestyle
						}
						add_intrigue_lifestyle_xp = major_lifestyle_experience
					}
					stress_impact = {
						base = minor_stress_impact_loss
						ambitious = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						lustful = major_stress_impact_loss
					}
				}
				scope:activity = {
					add_activity_log_entry = {
						key = seduction_good_impression_log
						tags = { good }
						score = 50
						character = root
						target = scope:intent_target
					}
				}
			}
			# Failure: target is not impress
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1150.a.failure
				send_interface_toast = {
					title = coronation.1150.a.failure.tt
					left_icon = root
					right_icon = scope:intent_target
					scope:intent_target = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -15
						}
					}
					stress_impact = {
						arrogant = medium_stress_impact_gain
						shy = medium_stress_impact_gain
						lustful = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				intrigue >= average_skill_level
				add = 50
			}
		}
	}

	# Option C: approach with learning
	option = {
		name = coronation.1150.c
		duel = {
			skill = learning
			target = scope:intent_target
			# Success: you make a good impression
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = coronation.1150.a.success
				send_interface_toast = {
					title = coronation.1150.a.success.tt
					left_icon = root
					right_icon = scope:intent_target
					progress_towards_lover_effect = {
						REASON = lover_impressed_by_talk
						CHARACTER = scope:intent_target
						OPINION = 15
					}
					if = {
						limit = {
							has_lifestyle = learning_lifestyle
						}
						add_learning_lifestyle_xp = major_lifestyle_experience
					}
					stress_impact = {
						base = minor_stress_impact_loss
						ambitious = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						lustful = major_stress_impact_loss
					}
				}
				scope:activity = {
					add_activity_log_entry = {
						key = seduction_good_impression_log
						tags = { good }
						score = 50
						character = root
						target = scope:intent_target
					}
				}
			}
			# Failure: target is not impress
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1150.a.failure
				send_interface_toast = {
					title = coronation.1150.a.failure.tt
					left_icon = root
					right_icon = scope:intent_target
					scope:intent_target = {
						add_opinion = {
							target = root
							modifier = annoyed_opinion
							opinion = -15
						}
					}
					stress_impact = {
						arrogant = medium_stress_impact_gain
						shy = medium_stress_impact_gain
						lustful = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				learning >= average_skill_level
				add = 50
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:intent_target = { remove_character_flag = busy_in_coronation_event }
	}
}

##################################################
# Gatecrashers
# by Claudia Baldassi
# coronation.1160
##################################################

# Some pesants are at the gate of the festivity - what do you do?

coronation.1160 = {
	type = activity_event
	title = coronation.1160.t
	desc = coronation.1160.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = schadenfreude
	}

	lower_right_portrait = scope:host

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		has_activity_intent = sabotage_coronation_intent
		NOT = {
			this = scope:activity.special_guest:coronation_target
		}
		NOT = {
			scope:activity = {
				has_variable = has_had_1160_event
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		scope:activity = {
			set_variable = has_had_1160_event
		}
	}

	# Option A: let the peasants in
	option = {
		name = coronation.1160.a
		flavor = coronation.1160.a.tt
		# for the follow-up event
		root = {
			save_scope_as = mischief_maker
		}
		scope:host = { trigger_event = coronation.1161 }
		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
			impatient = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			deceitful = major_stress_impact_loss
			arbitrary = major_stress_impact_loss
			callous = major_stress_impact_loss
			fickle = major_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = deceitful
				add = 50
			}
			modifier = {
				has_trait = arbitrary
				add = 50
			}
			modifier = {
				has_trait = callous
				add = 50
			}
			modifier = {
				has_trait = fickle
				add = 50
			}
		}
	}

	# Option B: smuggle food to the pesants
	option = {
		name = coronation.1160.b
		flavor = coronation.1160.b.tt
		stress_impact = {
			base = minor_stress_impact_loss
			gluttonous = medium_stress_impact_loss
			diligent = medium_stress_impact_loss
			generous = major_stress_impact_loss
			humble = major_stress_impact_loss
			gregarious = major_stress_impact_loss
			compassionate = massive_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = generous
				add = 50
			}
			modifier = {
				has_trait = humble
				add = 50
			}
			modifier = {
				has_trait = gregarious
				add = 50
			}
			modifier = {
				has_trait = compassionate
				add = 50
			}
		}
	}

	# Option C: this is below me
	option = {
		name = coronation.1160.c
		stress_impact = {
			greedy = minor_stress_impact_loss
			temperate = minor_stress_impact_loss
			lazy = minor_stress_impact_loss
			honest = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = lazy
				add = 50
			}
			modifier = {
				has_trait = honest
				add = 50
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
	}
}

# Follow-up for the host

coronation.1161 = {
	type = activity_event
	title = coronation.1160.t
	desc = coronation.1161.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = anger
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
	}

	# Option A: kick them out!
	option = {
		name = coronation.1161.a
		duel = {
			skill = martial
			value = average_skill_rating
			50 = {
				# Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = coronation.1161.success
				send_interface_toast = {
					title = coronation.1161.success.tt
					left_icon = root
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_peasant_invasion_managed_log
							tags = { good }
							score = 20
							character = root

							root = {
								add_character_modifier = {
									modifier = wedding_enforced_security_modifier
									years = 10
								}
							}
						}
					}

					stress_impact = {
						base = minor_stress_impact_loss
						wrathful = medium_stress_impact_loss
						arrogant = medium_stress_impact_loss
						callous = major_stress_impact_loss
						paranoid = massive_stress_impact_loss
					}
				}
				scope:mischief_maker = {
					send_interface_toast = {
						title = coronation.1161.success.tt2
						left_icon = root
					}
				}
			}
			50 = {
				# Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.1161.failure
				send_interface_toast = {
					title = coronation.1161.failure.tt
					left_icon = root
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_peasant_invasion_not_managed_log
							tags = { bad }
							score = 20
							character = root

							root = {
								add_character_modifier = {
									modifier = wedding_peasants_overrun_modifier
									years = 10
								}
							}
						}
					}
					stress_impact = {
						wrathful = medium_stress_impact_gain
						arrogant = medium_stress_impact_gain
						callous = medium_stress_impact_gain
						paranoid = major_stress_impact_gain
					}
				}
				scope:mischief_maker = {
					send_interface_toast = {
						title = coronation.1161.failure.tt2
						left_icon = root
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	# Option B: let them stay
	option = {
		name = coronation.1161.b
		scope:activity = {
			add_activity_log_entry = {
				key = wedding_peasant_invasion_stay_log
				tags = { bad }
				score = 20
				character = root

				root.location.county = {
					add_county_modifier = {
						modifier = wedding_peasants_connections_county_modifier
						years = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = {
				base = medium_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				generous = medium_stress_impact_loss
				humble = medium_stress_impact_loss
				gregarious = medium_stress_impact_loss
				compassionate = medium_stress_impact_loss
				paranoid = medium_stress_impact_gain
				greedy = medium_stress_impact_gain
			}
		}
		scope:mischief_maker = {
			send_interface_toast = {
				title = coronation.1161.b.tt
				left_icon = root
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = compassionate
				add = 50
			}
			modifier = {
				has_trait = gregarious
				add = 50
			}
			modifier = {
				has_trait = humble
				add = 50
			}
			modifier = {
				has_trait = generous
				add = 50
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
	}
}

##################################################
# Religious Complaints
# by Claudia Baldassi
# coronation.1190
##################################################

# Religious guest complains about lavishness, luxury, wastes, and unchaste mingling

coronation.1190 = {
	type = activity_event
	title = coronation.1190.t
	desc = coronation.1190.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:grumbler
		animation = personality_zealous
	}

	cooldown = { years = 1 }

	trigger = {
		OR = {
			root = scope:host
			root = scope:activity.special_guest:coronation_target
		}
		scope:activity = {
			OR = {
				has_activity_option = {
					category = coronation_option_pomp
					option = coronation_pomp_grandiose
				}
				has_activity_option = {
					category = coronation_option_pomp
					option = coronation_pomp_impressive
				}
			}
			any_attending_character = {
				NOR = {
					this = root
					this = scope:host
				}
				OR = {
					this = root.faith.religious_head
					has_trait = devoted
					has_trait = theologian
					has_trait = zealous
				}
				faith = {
					NOR = {
						trait_is_virtue = lustful
						trait_is_virtue = gluttonous
					}
				}
			}
			NOT = {
				has_variable = has_had_1190
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		scope:activity = {
			set_variable = has_had_1190
			random_attending_character = {
				limit = {
					NOR = {
						this = root
						this = scope:host
						this = scope:activity.special_guest:coronation_officiant
					}
					this = root.faith.religious_head
					faith = {
						NOR = {
							trait_is_virtue = lustful
							trait_is_virtue = gluttonous
						}
					}
				}
				alternative_limit = {
					NOR = {
						this = root
						this = scope:host
						this = scope:activity.special_guest:coronation_officiant
					}
					has_trait = devoted
					faith = {
						NOR = {
							trait_is_virtue = lustful
							trait_is_virtue = gluttonous
						}
					}
				}
				alternative_limit = {
					NOR = {
						this = root
						this = scope:host
						this = scope:activity.special_guest:coronation_officiant
					}
					has_trait = theologian
					faith = {
						NOR = {
							trait_is_virtue = lustful
							trait_is_virtue = gluttonous
						}
					}
				}
				alternative_limit = {
					NOR = {
						this = root
						this = scope:host
						this = scope:activity.special_guest:coronation_officiant
					}
					has_trait = zealous
					faith = {
						NOR = {
							trait_is_virtue = lustful
							trait_is_virtue = gluttonous
						}
					}
				}
				save_scope_as = grumbler
				add_character_flag = busy_in_coronation_event
			}
			add_activity_log_entry = {
				key = wedding_religious_complaints_log
				tags = { bad }
				score = 20
				character = scope:grumbler
			}
		}
	}

	# Option A: repent
	option = {
		name = coronation.1190.a
		scope:grumbler = {
			add_opinion = {
				target = root
				modifier = pious_opinion
				opinion = 20
			}
		}
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_trait = zealous
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_trait = zealous
						NOT = { this = scope:grumbler }
						NOT = { this = root }
					}
					custom = every_zealous_attending_character
					add_opinion = {
						target = root
						modifier = pious_opinion
						opinion = 5
					}
				}
			}
		}
		if = {
			limit = {
				has_lifestyle = learning_lifestyle
			}
			add_learning_lifestyle_xp = medium_lifestyle_experience
		}
		stress_impact = {
			zealous = medium_stress_impact_loss
			humble = minor_stress_impact_loss
			temperate = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
			cynical = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			gluttonous = medium_stress_impact_gain
			lustful = medium_stress_impact_gain
			drunkard = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1.5
			}
		}
	}

	# Option B: kick them out
	option = {
		name = coronation.1190.b
		trigger = {
			root = scope:host
		}
		scope:grumbler = {
			remove_from_activity = scope:activity
		}
		progress_towards_rival_effect = {
			CHARACTER = scope:grumbler
			REASON = rival_kicked_out_priest
			OPINION = default_rival_opinion
		}
		stress_impact = {
			zealous = major_stress_impact_gain
			cynical = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
			gluttonous = medium_stress_impact_loss
			lustful = medium_stress_impact_loss
			drunkard = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = gluttonous
				add = 25
			}
			modifier = {
				has_trait = lustful
				add = 50
			}
			modifier = {
				has_trait = cynical
				add = 50
			}
			modifier = {
				has_trait = drunkard
				add = 50
			}
		}
	}

	# Option C: ignore
	option = {
		name = coronation.1190.c
		scope:grumbler = {
			add_opinion = {
				target = root
				modifier = ignored_opinion
				opinion = -5
			}
		}
		stress_impact = {
			zealous = medium_stress_impact_gain
			cynical = minor_stress_impact_loss
			arrogant = minor_stress_impact_loss
			gluttonous = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
			drunkard = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
		}
	}

	# Option D: yes, and I will enjoy it too!
	option = {
		name = coronation.1190.d
		trigger = {
			OR = {
				has_activity_intent = reduce_stress_intent
				has_activity_intent = woo_attendee_intent
			}
		}
		custom_tooltip = available_because_intent_tt
		scope:grumbler = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -20
			}
		}
		if = {
			limit = {
				has_activity_intent = woo_attendee_intent
				intent_target = {
					NOR = {
						this = scope:grumbler
						has_trait = zealous
					}
				}
			}
			root = {
				progress_towards_lover_effect = {
					CHARACTER = root.intent_target
					REASON = lover_daring_move
					OPINION = default_lover_opinion
				}
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
		}
		ai_chance = {
			base = 200
		}
	}

	# Option E: yes, and you will ask for my forgiveness!
	option = {
		name = coronation.1190.e
		trigger = {
			OR = {
				has_activity_intent = promote_rule_intent
			}
		}
		custom_tooltip = available_because_intent_tt
		add_legitimacy = miniscule_legitimacy_gain
		scope:grumbler = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -20
			}
		}
		stress_impact = {
			just = medium_stress_impact_loss
		}
		ai_chance = {
			base = 200
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:grumbler = { remove_character_flag = busy_in_coronation_event }
	}
}

##################################################
# Political Talk
# by Claudia Baldassi
# coronation.1210
##################################################

# Political talk with a fellow ruler

coronation.1210 = {
	type = activity_event
	title = coronation.1210.t
	desc = {
		desc = coronation.1210.desc
		random_valid = {
			triggered_desc = {
				trigger = {
					scope:talk_to.gold < 0
				}
				desc = coronation.1210.desc_gold
			}
			triggered_desc = {
				trigger = {
					scope:talk_to = {
						OR = {
							has_trait = shy
							has_trait = craven
						}
					}
				}
				desc = coronation.1210.desc_fear
			}
			triggered_desc = {
				trigger = {
					scope:talk_to = {
						any_sub_realm_county = {
							any_county_province = {
								has_province_modifier = recently_looted_modifier
							}
						}
					}
				}
				desc = coronation.1210.desc_raids
			}
			triggered_desc = {
				trigger = {
					scope:talk_to = {
						OR = {
							any_relation = {
								type = rival
							}
							has_trait = paranoid
						}
					}
				}
				desc = coronation.1210.desc_rivals
			}
			triggered_desc = {
				trigger = {
					scope:talk_to = {
						age > 65
					}
				}
				desc = coronation.1210.desc_age
			}
			desc = coronation.1210.desc_bad_harvest
			desc = coronation.1210.desc_rain
			desc = coronation.1210.desc_enemies
		}
	}
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:talk_to
		animation = thinking
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		is_landed = yes
		has_activity_intent = diplomatic_intent
		intent_target = {
			is_landed = yes
			NOT = { is_vassal_of = root }
			is_ai = yes
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		intent_target = {
			save_scope_as = talk_to
			add_character_flag = busy_in_coronation_event
		}
	}

	# Option A: gain hook
	option = {
		name = coronation.1210.a
		trigger = {
			can_add_hook = {
				target = scope:talk_to
				type = threat_hook
			}
		}
		duel = {
			skill = intrigue
			target = scope:talk_to
			50 = {
				# Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					has_trait = schemer
					add = 10
				}
				modifier = {
					has_trait = torturer
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = lazy }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = craven }
					add = 20
				}
				desc = coronation.1210.a.success
				send_interface_toast = {
					title = coronation.1210.a.success
					left_icon = root
					right_icon = scope:talk_to
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_intimidation_log
							tags = { good }
							score = 20
							character = root
							target = scope:talk_to

							root = {
								add_hook = {
									target = scope:talk_to
									type = threat_hook
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
						deceitful = medium_stress_impact_loss
						sadistic = medium_stress_impact_loss
						ambitious = medium_stress_impact_loss
					}
				}
			}
			50 = {
				# Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				modifier = {
					scope:talk_to = { has_trait = torturer }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = brave }
					add = 20
				}
				desc = coronation.1210.a.failure
				send_interface_toast = {
					title = coronation.1210.a.failure
					left_icon = root
					right_icon = scope:talk_to
					reverse_add_opinion = {
						target = scope:talk_to
						modifier = threatened_opinion
						opinion = -20
					}
					stress_impact = {
						base = minor_stress_impact_gain
						deceitful = medium_stress_impact_gain
						sadistic = medium_stress_impact_gain
						ambitious = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	# Option B: gain alliance
	option = {
		name = coronation.1210.b
		duel = {
			skill = diplomacy
			target = scope:talk_to
			40 = {
				# Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					has_trait = diplomat
					add = 20
				}
				modifier = {
					has_trait = august
					add = 10
				}
				modifier = {
					scope:talk_to = { has_trait = lazy }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = trusting }
					add = 20
				}
				desc = coronation.1210.b.success
				send_interface_toast = {
					title = coronation.1210.b.success
					left_icon = root
					right_icon = scope:talk_to
					complete_activity_intent = yes
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_alliance_log
							tags = { good }
							score = 20
							character = root
							target = scope:talk_to

							root = {
								create_alliance = {
									target = scope:talk_to
									allied_through_owner = root
									allied_through_target = scope:talk_to
								}
							}
							scope:talk_to = {
								add_opinion = {
									target = root
									modifier = event_negotiated_alliance_opinion
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
						ambitious = medium_stress_impact_loss
						gregarious = medium_stress_impact_loss
					}
				}
			}
			60 = {
				# Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				modifier = {
					scope:talk_to = { has_trait = diplomat }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = august }
					add = 10
				}
				modifier = {
					scope:talk_to = { has_trait = paranoid }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = shy }
					add = 20
				}
				desc = coronation.1210.b.failure
				send_interface_toast = {
					title = coronation.1210.b.failure
					left_icon = root
					right_icon = scope:talk_to
					scope:talk_to = {
						add_opinion = {
							target = root
							modifier = suspicion_opinion
							opinion = -10
						}
					}
					stress_impact = {
						base = minor_stress_impact_gain
						ambitious = medium_stress_impact_gain
						gregarious = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	# Option C: subjugate
	option = {
		name = coronation.1210.c
		trigger = {
			scope:talk_to = { activity_wedding_diplomatic_intent_impressible_target = yes }
		}
		duel = {
			skills = { diplomacy intrigue }
			target = scope:talk_to
			30 = {
				# Success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					has_trait = diplomat
					add = 20
				}
				modifier = {
					has_trait = august
					add = 10
				}
				modifier = {
					scope:talk_to = { has_trait = trusting }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = craven }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = shy }
					add = 20
				}
				desc = coronation.1210.c.success
				send_interface_toast = {
					title = coronation.1210.c.success
					left_icon = root
					right_icon = scope:talk_to
					complete_activity_intent = yes
					scope:activity = {
						add_activity_log_entry = {
							key = wedding_fealty_log
							tags = { good }
							score = 20
							character = root
							target = scope:talk_to

							root = {
								create_title_and_vassal_change = {
									type = swear_fealty
									save_scope_as = title_change
									add_claim_on_loss = no
								}
								scope:talk_to = {
									change_liege = {
										liege = root
										change = scope:title_change
									}
								}
								resolve_title_and_vassal_change = scope:title_change
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
						ambitious = major_stress_impact_loss
					}
				}
			}
			70 = {
				# Failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				modifier = {
					scope:talk_to = { has_trait = diplomat }
					add = 20
				}
				modifier = {
					scope:talk_to = { has_trait = august }
					add = 10
				}
				modifier = {
					scope:talk_to = { has_trait = paranoid }
					add = 20
				}
				desc = coronation.1210.c.failure
				send_interface_toast = {
					title = coronation.1210.c.failure
					left_icon = root
					right_icon = scope:talk_to
					scope:talk_to = {
						add_opinion = {
							target = root
							modifier = suspicion_opinion
							opinion = -20
						}
					}
					stress_impact = {
						base = minor_stress_impact_gain
						ambitious = medium_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
		scope:talk_to = { remove_character_flag = busy_in_coronation_event }
	}
}


##################################################
## Claimant Disrupts Coronation
## coronation.2000-2020
## By BWWalker01
##################################################

# Claimant decides whom to approach first
coronation.2000 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2000.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
		scope:activity = {
			any_attending_character = {
				NOR = {
					is_allied_to = scope:activity.special_guest:coronation_target
					is_allied_to = root
					has_variable = mw_is_loyal_to
				}
				OR = {
					highest_held_title_tier = tier_kingdom
					is_powerful_vassal_of = scope:activity.special_guest:coronation_target
				}
				count >= 1
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.activity_location = {
			barony = {
				save_scope_as = barony
			}
			county = {
				save_scope_as = county
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						this = scope:saboteur
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						this = scope:saboteur
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
						is_landed = yes
					}
					NOT = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = potential_supporter
		}
	}

	option = {
		name = coronation.2000.a
		trigger = {
			exists = scope:potential_supporter
		}
		stress_impact = {
			ambitious = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			content = massive_stress_impact_gain
			just = medium_stress_impact_gain
		}
		var:si_selected_character = {
			save_scope_as = potential_supporter
			remove_variable = si_selecting_character
		}
		custom_tooltip = coronation.2000.a.tt
		clear_variable_list = possible_characters
		trigger_event = coronation.2001

		ai_chance = {
			base = 200
			modifier = {
				add = 1000
				has_trait = ambitious
			}
			modifier = {
				add = 100
				has_trait = disloyal
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
		}
	}

	option = {
		name = coronation.2000.b
		custom_tooltip = coronation.2000.b.tt
		stress_impact = {
			ambitious = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
			patient = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = coronation.2000.c
		stress_impact = {
			ambitious = major_stress_impact_gain
			arrogant = major_stress_impact_gain
			content = massive_stress_impact_loss
			just = medium_stress_impact_loss
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOT = {
						root = scope:coronation_claimant
					}
				}
				send_interface_toast = {
					title = coronation.2000.c.result
					left_icon = scope:coronation_claimant
					right_icon = scope:coronation_target
					show_as_tooltip = {
						scope:coronation_claimant = {
							every_claim = {
								explicit = yes
								limit = {
									save_temporary_scope_as = temp_claim
									OR = {
										holder = scope:coronation_target
										AND = {
											exists = holder
											NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
											holder = { target_is_liege_or_above = scope:coronation_target }
										}
										scope:coronation_target = {
											any_held_title = {
												is_de_jure_liege_or_above_target = scope:temp_claim
											}
										}
									}
								}
								scope:coronation_claimant = { remove_claim = prev }
							}
							reverse_add_opinion = {
								target = scope:coronation_target
								modifier = grateful_opinion
								opinion = 50
							}
						}
					}
				}
			}
		}
		send_interface_toast = {
			title = coronation.2000.c.result
			left_icon = scope:coronation_claimant
			right_icon = scope:coronation_target
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_claimant_renounce_log
					tags = { good }
					score = 20
					character = scope:coronation_claimant
					target = scope:coronation_target

					# Effect
					scope:coronation_claimant = {
						every_claim = {
							explicit = yes
							limit = {
								save_temporary_scope_as = temp_claim
								OR = {
									holder = scope:coronation_target
									AND = {
										exists = holder
										NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
										holder = { target_is_liege_or_above = scope:coronation_target }
									}
									scope:coronation_target = {
										any_held_title = {
											is_de_jure_liege_or_above_target = scope:temp_claim
										}
									}
								}
							}
							scope:coronation_claimant = { remove_claim = prev }
						}
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = grateful_opinion
							opinion = 50
						}
					}
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = -1000
				has_trait = ambitious
			}
			modifier = {
				add = 1000
				OR = {
					has_trait = loyal
					has_trait = content
				}
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
		}
	}

	after = {
		scope:potential_supporter = {
			if = {
				limit = {
					has_variable = si_selected_character
				}
				remove_variable = si_selected_character
			}
		}
		clear_variable_list = possible_characters
	}
}

# Claimant approaches first person
coronation.2001 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2001.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
	}

	# Option A
	option = {
		name = coronation.2001.a
		trigger = {
			NOT = {
				scope:potential_supporter = {
					is_allied_to = scope:coronation_target
				}
			}
		}
		custom_tooltip = coronation.2001.a.tt
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2002
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option A: Ally
	option = {
		name = coronation.2001.a
		flavor = coronation.2001.a.tt_ally
		custom_tooltip = coronation.2001.a.tt
		trigger = {
			scope:potential_supporter = {
				is_allied_to = scope:coronation_target
			}
		}
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2002
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}
}

#Player responds
coronation.2002 = {
	type = activity_event
	title = coronation.2002.t
	desc = coronation.2002.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_claimant
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		remove_from_list = possible_characters
	}

	# Option A: Agree
	option = {
		name = coronation.2002.a
		custom_tooltip = {
			text = coronation.2002.a.tt
			set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
		}
		custom_tooltip = coronation.2002.a.tt_2
		custom_tooltip = coronation.2002.a.tt_3
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.a.tt
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_friend_effect = {
						REASON = friend_promised_to_support_claim
						CHARACTER = scope:coronation_claimant
						OPINION = default_friend_opinion
					}
				}
			}
			trigger_event = coronation.2003
		}
		trigger_event = coronation.2011 #Triggers the event to talk to AI vassals and send ravens to  player vassals
		ai_chance = {
			base = 0
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = 1.5
			}
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_vassal = {
							limit = {
								exists = var:mw_is_loyal_to
								var:mw_is_loyal_to = scope:coronation_target
								highest_held_title_tier = tier_kingdom
							}
							add = 100
						}
					}
				}
			}
			#Allies
			modifier = {
				add = {
					scope:coronation_claimant = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_claimant = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
			ai_value_modifier = {
				ai_rationality = {
					if = {
						limit = {
							NOT = { scope:potential_supporter = { ai_rationality = 0 } }
							scope:coronation_claimant = {
								any_ally = {
									highest_held_title_tier = tier_kingdom
									count >= 1
								}
							}
						}
						value = 1.5
					}
				}
			}
			#Friends
			modifier = { # Friends
				add = 250
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 500
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			# Rivalry
			modifier = { # Say no to rivals
				add = -100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_claimant
					NOT = { has_relation_nemesis = scope:coronation_claimant }
				}
			}
			modifier = { # Say no to nemesis
				add = -300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is rival
				add = 100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_target
					NOT = { has_relation_nemesis = scope:coronation_target }
				}
			}
			modifier = { # Ruler is nemesis
				add = 300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your rivals
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your nemesis
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your rival
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your nemesis
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				scope:coronation_claimant.culture = { has_cultural_parameter = facilitate_alliance_acceptance }
				add = 50 #should be in a file 00_traditions_values
			}
			modifier = {
				scope:coronation_claimant = {
					any_claim = {
						holder = scope:potential_supporter
					}
				}
				add = 25
			}
		}
	}

	# Option B: Refuse, keep it to yourself
	option = {
		name = coronation.2002.b
		custom_tooltip = coronation.2002.b.tt
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.b_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
			}
			trigger_event = coronation.2003
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.0
			}
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = -1.75
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}

	# Option C: Inform the King/Queen
	option = {
		name = coronation.2002.c
		custom_tooltip = coronation.2002.c.tt
		#scope:coronation_target = { trigger_event = coronation.2014 }
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.c_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_rival_effect = {
						CHARACTER = scope:coronation_claimant
						REASON = rival_betrayed_confidence
						OPINION = default_rival_opinion
					}
				}
			}
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.5
			}
			modifier = {
				add = 1000
				is_allied_to = scope:coronation_target
			}
			# Friends
			modifier = { # Friends
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is friend
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_target
					NOT = { has_relation_best_friend = scope:coronation_target }
				}
			}
			modifier = { # Ruler is Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your friends
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your Best Friend
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your best_friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}
}

# Picking again (Second Person)
coronation.2003 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2003.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
		scope:activity = {
			any_attending_character = {
				NOR = {
					is_allied_to = scope:activity.special_guest:coronation_target
					is_allied_to = root
					has_variable = mw_is_loyal_to
				}
				OR = {
					highest_held_title_tier = tier_kingdom
					is_powerful_vassal_of = scope:activity.special_guest:coronation_target
				}
				count >= 1
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.activity_location = {
			barony = {
				save_scope_as = barony
			}
			county = {
				save_scope_as = county
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						is_allied_to = scope:coronation_target
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						is_allied_to = scope:coronation_target
						is_allied_to = scope:coronation_claimant
						is_allied_to = scope:coronation_target
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
						is_landed = yes
					}
					NOT = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = potential_supporter
		}
	}

	option = {
		name = coronation.2000.a
		trigger = {
			exists = scope:potential_supporter
		}
		stress_impact = {
			ambitious = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			content = massive_stress_impact_gain
			just = medium_stress_impact_gain
		}
		var:si_selected_character = {
			save_scope_as = potential_supporter
			remove_variable = si_selecting_character
		}
		custom_tooltip = coronation.2000.a.tt
		clear_variable_list = possible_characters
		trigger_event = coronation.2004

		ai_chance = {
			base = 200
			modifier = {
				add = 1000
				has_trait = ambitious
			}
			modifier = {
				add = 100
				has_trait = disloyal
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
		}
	}

	option = {
		name = coronation.2000.b
		custom_tooltip = coronation.2000.b.tt
		stress_impact = {
			ambitious = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
			patient = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = coronation.2000.c
		stress_impact = {
			ambitious = major_stress_impact_gain
			arrogant = major_stress_impact_gain
			content = massive_stress_impact_loss
			just = medium_stress_impact_loss
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOT = {
						root = scope:coronation_claimant
					}
				}
				send_interface_toast = {
					title = coronation.2000.c.result
					left_icon = scope:coronation_claimant
					right_icon = scope:coronation_target
					show_as_tooltip = {
						scope:coronation_claimant = {
							every_claim = {
								explicit = yes
								limit = {
									save_temporary_scope_as = temp_claim
									OR = {
										holder = scope:coronation_target
										AND = {
											exists = holder
											NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
											holder = { target_is_liege_or_above = scope:coronation_target }
										}
										scope:coronation_target = {
											any_held_title = {
												is_de_jure_liege_or_above_target = scope:temp_claim
											}
										}
									}
								}
								scope:coronation_claimant = { remove_claim = prev }
							}
							reverse_add_opinion = {
								target = scope:coronation_target
								modifier = grateful_opinion
								opinion = 50
							}
						}
					}
				}
			}
		}
		send_interface_toast = {
			title = coronation.2000.c.result
			left_icon = scope:coronation_claimant
			right_icon = scope:coronation_target
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_claimant_renounce_log
					tags = { good }
					score = 20
					character = scope:coronation_claimant
					target = scope:coronation_target

					# Effect
					scope:coronation_claimant = {
						every_claim = {
							explicit = yes
							limit = {
								save_temporary_scope_as = temp_claim
								OR = {
									holder = scope:coronation_target
									AND = {
										exists = holder
										NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
										holder = { target_is_liege_or_above = scope:coronation_target }
									}
									scope:coronation_target = {
										any_held_title = {
											is_de_jure_liege_or_above_target = scope:temp_claim
										}
									}
								}
							}
							scope:coronation_claimant = { remove_claim = prev }
						}
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = grateful_opinion
							opinion = 50
						}
					}
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = -1000
				has_trait = ambitious
			}
			modifier = {
				add = 1000
				OR = {
					has_trait = loyal
					has_trait = content
				}
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
		}
	}

	after = {
		scope:potential_supporter = {
			if = {
				limit = {
					has_variable = si_selected_character
				}
				remove_variable = si_selected_character
			}
		}
		clear_variable_list = possible_characters
	}
}

# Claimant approaches second person
coronation.2004 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2001.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
	}

	# Option A
	option = {
		name = coronation.2001.a
		trigger = {
			NOT = {
				scope:potential_supporter = {
					is_allied_to = scope:coronation_target
				}
			}
		}
		custom_tooltip = coronation.2001.a.tt
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2005
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option A: Ally
	option = {
		name = coronation.2001.a
		flavor = coronation.2001.a.tt_ally
		custom_tooltip = coronation.2001.a.tt
		trigger = {
			scope:potential_supporter = {
				is_allied_to = scope:coronation_target
			}
		}
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2005
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}
}

#Person responds
coronation.2005 = {
	type = activity_event
	title = coronation.2002.t
	desc = coronation.2002.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_claimant
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		remove_from_list = possible_characters
	}

	# Option A: Agree
	option = {
		name = coronation.2002.a
		custom_tooltip = {
			text = coronation.2002.a.tt
			set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
		}
		custom_tooltip = coronation.2002.a.tt_2
		custom_tooltip = coronation.2002.a.tt_3
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.a.tt
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_friend_effect = {
						REASON = friend_promised_to_support_claim
						CHARACTER = scope:coronation_claimant
						OPINION = default_friend_opinion
					}
				}
			}
			trigger_event = coronation.2006
		}
		trigger_event = coronation.2011 #Triggers the event to talk to AI vassals and send ravens to  player vassals
		ai_chance = {
			base = 0
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = 1.5
			}
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
			#Allies
			modifier = {
				add = {
					scope:coronation_claimant = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_claimant = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
			ai_value_modifier = {
				ai_rationality = {
					if = {
						limit = {
							NOT = { scope:potential_supporter = { ai_rationality = 0 } }
							scope:coronation_claimant = {
								any_ally = {
									highest_held_title_tier = tier_kingdom
									count >= 1
								}
							}
						}
						value = 1.5
					}
				}
			}
			#Friends
			modifier = { # Friends
				add = 250
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 500
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			# Rivalry
			modifier = { # Say no to rivals
				add = -100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_claimant
					NOT = { has_relation_nemesis = scope:coronation_claimant }
				}
			}
			modifier = { # Say no to nemesis
				add = -300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is rival
				add = 100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_target
					NOT = { has_relation_nemesis = scope:coronation_target }
				}
			}
			modifier = { # Ruler is nemesis
				add = 300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your rivals
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your nemesis
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your rival
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your nemesis
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_vassal = {
							limit = {
								exists = var:mw_is_loyal_to
								var:mw_is_loyal_to = scope:coronation_target
								highest_held_title_tier = tier_kingdom
							}
							add = 100
						}
					}
				}
			}
			modifier = {
				scope:coronation_claimant.culture = { has_cultural_parameter = facilitate_alliance_acceptance }
				add = 50 #should be in a file 00_traditions_values
			}
			modifier = {
				scope:coronation_claimant = {
					any_claim = {
						holder = scope:potential_supporter
					}
				}
				add = 25
			}
		}
	}

	# Option B: Refuse, keep it to yourself
	option = {
		name = coronation.2002.b
		custom_tooltip = coronation.2002.b.tt
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.b_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
			}
			trigger_event = coronation.2006
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.0
			}
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = -1.75
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}

	# Option C: Inform the King/Queen
	option = {
		name = coronation.2002.c
		custom_tooltip = coronation.2002.c.tt
		#scope:coronation_target = { trigger_event = coronation.2014 }
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.c_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_rival_effect = {
						CHARACTER = scope:coronation_claimant
						REASON = rival_betrayed_confidence
						OPINION = default_rival_opinion
					}
				}
			}
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.5
			}
			modifier = {
				add = 1000
				is_allied_to = scope:coronation_target
			}
			# Friends
			modifier = { # Friends
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is friend
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_target
					NOT = { has_relation_best_friend = scope:coronation_target }
				}
			}
			modifier = { # Ruler is Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your friends
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your Best Friend
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your best_friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}
}

# Picking again (Final Person)
coronation.2006 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2003.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_short"
		container = "custom_widgets_container"
	}

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
		scope:activity = {
			any_attending_character = {
				NOR = {
					is_allied_to = scope:activity.special_guest:coronation_target
					is_allied_to = root
					has_variable = mw_is_loyal_to
				}
				OR = {
					highest_held_title_tier = tier_kingdom
					is_powerful_vassal_of = scope:activity.special_guest:coronation_target
				}
				count >= 1
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.activity_location = {
			barony = {
				save_scope_as = barony
			}
			county = {
				save_scope_as = county
			}
		}
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:activity.special_guest:coronation_target
						this = scope:activity.special_guest:coronation_officiant
						this = root
						has_character_flag = officiant
						is_allied_to = scope:activity.special_guest:coronation_target
						has_variable = mw_is_loyal_to
					}
					AND = {
						is_vassal_of = scope:activity.special_guest:coronation_target
						highest_held_title_tier = tier_kingdom
						is_landed = yes
					}
					NOT = {
						is_powerful_vassal_of = scope:activity.special_guest:coronation_target
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
		}
		ordered_in_list = {
			variable = possible_characters
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = potential_supporter
		}
	}

	option = {
		name = coronation.2000.a
		trigger = {
			exists = scope:potential_supporter
		}
		stress_impact = {
			ambitious = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			content = massive_stress_impact_gain
			just = medium_stress_impact_gain
		}
		var:si_selected_character = {
			save_scope_as = potential_supporter
			remove_variable = si_selecting_character
		}
		custom_tooltip = coronation.2000.a.tt
		clear_variable_list = possible_characters
		trigger_event = coronation.2007

		ai_chance = {
			base = 200
			modifier = {
				add = 1000
				has_trait = ambitious
			}
			modifier = {
				add = 100
				has_trait = disloyal
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
		}
	}

	option = {
		name = coronation.2000.b
		custom_tooltip = coronation.2000.b.tt
		stress_impact = {
			ambitious = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
			patient = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = coronation.2000.c
		stress_impact = {
			ambitious = major_stress_impact_gain
			arrogant = major_stress_impact_gain
			content = massive_stress_impact_loss
			just = medium_stress_impact_loss
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOT = {
						root = scope:coronation_claimant
					}
				}
				send_interface_toast = {
					title = coronation.2000.c.result
					left_icon = scope:coronation_claimant
					right_icon = scope:coronation_target
					show_as_tooltip = {
						scope:coronation_claimant = {
							every_claim = {
								explicit = yes
								limit = {
									save_temporary_scope_as = temp_claim
									OR = {
										holder = scope:coronation_target
										AND = {
											exists = holder
											NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
											holder = { target_is_liege_or_above = scope:coronation_target }
										}
										scope:coronation_target = {
											any_held_title = {
												is_de_jure_liege_or_above_target = scope:temp_claim
											}
										}
									}
								}
								scope:coronation_claimant = { remove_claim = prev }
							}
							reverse_add_opinion = {
								target = scope:coronation_target
								modifier = grateful_opinion
								opinion = 50
							}
						}
					}
				}
			}
		}
		send_interface_toast = {
			title = coronation.2000.c.result
			left_icon = scope:coronation_claimant
			right_icon = scope:coronation_target
			scope:activity = {
				add_activity_log_entry = {
					key = coronation_claimant_renounce_log
					tags = { good }
					score = 20
					character = scope:coronation_claimant
					target = scope:coronation_target

					# Effect
					scope:coronation_claimant = {
						every_claim = {
							explicit = yes
							limit = {
								save_temporary_scope_as = temp_claim
								OR = {
									holder = scope:coronation_target
									AND = {
										exists = holder
										NOT = { prev = { target_is_liege_or_above = scope:coronation_target } }
										holder = { target_is_liege_or_above = scope:coronation_target }
									}
									scope:coronation_target = {
										any_held_title = {
											is_de_jure_liege_or_above_target = scope:temp_claim
										}
									}
								}
							}
							scope:coronation_claimant = { remove_claim = prev }
						}
						reverse_add_opinion = {
							target = scope:coronation_target
							modifier = grateful_opinion
							opinion = 50
						}
					}
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = -1000
				has_trait = ambitious
			}
			modifier = {
				add = 1000
				OR = {
					has_trait = loyal
					has_trait = content
				}
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:coronation_target
				multiplier = 1.25
			}
		}
	}

	after = {
		scope:potential_supporter = {
			if = {
				limit = {
					has_variable = si_selected_character
				}
				remove_variable = si_selected_character
			}
		}
		clear_variable_list = possible_characters
	}
}

# Claimant approaches second person
coronation.2007 = {
	type = activity_event
	title = coronation.2000.t
	desc = coronation.2001.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	trigger = {
		has_claim_on = scope:activity.special_guest:coronation_target.primary_title
		NOR = {
			scope:activity.special_guest:coronation_target = {
				has_hook = root
			}
			is_child_of = scope:activity.special_guest:coronation_target
		}
		has_character_flag = coronation_claimant
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = coronation_claimant
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
	}

	# Option A
	option = {
		name = coronation.2001.a
		trigger = {
			NOT = {
				scope:potential_supporter = {
					is_allied_to = scope:coronation_target
				}
			}
		}
		custom_tooltip = coronation.2001.a.tt
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2008
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option A: Ally
	option = {
		name = coronation.2001.a
		flavor = coronation.2001.a.tt_ally
		custom_tooltip = coronation.2001.a.tt
		trigger = {
			scope:potential_supporter = {
				is_allied_to = scope:coronation_target
			}
		}
		# Response will respond
		scope:potential_supporter = {
			trigger_event = coronation.2008
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}
}

#Person responds
coronation.2008 = {
	type = activity_event
	title = coronation.2002.t
	desc = coronation.2002.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_claimant
		animation = throne_room_conversation_1
	}

	right_portrait = {
		character = scope:potential_supporter
		animation = personality_rational
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		remove_from_list = possible_characters
	}

	# Option A: Agree
	option = {
		name = coronation.2002.a
		custom_tooltip = {
			text = coronation.2002.a.tt
			set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
		}
		custom_tooltip = coronation.2002.a.tt_2
		custom_tooltip = coronation.2002.a.tt_3
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.a.tt
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_friend_effect = {
						REASON = friend_promised_to_support_claim
						CHARACTER = scope:coronation_claimant
						OPINION = default_friend_opinion
					}
				}
			}
		}
		trigger_event = coronation.2011 #Triggers the event to talk to AI vassals and send ravens to  player vassals
		ai_chance = {
			base = 0
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = 1.5
			}
			opinion_modifier = { # More likely to accept if Recipient likes the Actor
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = -1.5
			}
			#Allies
			modifier = {
				add = {
					scope:coronation_claimant = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_claimant = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
			ai_value_modifier = {
				ai_rationality = {
					if = {
						limit = {
							NOT = { scope:potential_supporter = { ai_rationality = 0 } }
							scope:coronation_claimant = {
								any_ally = {
									highest_held_title_tier = tier_kingdom
									count >= 1
								}
							}
						}
						value = 1.5
					}
				}
			}
			#Friends
			modifier = { # Friends
				add = 250
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 500
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			# Rivalry
			modifier = { # Say no to rivals
				add = -100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_claimant
					NOT = { has_relation_nemesis = scope:coronation_claimant }
				}
			}
			modifier = { # Say no to nemesis
				add = -300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is rival
				add = 100
				scope:potential_supporter = {
					has_relation_rival = scope:coronation_target
					NOT = { has_relation_nemesis = scope:coronation_target }
				}
			}
			modifier = { # Ruler is nemesis
				add = 300
				scope:potential_supporter = {
					has_relation_nemesis = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your rivals
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your nemesis
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your rival
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_rival = scope:potential_supporter
								NOT = { has_relation_nemesis = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your nemesis
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_nemesis = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_vassal = {
							limit = {
								exists = var:mw_is_loyal_to
								var:mw_is_loyal_to = scope:coronation_target
								highest_held_title_tier = tier_kingdom
							}
							add = 100
						}
					}
				}
			}
			modifier = {
				scope:coronation_claimant.culture = { has_cultural_parameter = facilitate_alliance_acceptance }
				add = 50 #should be in a file 00_traditions_values
			}
			modifier = {
				scope:coronation_claimant = {
					any_claim = {
						holder = scope:potential_supporter
					}
				}
				add = 25
			}
		}
	}

	# Option B: Refuse, keep it to yourself
	option = {
		name = coronation.2002.b
		custom_tooltip = coronation.2002.b.tt
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.b_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
			}
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.0
			}
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_claimant
				multiplier = -1.75
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}

	# Option C: Inform the King/Queen
	option = {
		name = coronation.2002.c
		custom_tooltip = coronation.2002.c.tt
		#scope:coronation_target = { trigger_event = coronation.2014 }
		scope:coronation_claimant = {
			send_interface_toast = {
				title = coronation.2002.c_failure
				left_icon = scope:coronation_claimant
				right_icon = scope:potential_supporter
				scope:potential_supporter = {
					progress_towards_rival_effect = {
						CHARACTER = scope:coronation_claimant
						REASON = rival_betrayed_confidence
						OPINION = default_rival_opinion
					}
				}
			}
			#trigger_event = coronation.2007
		}
		ai_chance = {
			base = 0
			opinion_modifier = {
				who = scope:potential_supporter
				opinion_target = scope:coronation_target
				multiplier = 1.5
			}
			modifier = {
				add = 1000
				is_allied_to = scope:coronation_target
			}
			# Friends
			modifier = { # Friends
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_claimant
					NOT = { has_relation_best_friend = scope:coronation_claimant }
				}
			}
			modifier = { # Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_claimant
				}
			}
			modifier = { # Ruler is friend
				add = 100
				scope:potential_supporter = {
					has_relation_friend = scope:coronation_target
					NOT = { has_relation_best_friend = scope:coronation_target }
				}
			}
			modifier = { # Ruler is Best Friend
				add = 300
				scope:potential_supporter = {
					has_relation_best_friend = scope:coronation_target
				}
			}
			modifier = { # Ruler's allies are your friends
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = 100
						}
					}
				}
			}
			modifier = { # Ruler's allies are your Best Friend
				add = {
					scope:coronation_target = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = 300
						}
					}
				}
			}
			modifier = { # Claimant's allies are your friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_friend = scope:potential_supporter
								NOT = { has_relation_best_friend = scope:potential_supporter }
							}
							add = -100
						}
					}
				}
			}
			modifier = { # Claimant's ally is your best_friend
				add = {
					scope:coronation_claimant = {
						every_ally = {
							limit = {
								has_relation_best_friend = scope:potential_supporter
							}
							add = -300
						}
					}
				}
			}
			modifier = {
				add = {
					scope:coronation_target = {
						every_ally = {
							add = 50
						}
					}
				}
				scope:coronation_target = {
					any_ally = {
						highest_held_title_tier = tier_kingdom
						count >= 1
					}
				}
			}
		}
	}
}

#Supporter asks attending AI vassals (Player vassals are handled differently)
coronation.2011 = {
	type = activity_event
	title = coronation.2011.t
	desc = coronation.2011.desc
	theme = coronation_ceremony_activity
	override_background = sitting_room
	left_portrait = {
		character = root
		animation = personality_callous
		camera = camera_event_very_left
	}
	right_portrait = {
		character = scope:vassal_objector
		triggered_animation = {
			trigger = {
				OR = {
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 1
						}
					}
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 2
						}
					}
				}
			}
			animation = shame
		}
		animation = personality_bold
		camera = camera_event_right
	}

	cooldown = { years = 1 }

	trigger = {
		scope:activity = {
			any_attending_character = {
				is_vassal_of = root
			}
		}
	}

	on_trigger_fail = {
		save_scope_as = potential_supporter
		trigger_event = coronation.2013
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = potential_supporter
		if = { #Powerful vassals who are rational will be hesitant
			limit = {
				scope:activity = {
					any_attending_character = {
						is_powerful_vassal_of = scope:potential_supporter
						is_ai = yes
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_powerful_vassal_of = scope:potential_supporter
						is_ai = yes
					}
					save_scope_as = vassal_objector
				}
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_councillor_of = scope:potential_supporter
						is_ai = yes
					}
				}
			}
			scope:activity = {
				random_attending_character = {
					limit = {
						is_councillor_of = scope:potential_supporter
						is_ai = yes
					}
					save_scope_as = vassal_objector
				}
			}
		}
	}

	# Option A: Appeal to diplomacy
	option = {
		name = coronation.2011.a

		duel = {
			skill = diplomacy
			target = scope:vassal_objector

			70 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				opinion_modifier = {
					who = scope:vassal_objector
					opinion_target = scope:potential_supporter
					multiplier = 1.0
				}
				opinion_modifier = {
					who = scope:vassal_objector
					opinion_target = scope:coronation_claimant
					multiplier = 1.0
				}
				desc = coronation.2011.a.success
				send_interface_toast = {
					title = coronation.2011.a.success.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					# Effect
					custom_tooltip = {
						text = coronation.2011.a.success_join
						if = {
							limit = {
								scope:activity = {
									any_attending_character = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
							}
							scope:activity = {
								every_attending_character = {
									limit = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
								set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
								add_opinion = {
									target = scope:potential_supporter
									modifier = grateful_opinion
									opinion = 15
								}
							}
						}
					}
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.success.tt
							left_icon = scope:potential_supporter
							right_icon = scope:coronation_claimant
							custom_tooltip = {
								text = coronation.2011.a.success_join
							}
						}
					}
				}
			}

			30 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.2011.a.failure
				send_interface_toast = {
					title = coronation.2011.a.failure.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					custom_tooltip = coronation.2011.a.failure_join
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.failure.tt
							left_icon = scope:potential_supporter
							right_icon = scope:vassal_objector
							custom_tooltip = coronation.2011.a.failure_join
						}
					}
				}
			}
		}


		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option B: I will protect you
	option = {
		name = coronation.2011.b

		duel = {
			skills = { martial prowess }
			target = scope:vassal_objector

			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					add = 350
					scope:vassal_objector = {
						current_military_strength <= scope:potential_supporter.eighty_percent_of_current_military_strength
					}
				}
				desc = coronation.2011.a.success
				send_interface_toast = {
					title = coronation.2011.a.success.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					# Effect
					custom_tooltip = {
						text = coronation.2011.a.success_join
						if = {
							limit = {
								scope:activity = {
									any_attending_character = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
							}
							scope:activity = {
								every_attending_character = {
									limit = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
								set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
								add_opinion = {
									target = scope:potential_supporter
									modifier = grateful_opinion
									opinion = 15
								}
							}
						}
					}
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.success.tt
							left_icon = scope:potential_supporter
							right_icon = scope:coronation_claimant
							custom_tooltip = {
								text = coronation.2011.a.success_join
							}
						}
					}
				}
			}

			60 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = coronation.2011.a.failure
				send_interface_toast = {
					title = coronation.2011.a.failure.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					custom_tooltip = coronation.2011.a.failure_join
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.failure.tt
							left_icon = scope:potential_supporter
							right_icon = scope:vassal_objector
							custom_tooltip = coronation.2011.a.failure_join
						}
					}
				}
			}
		}

		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = coronation.2011.c

		duel = {
			value = agot_coronation_dread
			target = scope:vassal_objector
			localization = agot_coronation_dread_challenge

			30 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.75
					min = -49
				}
				modifier = {
					add = 100
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 1
						}
					}
				}
				modifier = {
					add = 300
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 2
						}
					}
				}
				ai_value_modifier = {
					ai_boldness = {
						if = {
							limit = {
								NOT = { scope:vassal_objector = { ai_boldness = 0 } }
							}
							value = -1.5
						}
					}
					ai_rationality = {
						if = {
							limit = {
								NOT = { scope:vassal_objector = { ai_rationality = 0 } }
							}
							value = 1.5
						}
					}
				}
				desc = coronation.2011.a.success
				send_interface_toast = {
					title = coronation.2011.a.success.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					# Effect
					custom_tooltip = {
						text = coronation.2011.a.success_join
						if = {
							limit = {
								scope:activity = {
									any_attending_character = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
							}
							scope:activity = {
								every_attending_character = {
									limit = {
										is_vassal_of = scope:potential_supporter
										is_ai = yes
									}
								}
								set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
								add_opinion = {
									target = scope:potential_supporter
									modifier = grateful_opinion
									opinion = 15
								}
							}
						}
					}
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.success.tt
							left_icon = scope:potential_supporter
							right_icon = scope:coronation_claimant
							custom_tooltip = {
								text = coronation.2011.a.success_join
							}
						}
					}
				}
			}

			70 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1.75
					min = -49
				}
				modifier = {
					add = -1000
					AND = {
						scope:potential_supporter = character:Lannister_1
						OR = {
							game_start_date > 8258.12.21 # After the Reynes are destroyed
							exists = var:castamere_destroyed
						}
					}
					OR = {
						scope:vassal_objector = {
							ai_boldness < 0
						}
						scope:vassal_objector = {
							ai_rationality >= 20
						}
						scope:vassal_objector = {
							target_is_liege_or_above = scope:potential_supporter
							has_dread_level_towards = {
								target = scope:potential_supporter
								level = 1
							}
						}
						scope:vassal_objector = {
							target_is_liege_or_above = scope:potential_supporter
							has_dread_level_towards = {
								target = scope:potential_supporter
								level = 2
							}
						}
					}
				}
				desc = coronation.2011.a.failure
				send_interface_toast = {
					title = coronation.2011.a.failure.tt
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_objector
					custom_tooltip = coronation.2011.a.failure_join
				}
				hidden_effect = {
					scope:coronation_claimant = {
						send_interface_toast = {
							title = coronation.2011.a.failure.tt
							left_icon = scope:potential_supporter
							right_icon = scope:vassal_objector
							custom_tooltip = coronation.2011.a.failure_join
						}
					}
				}
			}
		}

		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}
	after = {
		if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						is_vassal_of = scope:potential_supporter
						is_ai = no
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						is_vassal_of = scope:potential_supporter
						is_ai = no
					}
					trigger_event = coronation.2012
				}
			}
		}
		else_if = {
			limit = {
				scope:potential_supporter = {
					any_vassal = {
						NOT = { location = scope:potential_supporter.location }
					}
				}
			}
			scope:potential_supporter = {
				every_vassal = {
					limit = {
						NOT = { location = scope:potential_supporter.location }
					}
					trigger_event = {
						id = coronation.2013
						days = 2
					}
				}
			}
		}
	}
}

#Player vassals responds
coronation.2012 = {
	type = activity_event
	title = coronation.2011.t
	desc = coronation.2012.desc
	theme = coronation_ceremony_activity
	override_background = sitting_room
	left_portrait = {
		character = scope:potential_supporter
		animation = personality_callous
		camera = camera_event_very_left
	}
	center_portrait = {
		character = scope:vassal_objector
		triggered_animation = {
			trigger = {
				OR = {
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 1
						}
					}
					scope:vassal_objector = {
						target_is_liege_or_above = scope:potential_supporter
						has_dread_level_towards = {
							target = scope:potential_supporter
							level = 2
						}
					}
				}
			}
			animation = shame
		}
		animation = personality_bold
		camera = camera_event_right
	}
	right_portrait = {
		character = root
		animation = personality_rational
	}

	cooldown = { years = 1 }

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_as = vassal_respondant
	}

	# Option A: Agree
	option = {
		name = coronation.2012.a
		custom_tooltip = coronation.2012.a.tt
		scope:potential_supporter = {
			send_interface_toast = {
				title = coronation.2012.a.success_join
				left_icon = scope:potential_supporter
				right_icon = scope:vassal_respondant
				# Effect
				scope:vassal_respondant = {
					set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
				}
			}
		}
		hidden_effect = {
			scope:coronation_claimant = {
				send_interface_toast = {
					title = coronation.2012.a.success_join
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_respondant
				}
			}
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}

	# Option B: Refuse
	option = {
		name = coronation.2012.b
		scope:potential_supporter = {
			send_interface_toast = {
				title = coronation.2012.a.failure_join
				left_icon = scope:potential_supporter
				right_icon = scope:vassal_respondant
			}
		}
		hidden_effect = {
			scope:coronation_claimant = {
				send_interface_toast = {
					title = coronation.2012.a.failure_join
					left_icon = scope:potential_supporter
					right_icon = scope:vassal_respondant
				}
			}
		}
		# AI usually chooses someone
		ai_chance = {
			base = 100
		}
	}
}

# LETTERS TO ABSENT VASSALS
coronation.2013 = {
	type = letter_event
	opening = {
		desc = coronation.2013.opening
	}
	desc = coronation.2013.desc
	sender = scope:sender

	trigger = {
		is_vassal_of = scope:potential_supporter
		NOT = { location = scope:potential_supporter.location }
	}

	immediate = {
		save_scope_as = title_holder
		scope:potential_supporter = {
			save_scope_as = sender
		}
		scope:coronation_target = {
			save_scope_as = mw_crown
		}
		scope:coronation_claimant = {
			save_scope_as = mw_rebel_leader
		}
	}

	option = {
		name = coronation.2013.a
		set_variable = { name = mw_is_loyal_to value = scope:coronation_claimant }
		custom_tooltip = coronation.2013.a.tt
		ai_chance = {
			base = 0
			agot_mw_choose_stance_modifier = { TARGET = scope:mw_rebel_leader.primary_title }
		}
	}

	option = {
		name = coronation.2013.b

		custom_tooltip = coronation.2013.b.tt
		ai_chance = {
			base = 0
			agot_mw_choose_stance_modifier = { TARGET = scope:title_holder.primary_title }
		}
	}

	option = {
		name = coronation.2013.c
		custom_tooltip = coronation.2013.c.tt
		set_variable = { name = mw_is_loyal_to value = scope:coronation_target }
		ai_chance = {
			base = 0
			agot_mw_choose_stance_modifier = { TARGET = scope:mw_crown.primary_title }
		}
	}

	after = {
		remove_variable = is_handling_coronation_invitation
	}
}

# Host that someone is trying to gain support from vassals
coronation.2014 = {
	type = activity_event
	title = coronation.2014.t
	desc = coronation.2014.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = scope:coronation_target
		animation = disbelief
	}
	center_portrait = {
		character = scope:coronation_claimant
		animation = personality_bold
	}
	right_portrait = {
		character = scope:officiant
		animation = shock
	}

	cooldown = { years = 1 }

	widget = {
		gui = "event_window_widget_activity_intent"
		container = "custom_widgets_container"
	}

	trigger = {
		root = scope:activity.special_guest:coronation_target
		scope:activity = {
			has_variable = has_had_sabotage_intent_1000_event
		}
		exists = scope:coronation_claimant
		scope:activity = {
			any_attending_character = {
				has_character_flag = coronation_claimant
			}
		}
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		add_character_flag = busy_in_coronation_event
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
			add_opinion = {
				target = scope:coronation_claimant
				modifier = angry_opinion
				opinion = -25
			}
		}
	}

	# Option A: Just send them home
	option = {
		name = coronation.2014.a
		flavor = coronation.2014.a.tt
		stress_impact = {
			base = minor_stress_impact_loss
			deceitful = medium_stress_impact_gain
			arbitrary = medium_stress_impact_gain
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_gain
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_loss
			diligent = medium_stress_impact_loss
		}
		scope:coronation_claimant = {
			remove_from_activity = scope:activity
			add_prestige = medium_prestige_loss
			stress_impact = {
				base = medium_stress_impact_gain
			}
			add_opinion = {
				target = scope:coronation_target
				modifier = angry_opinion
				opinion = -15
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = just
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = 1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							root = { ai_honor > 0 }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							NOT = { root = { ai_vengefulness = 0 } }
						}
						value = 1.25
					}
				}
			}
			opinion_modifier = { #Liking the coronation_claimant will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:coronation_claimant
				multiplier = 2.5
			}
		}
	}

	# Option B: Imprison them
	option = {
		name = coronation.2014.b
		stress_impact = {
			base = minor_stress_impact_gain
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		random_list = {
			15 = {
				desc = coronation.2014.imprison
				imprison_character_effect = {
					TARGET = scope:coronation_claimant
					IMPRISONER = scope:coronation_target
				}
				scope:coronation_claimant = {
					remove_from_activity = scope:activity
					add_prestige = medium_prestige_loss
					stress_impact = {
						base = medium_stress_impact_gain
					}
				}
			}
			85 = {
				desc = coronation.2014.escapes
				scope:coronation_claimant = {
					start_war = {
						cb = agot_claimant_faction_war
						target = scope:coronation_target
						claimant = scope:coronation_claimant
						target_title = title:e_the_iron_throne
						target_title = title:k_the_crownlands
						target_title = title:d_kings_landing
						target_title = title:c_kings_landing
						target_title = title:k_dragonstone
						target_title = title:d_dragonstone
						target_title = title:c_dragonstone
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				has_trait = arbitrary
				add = -1000
			}
			modifier = {
				has_trait = wrathful
				add = 50
			}
			modifier = {
				has_trait = vengeful
				add = 100
			}
			modifier = {
				add = 100
			}
			modifier = {
				is_allied_to = scope:coronation_claimant
				add = -1000
			}
			modifier = {
				any_relation = { type = rival this = scope:coronation_claimant }
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = 1.5
					}
				}
				ai_honor = {
					if = {
						limit = {
							root = { ai_honor < 0 }
						}
						value = 1.5
					}
				}
				ai_energy = {
					if = {
						limit = {
							NOT = { root = { ai_energy = 0 } }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							root = { ai_vengefulness > 0 }
						}
						value = 1.75
					}
				}
			}
			opinion_modifier = { #Liking the coronation_claimant will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:coronation_claimant
				multiplier = 2.5
			}
		}
	}

	# Option C: Do nothing
	option = {
		name = coronation.2014.c
		stress_impact = {
			base = minor_stress_impact_gain
			arbitrary = medium_stress_impact_loss
			callous = medium_stress_impact_gain
			sadistic = major_stress_impact_gain
			lazy = medium_stress_impact_loss
			just = medium_stress_impact_gain
			wrathful = medium_stress_impact_gain
			forgiving = medium_stress_impact_loss
		}
		add_legitimacy = -75
		scope:coronation_claimant = {
			add_opinion = {
				target = scope:coronation_target
				modifier = pleased_opinion
				opinion = 25
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				any_relation = { type = friend this = scope:coronation_claimant }
				add = 1000
			}
			modifier = {
				any_relation = { type = lover this = scope:coronation_claimant }
				add = 1000
			}
			ai_value_modifier = {
				ai_boldness = {
					if = {
						limit = {
							NOT = { root = { ai_boldness = 0 } }
						}
						value = -1.75
					}
				}
				ai_energy = {
					if = {
						limit = {
							root = { ai_energy < 0 }
						}
						value = 1.5
					}
				}
				ai_vengefulness = {
					if = {
						limit = {
							NOT = { root = { ai_vengefulness = 0 } }
						}
						value = 2.5
					}
				}
			}
			opinion_modifier = { #Liking the coronation_claimant will make liege more lenient
				who = scope:coronation_target
				opinion_target = scope:coronation_claimant
				multiplier = 2.5
			}
		}
	}

	after = {
		remove_character_flag = busy_in_coronation_event
	}
}

coronation.2015 = {
	type = activity_event
	title = coronation.2015.t
	desc = coronation.2015.desc
	theme = coronation_ceremony_activity
	left_portrait = {
		character = root
		animation = scheme
	}
	center_portrait = {
		character = scope:coronation_target
		triggered_animation = {
			trigger = {
				exists = scope:officiant
			}
			animation = throne_room_bow_1
		}
		animation = personality_bold
		camera = camera_event_right_wedding
	}
	right_portrait = {
		character = scope:officiant
		animation = wedding_priest
	}

	trigger = {
		exists = scope:activity.special_guest:coronation_target
		scope:activity = {
			any_attending_character = {
				has_character_flag = coronation_claimant
			}
		}
		OR = {
			scope:activity = {
				any_attending_character = {
					has_character_flag = officiant
				}
			}
			AND = {
				exists = scope:activity.special_guest:coronation_officiant
				scope:activity = {
					any_attending_character = {
						scope:activity.special_guest:coronation_officiant = {
							is_alive = yes
							is_incapable = no
							is_imprisoned = no
						}
					}
				}
			}
		}
	}

	immediate = {
		scope:activity.special_guest:coronation_target = {
			save_scope_as = coronation_target
		}
		if = {
			limit = {
				scope:activity.special_guest:coronation_officiant = {
					NOR = {
						is_alive = no
						is_incapable = yes
						is_imprisoned = yes
						has_character_flag = removed_as_officiant
					}
				}
			}
			scope:activity.special_guest:coronation_officiant = {
				save_scope_as = officiant
			}
		}
		else_if = {
			limit = {
				scope:activity = {
					any_attending_character = {
						has_character_flag = officiant
						NOT = { has_character_flag = removed_as_officiant }
					}
				}
			}
			scope:activity = {
				every_attending_character = {
					limit = {
						has_character_flag = officiant
						NOT = { has_character_flag = removed_as_officiant }
					}
					save_scope_as = officiant
				}
			}
		}
		save_scope_as = coronation_claimant
	}

	#Option A: Object!
	option = {
		name = coronation.2015.a
		custom_tooltip = coronation.2015.a.tt
		flavor = coronation.2015.a.flavor
		scope:activity = {
			every_attending_character = {
				limit = {
					NOR = {
						this = scope:coronation_target
						this = scope:coronation_claimant
					}
				}
				send_interface_toast = {
					title = coronation.2015.a.objection
					left_icon = scope:coronation_claimant
					right_icon = scope:coronation_target
				}
			}
		}
		scope:coronation_target = {
			trigger_event = coronation.2014
		}
		ai_chance = {
			base = 100
		}
	}

	#Option B: Stay Silent
	option = {
		name = coronation.2015.b
		custom_tooltip = coronation.2015.b.tt
		ai_chance = {
			base = 0
		}
	}
}